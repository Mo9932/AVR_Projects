
Calculadtor_M1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000030e6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000140  00800060  000030e6  0000315a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002208  00000000  00000000  0000329c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000ea2  00000000  00000000  000054a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001e0  00000000  00000000  00006346  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000232  00000000  00000000  00006526  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002891  00000000  00000000  00006758  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001628  00000000  00000000  00008fe9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013de  00000000  00000000  0000a611  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  0000b9f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000030f  00000000  00000000  0000bbf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a56  00000000  00000000  0000beff  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000c955  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 ee       	ldi	r30, 0xE6	; 230
      68:	f0 e3       	ldi	r31, 0x30	; 48
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 3a       	cpi	r26, 0xA0	; 160
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 3f 15 	call	0x2a7e	; 0x2a7e <main>
      7a:	0c 94 71 18 	jmp	0x30e2	; 0x30e2 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 1d 04 	call	0x83a	; 0x83a <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 db 04 	call	0x9b6	; 0x9b6 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 db 04 	call	0x9b6	; 0x9b6 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 3a 18 	jmp	0x3074	; 0x3074 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a6 e7       	ldi	r26, 0x76	; 118
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 56 18 	jmp	0x30ac	; 0x30ac <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 46 18 	jmp	0x308c	; 0x308c <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f7 05 	call	0xbee	; 0xbee <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 62 18 	jmp	0x30c4	; 0x30c4 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 46 18 	jmp	0x308c	; 0x308c <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f7 05 	call	0xbee	; 0xbee <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 62 18 	jmp	0x30c4	; 0x30c4 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 3a 18 	jmp	0x3074	; 0x3074 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	86 e7       	ldi	r24, 0x76	; 118
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f7 05 	call	0xbee	; 0xbee <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 56 18 	jmp	0x30ac	; 0x30ac <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 42 18 	jmp	0x3084	; 0x3084 <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	66 e7       	ldi	r22, 0x76	; 118
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 f7 05 	call	0xbee	; 0xbee <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 5e 18 	jmp	0x30bc	; 0x30bc <__epilogue_restores__+0x10>

0000077a <__eqsf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 46 18 	jmp	0x308c	; 0x308c <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__eqsf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__eqsf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 44 07 	call	0xe88	; 0xe88 <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__eqsf2+0x58>
     7d0:	81 e0       	ldi	r24, 0x01	; 1
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 62 18 	jmp	0x30c4	; 0x30c4 <__epilogue_restores__+0x18>

000007da <__gtsf2>:
     7da:	a8 e1       	ldi	r26, 0x18	; 24
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 46 18 	jmp	0x308c	; 0x308c <__prologue_saves__+0x18>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	2d 83       	std	Y+5, r18	; 0x05
     7f0:	3e 83       	std	Y+6, r19	; 0x06
     7f2:	4f 83       	std	Y+7, r20	; 0x07
     7f4:	58 87       	std	Y+8, r21	; 0x08
     7f6:	89 e0       	ldi	r24, 0x09	; 9
     7f8:	e8 2e       	mov	r14, r24
     7fa:	f1 2c       	mov	r15, r1
     7fc:	ec 0e       	add	r14, r28
     7fe:	fd 1e       	adc	r15, r29
     800:	ce 01       	movw	r24, r28
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	b7 01       	movw	r22, r14
     806:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     80a:	8e 01       	movw	r16, r28
     80c:	0f 5e       	subi	r16, 0xEF	; 239
     80e:	1f 4f       	sbci	r17, 0xFF	; 255
     810:	ce 01       	movw	r24, r28
     812:	05 96       	adiw	r24, 0x05	; 5
     814:	b8 01       	movw	r22, r16
     816:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     81a:	89 85       	ldd	r24, Y+9	; 0x09
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	40 f0       	brcs	.+16     	; 0x830 <__gtsf2+0x56>
     820:	89 89       	ldd	r24, Y+17	; 0x11
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	28 f0       	brcs	.+10     	; 0x830 <__gtsf2+0x56>
     826:	c7 01       	movw	r24, r14
     828:	b8 01       	movw	r22, r16
     82a:	0e 94 44 07 	call	0xe88	; 0xe88 <__fpcmp_parts_f>
     82e:	01 c0       	rjmp	.+2      	; 0x832 <__gtsf2+0x58>
     830:	8f ef       	ldi	r24, 0xFF	; 255
     832:	68 96       	adiw	r28, 0x18	; 24
     834:	e6 e0       	ldi	r30, 0x06	; 6
     836:	0c 94 62 18 	jmp	0x30c4	; 0x30c4 <__epilogue_restores__+0x18>

0000083a <__gesf2>:
     83a:	a8 e1       	ldi	r26, 0x18	; 24
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 46 18 	jmp	0x308c	; 0x308c <__prologue_saves__+0x18>
     846:	69 83       	std	Y+1, r22	; 0x01
     848:	7a 83       	std	Y+2, r23	; 0x02
     84a:	8b 83       	std	Y+3, r24	; 0x03
     84c:	9c 83       	std	Y+4, r25	; 0x04
     84e:	2d 83       	std	Y+5, r18	; 0x05
     850:	3e 83       	std	Y+6, r19	; 0x06
     852:	4f 83       	std	Y+7, r20	; 0x07
     854:	58 87       	std	Y+8, r21	; 0x08
     856:	89 e0       	ldi	r24, 0x09	; 9
     858:	e8 2e       	mov	r14, r24
     85a:	f1 2c       	mov	r15, r1
     85c:	ec 0e       	add	r14, r28
     85e:	fd 1e       	adc	r15, r29
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	b7 01       	movw	r22, r14
     866:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     86a:	8e 01       	movw	r16, r28
     86c:	0f 5e       	subi	r16, 0xEF	; 239
     86e:	1f 4f       	sbci	r17, 0xFF	; 255
     870:	ce 01       	movw	r24, r28
     872:	05 96       	adiw	r24, 0x05	; 5
     874:	b8 01       	movw	r22, r16
     876:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     87a:	89 85       	ldd	r24, Y+9	; 0x09
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	40 f0       	brcs	.+16     	; 0x890 <__stack+0x31>
     880:	89 89       	ldd	r24, Y+17	; 0x11
     882:	82 30       	cpi	r24, 0x02	; 2
     884:	28 f0       	brcs	.+10     	; 0x890 <__stack+0x31>
     886:	c7 01       	movw	r24, r14
     888:	b8 01       	movw	r22, r16
     88a:	0e 94 44 07 	call	0xe88	; 0xe88 <__fpcmp_parts_f>
     88e:	01 c0       	rjmp	.+2      	; 0x892 <__stack+0x33>
     890:	8f ef       	ldi	r24, 0xFF	; 255
     892:	68 96       	adiw	r28, 0x18	; 24
     894:	e6 e0       	ldi	r30, 0x06	; 6
     896:	0c 94 62 18 	jmp	0x30c4	; 0x30c4 <__epilogue_restores__+0x18>

0000089a <__ltsf2>:
     89a:	a8 e1       	ldi	r26, 0x18	; 24
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e3 e5       	ldi	r30, 0x53	; 83
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	0c 94 46 18 	jmp	0x308c	; 0x308c <__prologue_saves__+0x18>
     8a6:	69 83       	std	Y+1, r22	; 0x01
     8a8:	7a 83       	std	Y+2, r23	; 0x02
     8aa:	8b 83       	std	Y+3, r24	; 0x03
     8ac:	9c 83       	std	Y+4, r25	; 0x04
     8ae:	2d 83       	std	Y+5, r18	; 0x05
     8b0:	3e 83       	std	Y+6, r19	; 0x06
     8b2:	4f 83       	std	Y+7, r20	; 0x07
     8b4:	58 87       	std	Y+8, r21	; 0x08
     8b6:	89 e0       	ldi	r24, 0x09	; 9
     8b8:	e8 2e       	mov	r14, r24
     8ba:	f1 2c       	mov	r15, r1
     8bc:	ec 0e       	add	r14, r28
     8be:	fd 1e       	adc	r15, r29
     8c0:	ce 01       	movw	r24, r28
     8c2:	01 96       	adiw	r24, 0x01	; 1
     8c4:	b7 01       	movw	r22, r14
     8c6:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     8ca:	8e 01       	movw	r16, r28
     8cc:	0f 5e       	subi	r16, 0xEF	; 239
     8ce:	1f 4f       	sbci	r17, 0xFF	; 255
     8d0:	ce 01       	movw	r24, r28
     8d2:	05 96       	adiw	r24, 0x05	; 5
     8d4:	b8 01       	movw	r22, r16
     8d6:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     8da:	89 85       	ldd	r24, Y+9	; 0x09
     8dc:	82 30       	cpi	r24, 0x02	; 2
     8de:	40 f0       	brcs	.+16     	; 0x8f0 <__ltsf2+0x56>
     8e0:	89 89       	ldd	r24, Y+17	; 0x11
     8e2:	82 30       	cpi	r24, 0x02	; 2
     8e4:	28 f0       	brcs	.+10     	; 0x8f0 <__ltsf2+0x56>
     8e6:	c7 01       	movw	r24, r14
     8e8:	b8 01       	movw	r22, r16
     8ea:	0e 94 44 07 	call	0xe88	; 0xe88 <__fpcmp_parts_f>
     8ee:	01 c0       	rjmp	.+2      	; 0x8f2 <__ltsf2+0x58>
     8f0:	81 e0       	ldi	r24, 0x01	; 1
     8f2:	68 96       	adiw	r28, 0x18	; 24
     8f4:	e6 e0       	ldi	r30, 0x06	; 6
     8f6:	0c 94 62 18 	jmp	0x30c4	; 0x30c4 <__epilogue_restores__+0x18>

000008fa <__floatsisf>:
     8fa:	a8 e0       	ldi	r26, 0x08	; 8
     8fc:	b0 e0       	ldi	r27, 0x00	; 0
     8fe:	e3 e8       	ldi	r30, 0x83	; 131
     900:	f4 e0       	ldi	r31, 0x04	; 4
     902:	0c 94 43 18 	jmp	0x3086	; 0x3086 <__prologue_saves__+0x12>
     906:	9b 01       	movw	r18, r22
     908:	ac 01       	movw	r20, r24
     90a:	83 e0       	ldi	r24, 0x03	; 3
     90c:	89 83       	std	Y+1, r24	; 0x01
     90e:	da 01       	movw	r26, r20
     910:	c9 01       	movw	r24, r18
     912:	88 27       	eor	r24, r24
     914:	b7 fd       	sbrc	r27, 7
     916:	83 95       	inc	r24
     918:	99 27       	eor	r25, r25
     91a:	aa 27       	eor	r26, r26
     91c:	bb 27       	eor	r27, r27
     91e:	b8 2e       	mov	r11, r24
     920:	21 15       	cp	r18, r1
     922:	31 05       	cpc	r19, r1
     924:	41 05       	cpc	r20, r1
     926:	51 05       	cpc	r21, r1
     928:	19 f4       	brne	.+6      	; 0x930 <__floatsisf+0x36>
     92a:	82 e0       	ldi	r24, 0x02	; 2
     92c:	89 83       	std	Y+1, r24	; 0x01
     92e:	3a c0       	rjmp	.+116    	; 0x9a4 <__floatsisf+0xaa>
     930:	88 23       	and	r24, r24
     932:	a9 f0       	breq	.+42     	; 0x95e <__floatsisf+0x64>
     934:	20 30       	cpi	r18, 0x00	; 0
     936:	80 e0       	ldi	r24, 0x00	; 0
     938:	38 07       	cpc	r19, r24
     93a:	80 e0       	ldi	r24, 0x00	; 0
     93c:	48 07       	cpc	r20, r24
     93e:	80 e8       	ldi	r24, 0x80	; 128
     940:	58 07       	cpc	r21, r24
     942:	29 f4       	brne	.+10     	; 0x94e <__floatsisf+0x54>
     944:	60 e0       	ldi	r22, 0x00	; 0
     946:	70 e0       	ldi	r23, 0x00	; 0
     948:	80 e0       	ldi	r24, 0x00	; 0
     94a:	9f ec       	ldi	r25, 0xCF	; 207
     94c:	30 c0       	rjmp	.+96     	; 0x9ae <__floatsisf+0xb4>
     94e:	ee 24       	eor	r14, r14
     950:	ff 24       	eor	r15, r15
     952:	87 01       	movw	r16, r14
     954:	e2 1a       	sub	r14, r18
     956:	f3 0a       	sbc	r15, r19
     958:	04 0b       	sbc	r16, r20
     95a:	15 0b       	sbc	r17, r21
     95c:	02 c0       	rjmp	.+4      	; 0x962 <__floatsisf+0x68>
     95e:	79 01       	movw	r14, r18
     960:	8a 01       	movw	r16, r20
     962:	8e e1       	ldi	r24, 0x1E	; 30
     964:	c8 2e       	mov	r12, r24
     966:	d1 2c       	mov	r13, r1
     968:	dc 82       	std	Y+4, r13	; 0x04
     96a:	cb 82       	std	Y+3, r12	; 0x03
     96c:	ed 82       	std	Y+5, r14	; 0x05
     96e:	fe 82       	std	Y+6, r15	; 0x06
     970:	0f 83       	std	Y+7, r16	; 0x07
     972:	18 87       	std	Y+8, r17	; 0x08
     974:	c8 01       	movw	r24, r16
     976:	b7 01       	movw	r22, r14
     978:	0e 94 a8 05 	call	0xb50	; 0xb50 <__clzsi2>
     97c:	01 97       	sbiw	r24, 0x01	; 1
     97e:	18 16       	cp	r1, r24
     980:	19 06       	cpc	r1, r25
     982:	84 f4       	brge	.+32     	; 0x9a4 <__floatsisf+0xaa>
     984:	08 2e       	mov	r0, r24
     986:	04 c0       	rjmp	.+8      	; 0x990 <__floatsisf+0x96>
     988:	ee 0c       	add	r14, r14
     98a:	ff 1c       	adc	r15, r15
     98c:	00 1f       	adc	r16, r16
     98e:	11 1f       	adc	r17, r17
     990:	0a 94       	dec	r0
     992:	d2 f7       	brpl	.-12     	; 0x988 <__floatsisf+0x8e>
     994:	ed 82       	std	Y+5, r14	; 0x05
     996:	fe 82       	std	Y+6, r15	; 0x06
     998:	0f 83       	std	Y+7, r16	; 0x07
     99a:	18 87       	std	Y+8, r17	; 0x08
     99c:	c8 1a       	sub	r12, r24
     99e:	d9 0a       	sbc	r13, r25
     9a0:	dc 82       	std	Y+4, r13	; 0x04
     9a2:	cb 82       	std	Y+3, r12	; 0x03
     9a4:	ba 82       	std	Y+2, r11	; 0x02
     9a6:	ce 01       	movw	r24, r28
     9a8:	01 96       	adiw	r24, 0x01	; 1
     9aa:	0e 94 f7 05 	call	0xbee	; 0xbee <__pack_f>
     9ae:	28 96       	adiw	r28, 0x08	; 8
     9b0:	e9 e0       	ldi	r30, 0x09	; 9
     9b2:	0c 94 5f 18 	jmp	0x30be	; 0x30be <__epilogue_restores__+0x12>

000009b6 <__fixsfsi>:
     9b6:	ac e0       	ldi	r26, 0x0C	; 12
     9b8:	b0 e0       	ldi	r27, 0x00	; 0
     9ba:	e1 ee       	ldi	r30, 0xE1	; 225
     9bc:	f4 e0       	ldi	r31, 0x04	; 4
     9be:	0c 94 4a 18 	jmp	0x3094	; 0x3094 <__prologue_saves__+0x20>
     9c2:	69 83       	std	Y+1, r22	; 0x01
     9c4:	7a 83       	std	Y+2, r23	; 0x02
     9c6:	8b 83       	std	Y+3, r24	; 0x03
     9c8:	9c 83       	std	Y+4, r25	; 0x04
     9ca:	ce 01       	movw	r24, r28
     9cc:	01 96       	adiw	r24, 0x01	; 1
     9ce:	be 01       	movw	r22, r28
     9d0:	6b 5f       	subi	r22, 0xFB	; 251
     9d2:	7f 4f       	sbci	r23, 0xFF	; 255
     9d4:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     9d8:	8d 81       	ldd	r24, Y+5	; 0x05
     9da:	82 30       	cpi	r24, 0x02	; 2
     9dc:	61 f1       	breq	.+88     	; 0xa36 <__fixsfsi+0x80>
     9de:	82 30       	cpi	r24, 0x02	; 2
     9e0:	50 f1       	brcs	.+84     	; 0xa36 <__fixsfsi+0x80>
     9e2:	84 30       	cpi	r24, 0x04	; 4
     9e4:	21 f4       	brne	.+8      	; 0x9ee <__fixsfsi+0x38>
     9e6:	8e 81       	ldd	r24, Y+6	; 0x06
     9e8:	88 23       	and	r24, r24
     9ea:	51 f1       	breq	.+84     	; 0xa40 <__fixsfsi+0x8a>
     9ec:	2e c0       	rjmp	.+92     	; 0xa4a <__fixsfsi+0x94>
     9ee:	2f 81       	ldd	r18, Y+7	; 0x07
     9f0:	38 85       	ldd	r19, Y+8	; 0x08
     9f2:	37 fd       	sbrc	r19, 7
     9f4:	20 c0       	rjmp	.+64     	; 0xa36 <__fixsfsi+0x80>
     9f6:	6e 81       	ldd	r22, Y+6	; 0x06
     9f8:	2f 31       	cpi	r18, 0x1F	; 31
     9fa:	31 05       	cpc	r19, r1
     9fc:	1c f0       	brlt	.+6      	; 0xa04 <__fixsfsi+0x4e>
     9fe:	66 23       	and	r22, r22
     a00:	f9 f0       	breq	.+62     	; 0xa40 <__fixsfsi+0x8a>
     a02:	23 c0       	rjmp	.+70     	; 0xa4a <__fixsfsi+0x94>
     a04:	8e e1       	ldi	r24, 0x1E	; 30
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	82 1b       	sub	r24, r18
     a0a:	93 0b       	sbc	r25, r19
     a0c:	29 85       	ldd	r18, Y+9	; 0x09
     a0e:	3a 85       	ldd	r19, Y+10	; 0x0a
     a10:	4b 85       	ldd	r20, Y+11	; 0x0b
     a12:	5c 85       	ldd	r21, Y+12	; 0x0c
     a14:	04 c0       	rjmp	.+8      	; 0xa1e <__fixsfsi+0x68>
     a16:	56 95       	lsr	r21
     a18:	47 95       	ror	r20
     a1a:	37 95       	ror	r19
     a1c:	27 95       	ror	r18
     a1e:	8a 95       	dec	r24
     a20:	d2 f7       	brpl	.-12     	; 0xa16 <__fixsfsi+0x60>
     a22:	66 23       	and	r22, r22
     a24:	b1 f0       	breq	.+44     	; 0xa52 <__fixsfsi+0x9c>
     a26:	50 95       	com	r21
     a28:	40 95       	com	r20
     a2a:	30 95       	com	r19
     a2c:	21 95       	neg	r18
     a2e:	3f 4f       	sbci	r19, 0xFF	; 255
     a30:	4f 4f       	sbci	r20, 0xFF	; 255
     a32:	5f 4f       	sbci	r21, 0xFF	; 255
     a34:	0e c0       	rjmp	.+28     	; 0xa52 <__fixsfsi+0x9c>
     a36:	20 e0       	ldi	r18, 0x00	; 0
     a38:	30 e0       	ldi	r19, 0x00	; 0
     a3a:	40 e0       	ldi	r20, 0x00	; 0
     a3c:	50 e0       	ldi	r21, 0x00	; 0
     a3e:	09 c0       	rjmp	.+18     	; 0xa52 <__fixsfsi+0x9c>
     a40:	2f ef       	ldi	r18, 0xFF	; 255
     a42:	3f ef       	ldi	r19, 0xFF	; 255
     a44:	4f ef       	ldi	r20, 0xFF	; 255
     a46:	5f e7       	ldi	r21, 0x7F	; 127
     a48:	04 c0       	rjmp	.+8      	; 0xa52 <__fixsfsi+0x9c>
     a4a:	20 e0       	ldi	r18, 0x00	; 0
     a4c:	30 e0       	ldi	r19, 0x00	; 0
     a4e:	40 e0       	ldi	r20, 0x00	; 0
     a50:	50 e8       	ldi	r21, 0x80	; 128
     a52:	b9 01       	movw	r22, r18
     a54:	ca 01       	movw	r24, r20
     a56:	2c 96       	adiw	r28, 0x0c	; 12
     a58:	e2 e0       	ldi	r30, 0x02	; 2
     a5a:	0c 94 66 18 	jmp	0x30cc	; 0x30cc <__epilogue_restores__+0x20>

00000a5e <__floatunsisf>:
     a5e:	a8 e0       	ldi	r26, 0x08	; 8
     a60:	b0 e0       	ldi	r27, 0x00	; 0
     a62:	e5 e3       	ldi	r30, 0x35	; 53
     a64:	f5 e0       	ldi	r31, 0x05	; 5
     a66:	0c 94 42 18 	jmp	0x3084	; 0x3084 <__prologue_saves__+0x10>
     a6a:	7b 01       	movw	r14, r22
     a6c:	8c 01       	movw	r16, r24
     a6e:	61 15       	cp	r22, r1
     a70:	71 05       	cpc	r23, r1
     a72:	81 05       	cpc	r24, r1
     a74:	91 05       	cpc	r25, r1
     a76:	19 f4       	brne	.+6      	; 0xa7e <__floatunsisf+0x20>
     a78:	82 e0       	ldi	r24, 0x02	; 2
     a7a:	89 83       	std	Y+1, r24	; 0x01
     a7c:	60 c0       	rjmp	.+192    	; 0xb3e <__floatunsisf+0xe0>
     a7e:	83 e0       	ldi	r24, 0x03	; 3
     a80:	89 83       	std	Y+1, r24	; 0x01
     a82:	8e e1       	ldi	r24, 0x1E	; 30
     a84:	c8 2e       	mov	r12, r24
     a86:	d1 2c       	mov	r13, r1
     a88:	dc 82       	std	Y+4, r13	; 0x04
     a8a:	cb 82       	std	Y+3, r12	; 0x03
     a8c:	ed 82       	std	Y+5, r14	; 0x05
     a8e:	fe 82       	std	Y+6, r15	; 0x06
     a90:	0f 83       	std	Y+7, r16	; 0x07
     a92:	18 87       	std	Y+8, r17	; 0x08
     a94:	c8 01       	movw	r24, r16
     a96:	b7 01       	movw	r22, r14
     a98:	0e 94 a8 05 	call	0xb50	; 0xb50 <__clzsi2>
     a9c:	fc 01       	movw	r30, r24
     a9e:	31 97       	sbiw	r30, 0x01	; 1
     aa0:	f7 ff       	sbrs	r31, 7
     aa2:	3b c0       	rjmp	.+118    	; 0xb1a <__floatunsisf+0xbc>
     aa4:	22 27       	eor	r18, r18
     aa6:	33 27       	eor	r19, r19
     aa8:	2e 1b       	sub	r18, r30
     aaa:	3f 0b       	sbc	r19, r31
     aac:	57 01       	movw	r10, r14
     aae:	68 01       	movw	r12, r16
     ab0:	02 2e       	mov	r0, r18
     ab2:	04 c0       	rjmp	.+8      	; 0xabc <__floatunsisf+0x5e>
     ab4:	d6 94       	lsr	r13
     ab6:	c7 94       	ror	r12
     ab8:	b7 94       	ror	r11
     aba:	a7 94       	ror	r10
     abc:	0a 94       	dec	r0
     abe:	d2 f7       	brpl	.-12     	; 0xab4 <__floatunsisf+0x56>
     ac0:	40 e0       	ldi	r20, 0x00	; 0
     ac2:	50 e0       	ldi	r21, 0x00	; 0
     ac4:	60 e0       	ldi	r22, 0x00	; 0
     ac6:	70 e0       	ldi	r23, 0x00	; 0
     ac8:	81 e0       	ldi	r24, 0x01	; 1
     aca:	90 e0       	ldi	r25, 0x00	; 0
     acc:	a0 e0       	ldi	r26, 0x00	; 0
     ace:	b0 e0       	ldi	r27, 0x00	; 0
     ad0:	04 c0       	rjmp	.+8      	; 0xada <__floatunsisf+0x7c>
     ad2:	88 0f       	add	r24, r24
     ad4:	99 1f       	adc	r25, r25
     ad6:	aa 1f       	adc	r26, r26
     ad8:	bb 1f       	adc	r27, r27
     ada:	2a 95       	dec	r18
     adc:	d2 f7       	brpl	.-12     	; 0xad2 <__floatunsisf+0x74>
     ade:	01 97       	sbiw	r24, 0x01	; 1
     ae0:	a1 09       	sbc	r26, r1
     ae2:	b1 09       	sbc	r27, r1
     ae4:	8e 21       	and	r24, r14
     ae6:	9f 21       	and	r25, r15
     ae8:	a0 23       	and	r26, r16
     aea:	b1 23       	and	r27, r17
     aec:	00 97       	sbiw	r24, 0x00	; 0
     aee:	a1 05       	cpc	r26, r1
     af0:	b1 05       	cpc	r27, r1
     af2:	21 f0       	breq	.+8      	; 0xafc <__floatunsisf+0x9e>
     af4:	41 e0       	ldi	r20, 0x01	; 1
     af6:	50 e0       	ldi	r21, 0x00	; 0
     af8:	60 e0       	ldi	r22, 0x00	; 0
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	4a 29       	or	r20, r10
     afe:	5b 29       	or	r21, r11
     b00:	6c 29       	or	r22, r12
     b02:	7d 29       	or	r23, r13
     b04:	4d 83       	std	Y+5, r20	; 0x05
     b06:	5e 83       	std	Y+6, r21	; 0x06
     b08:	6f 83       	std	Y+7, r22	; 0x07
     b0a:	78 87       	std	Y+8, r23	; 0x08
     b0c:	8e e1       	ldi	r24, 0x1E	; 30
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	8e 1b       	sub	r24, r30
     b12:	9f 0b       	sbc	r25, r31
     b14:	9c 83       	std	Y+4, r25	; 0x04
     b16:	8b 83       	std	Y+3, r24	; 0x03
     b18:	12 c0       	rjmp	.+36     	; 0xb3e <__floatunsisf+0xe0>
     b1a:	30 97       	sbiw	r30, 0x00	; 0
     b1c:	81 f0       	breq	.+32     	; 0xb3e <__floatunsisf+0xe0>
     b1e:	0e 2e       	mov	r0, r30
     b20:	04 c0       	rjmp	.+8      	; 0xb2a <__floatunsisf+0xcc>
     b22:	ee 0c       	add	r14, r14
     b24:	ff 1c       	adc	r15, r15
     b26:	00 1f       	adc	r16, r16
     b28:	11 1f       	adc	r17, r17
     b2a:	0a 94       	dec	r0
     b2c:	d2 f7       	brpl	.-12     	; 0xb22 <__floatunsisf+0xc4>
     b2e:	ed 82       	std	Y+5, r14	; 0x05
     b30:	fe 82       	std	Y+6, r15	; 0x06
     b32:	0f 83       	std	Y+7, r16	; 0x07
     b34:	18 87       	std	Y+8, r17	; 0x08
     b36:	ce 1a       	sub	r12, r30
     b38:	df 0a       	sbc	r13, r31
     b3a:	dc 82       	std	Y+4, r13	; 0x04
     b3c:	cb 82       	std	Y+3, r12	; 0x03
     b3e:	1a 82       	std	Y+2, r1	; 0x02
     b40:	ce 01       	movw	r24, r28
     b42:	01 96       	adiw	r24, 0x01	; 1
     b44:	0e 94 f7 05 	call	0xbee	; 0xbee <__pack_f>
     b48:	28 96       	adiw	r28, 0x08	; 8
     b4a:	ea e0       	ldi	r30, 0x0A	; 10
     b4c:	0c 94 5e 18 	jmp	0x30bc	; 0x30bc <__epilogue_restores__+0x10>

00000b50 <__clzsi2>:
     b50:	ef 92       	push	r14
     b52:	ff 92       	push	r15
     b54:	0f 93       	push	r16
     b56:	1f 93       	push	r17
     b58:	7b 01       	movw	r14, r22
     b5a:	8c 01       	movw	r16, r24
     b5c:	80 e0       	ldi	r24, 0x00	; 0
     b5e:	e8 16       	cp	r14, r24
     b60:	80 e0       	ldi	r24, 0x00	; 0
     b62:	f8 06       	cpc	r15, r24
     b64:	81 e0       	ldi	r24, 0x01	; 1
     b66:	08 07       	cpc	r16, r24
     b68:	80 e0       	ldi	r24, 0x00	; 0
     b6a:	18 07       	cpc	r17, r24
     b6c:	88 f4       	brcc	.+34     	; 0xb90 <__clzsi2+0x40>
     b6e:	8f ef       	ldi	r24, 0xFF	; 255
     b70:	e8 16       	cp	r14, r24
     b72:	f1 04       	cpc	r15, r1
     b74:	01 05       	cpc	r16, r1
     b76:	11 05       	cpc	r17, r1
     b78:	31 f0       	breq	.+12     	; 0xb86 <__clzsi2+0x36>
     b7a:	28 f0       	brcs	.+10     	; 0xb86 <__clzsi2+0x36>
     b7c:	88 e0       	ldi	r24, 0x08	; 8
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	a0 e0       	ldi	r26, 0x00	; 0
     b82:	b0 e0       	ldi	r27, 0x00	; 0
     b84:	17 c0       	rjmp	.+46     	; 0xbb4 <__clzsi2+0x64>
     b86:	80 e0       	ldi	r24, 0x00	; 0
     b88:	90 e0       	ldi	r25, 0x00	; 0
     b8a:	a0 e0       	ldi	r26, 0x00	; 0
     b8c:	b0 e0       	ldi	r27, 0x00	; 0
     b8e:	12 c0       	rjmp	.+36     	; 0xbb4 <__clzsi2+0x64>
     b90:	80 e0       	ldi	r24, 0x00	; 0
     b92:	e8 16       	cp	r14, r24
     b94:	80 e0       	ldi	r24, 0x00	; 0
     b96:	f8 06       	cpc	r15, r24
     b98:	80 e0       	ldi	r24, 0x00	; 0
     b9a:	08 07       	cpc	r16, r24
     b9c:	81 e0       	ldi	r24, 0x01	; 1
     b9e:	18 07       	cpc	r17, r24
     ba0:	28 f0       	brcs	.+10     	; 0xbac <__clzsi2+0x5c>
     ba2:	88 e1       	ldi	r24, 0x18	; 24
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	a0 e0       	ldi	r26, 0x00	; 0
     ba8:	b0 e0       	ldi	r27, 0x00	; 0
     baa:	04 c0       	rjmp	.+8      	; 0xbb4 <__clzsi2+0x64>
     bac:	80 e1       	ldi	r24, 0x10	; 16
     bae:	90 e0       	ldi	r25, 0x00	; 0
     bb0:	a0 e0       	ldi	r26, 0x00	; 0
     bb2:	b0 e0       	ldi	r27, 0x00	; 0
     bb4:	20 e2       	ldi	r18, 0x20	; 32
     bb6:	30 e0       	ldi	r19, 0x00	; 0
     bb8:	40 e0       	ldi	r20, 0x00	; 0
     bba:	50 e0       	ldi	r21, 0x00	; 0
     bbc:	28 1b       	sub	r18, r24
     bbe:	39 0b       	sbc	r19, r25
     bc0:	4a 0b       	sbc	r20, r26
     bc2:	5b 0b       	sbc	r21, r27
     bc4:	04 c0       	rjmp	.+8      	; 0xbce <__clzsi2+0x7e>
     bc6:	16 95       	lsr	r17
     bc8:	07 95       	ror	r16
     bca:	f7 94       	ror	r15
     bcc:	e7 94       	ror	r14
     bce:	8a 95       	dec	r24
     bd0:	d2 f7       	brpl	.-12     	; 0xbc6 <__clzsi2+0x76>
     bd2:	f7 01       	movw	r30, r14
     bd4:	e2 58       	subi	r30, 0x82	; 130
     bd6:	ff 4f       	sbci	r31, 0xFF	; 255
     bd8:	80 81       	ld	r24, Z
     bda:	28 1b       	sub	r18, r24
     bdc:	31 09       	sbc	r19, r1
     bde:	41 09       	sbc	r20, r1
     be0:	51 09       	sbc	r21, r1
     be2:	c9 01       	movw	r24, r18
     be4:	1f 91       	pop	r17
     be6:	0f 91       	pop	r16
     be8:	ff 90       	pop	r15
     bea:	ef 90       	pop	r14
     bec:	08 95       	ret

00000bee <__pack_f>:
     bee:	df 92       	push	r13
     bf0:	ef 92       	push	r14
     bf2:	ff 92       	push	r15
     bf4:	0f 93       	push	r16
     bf6:	1f 93       	push	r17
     bf8:	fc 01       	movw	r30, r24
     bfa:	e4 80       	ldd	r14, Z+4	; 0x04
     bfc:	f5 80       	ldd	r15, Z+5	; 0x05
     bfe:	06 81       	ldd	r16, Z+6	; 0x06
     c00:	17 81       	ldd	r17, Z+7	; 0x07
     c02:	d1 80       	ldd	r13, Z+1	; 0x01
     c04:	80 81       	ld	r24, Z
     c06:	82 30       	cpi	r24, 0x02	; 2
     c08:	48 f4       	brcc	.+18     	; 0xc1c <__pack_f+0x2e>
     c0a:	80 e0       	ldi	r24, 0x00	; 0
     c0c:	90 e0       	ldi	r25, 0x00	; 0
     c0e:	a0 e1       	ldi	r26, 0x10	; 16
     c10:	b0 e0       	ldi	r27, 0x00	; 0
     c12:	e8 2a       	or	r14, r24
     c14:	f9 2a       	or	r15, r25
     c16:	0a 2b       	or	r16, r26
     c18:	1b 2b       	or	r17, r27
     c1a:	a5 c0       	rjmp	.+330    	; 0xd66 <__pack_f+0x178>
     c1c:	84 30       	cpi	r24, 0x04	; 4
     c1e:	09 f4       	brne	.+2      	; 0xc22 <__pack_f+0x34>
     c20:	9f c0       	rjmp	.+318    	; 0xd60 <__pack_f+0x172>
     c22:	82 30       	cpi	r24, 0x02	; 2
     c24:	21 f4       	brne	.+8      	; 0xc2e <__pack_f+0x40>
     c26:	ee 24       	eor	r14, r14
     c28:	ff 24       	eor	r15, r15
     c2a:	87 01       	movw	r16, r14
     c2c:	05 c0       	rjmp	.+10     	; 0xc38 <__pack_f+0x4a>
     c2e:	e1 14       	cp	r14, r1
     c30:	f1 04       	cpc	r15, r1
     c32:	01 05       	cpc	r16, r1
     c34:	11 05       	cpc	r17, r1
     c36:	19 f4       	brne	.+6      	; 0xc3e <__pack_f+0x50>
     c38:	e0 e0       	ldi	r30, 0x00	; 0
     c3a:	f0 e0       	ldi	r31, 0x00	; 0
     c3c:	96 c0       	rjmp	.+300    	; 0xd6a <__pack_f+0x17c>
     c3e:	62 81       	ldd	r22, Z+2	; 0x02
     c40:	73 81       	ldd	r23, Z+3	; 0x03
     c42:	9f ef       	ldi	r25, 0xFF	; 255
     c44:	62 38       	cpi	r22, 0x82	; 130
     c46:	79 07       	cpc	r23, r25
     c48:	0c f0       	brlt	.+2      	; 0xc4c <__pack_f+0x5e>
     c4a:	5b c0       	rjmp	.+182    	; 0xd02 <__pack_f+0x114>
     c4c:	22 e8       	ldi	r18, 0x82	; 130
     c4e:	3f ef       	ldi	r19, 0xFF	; 255
     c50:	26 1b       	sub	r18, r22
     c52:	37 0b       	sbc	r19, r23
     c54:	2a 31       	cpi	r18, 0x1A	; 26
     c56:	31 05       	cpc	r19, r1
     c58:	2c f0       	brlt	.+10     	; 0xc64 <__pack_f+0x76>
     c5a:	20 e0       	ldi	r18, 0x00	; 0
     c5c:	30 e0       	ldi	r19, 0x00	; 0
     c5e:	40 e0       	ldi	r20, 0x00	; 0
     c60:	50 e0       	ldi	r21, 0x00	; 0
     c62:	2a c0       	rjmp	.+84     	; 0xcb8 <__pack_f+0xca>
     c64:	b8 01       	movw	r22, r16
     c66:	a7 01       	movw	r20, r14
     c68:	02 2e       	mov	r0, r18
     c6a:	04 c0       	rjmp	.+8      	; 0xc74 <__pack_f+0x86>
     c6c:	76 95       	lsr	r23
     c6e:	67 95       	ror	r22
     c70:	57 95       	ror	r21
     c72:	47 95       	ror	r20
     c74:	0a 94       	dec	r0
     c76:	d2 f7       	brpl	.-12     	; 0xc6c <__pack_f+0x7e>
     c78:	81 e0       	ldi	r24, 0x01	; 1
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	a0 e0       	ldi	r26, 0x00	; 0
     c7e:	b0 e0       	ldi	r27, 0x00	; 0
     c80:	04 c0       	rjmp	.+8      	; 0xc8a <__pack_f+0x9c>
     c82:	88 0f       	add	r24, r24
     c84:	99 1f       	adc	r25, r25
     c86:	aa 1f       	adc	r26, r26
     c88:	bb 1f       	adc	r27, r27
     c8a:	2a 95       	dec	r18
     c8c:	d2 f7       	brpl	.-12     	; 0xc82 <__pack_f+0x94>
     c8e:	01 97       	sbiw	r24, 0x01	; 1
     c90:	a1 09       	sbc	r26, r1
     c92:	b1 09       	sbc	r27, r1
     c94:	8e 21       	and	r24, r14
     c96:	9f 21       	and	r25, r15
     c98:	a0 23       	and	r26, r16
     c9a:	b1 23       	and	r27, r17
     c9c:	00 97       	sbiw	r24, 0x00	; 0
     c9e:	a1 05       	cpc	r26, r1
     ca0:	b1 05       	cpc	r27, r1
     ca2:	21 f0       	breq	.+8      	; 0xcac <__pack_f+0xbe>
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	a0 e0       	ldi	r26, 0x00	; 0
     caa:	b0 e0       	ldi	r27, 0x00	; 0
     cac:	9a 01       	movw	r18, r20
     cae:	ab 01       	movw	r20, r22
     cb0:	28 2b       	or	r18, r24
     cb2:	39 2b       	or	r19, r25
     cb4:	4a 2b       	or	r20, r26
     cb6:	5b 2b       	or	r21, r27
     cb8:	da 01       	movw	r26, r20
     cba:	c9 01       	movw	r24, r18
     cbc:	8f 77       	andi	r24, 0x7F	; 127
     cbe:	90 70       	andi	r25, 0x00	; 0
     cc0:	a0 70       	andi	r26, 0x00	; 0
     cc2:	b0 70       	andi	r27, 0x00	; 0
     cc4:	80 34       	cpi	r24, 0x40	; 64
     cc6:	91 05       	cpc	r25, r1
     cc8:	a1 05       	cpc	r26, r1
     cca:	b1 05       	cpc	r27, r1
     ccc:	39 f4       	brne	.+14     	; 0xcdc <__pack_f+0xee>
     cce:	27 ff       	sbrs	r18, 7
     cd0:	09 c0       	rjmp	.+18     	; 0xce4 <__pack_f+0xf6>
     cd2:	20 5c       	subi	r18, 0xC0	; 192
     cd4:	3f 4f       	sbci	r19, 0xFF	; 255
     cd6:	4f 4f       	sbci	r20, 0xFF	; 255
     cd8:	5f 4f       	sbci	r21, 0xFF	; 255
     cda:	04 c0       	rjmp	.+8      	; 0xce4 <__pack_f+0xf6>
     cdc:	21 5c       	subi	r18, 0xC1	; 193
     cde:	3f 4f       	sbci	r19, 0xFF	; 255
     ce0:	4f 4f       	sbci	r20, 0xFF	; 255
     ce2:	5f 4f       	sbci	r21, 0xFF	; 255
     ce4:	e0 e0       	ldi	r30, 0x00	; 0
     ce6:	f0 e0       	ldi	r31, 0x00	; 0
     ce8:	20 30       	cpi	r18, 0x00	; 0
     cea:	a0 e0       	ldi	r26, 0x00	; 0
     cec:	3a 07       	cpc	r19, r26
     cee:	a0 e0       	ldi	r26, 0x00	; 0
     cf0:	4a 07       	cpc	r20, r26
     cf2:	a0 e4       	ldi	r26, 0x40	; 64
     cf4:	5a 07       	cpc	r21, r26
     cf6:	10 f0       	brcs	.+4      	; 0xcfc <__pack_f+0x10e>
     cf8:	e1 e0       	ldi	r30, 0x01	; 1
     cfa:	f0 e0       	ldi	r31, 0x00	; 0
     cfc:	79 01       	movw	r14, r18
     cfe:	8a 01       	movw	r16, r20
     d00:	27 c0       	rjmp	.+78     	; 0xd50 <__pack_f+0x162>
     d02:	60 38       	cpi	r22, 0x80	; 128
     d04:	71 05       	cpc	r23, r1
     d06:	64 f5       	brge	.+88     	; 0xd60 <__pack_f+0x172>
     d08:	fb 01       	movw	r30, r22
     d0a:	e1 58       	subi	r30, 0x81	; 129
     d0c:	ff 4f       	sbci	r31, 0xFF	; 255
     d0e:	d8 01       	movw	r26, r16
     d10:	c7 01       	movw	r24, r14
     d12:	8f 77       	andi	r24, 0x7F	; 127
     d14:	90 70       	andi	r25, 0x00	; 0
     d16:	a0 70       	andi	r26, 0x00	; 0
     d18:	b0 70       	andi	r27, 0x00	; 0
     d1a:	80 34       	cpi	r24, 0x40	; 64
     d1c:	91 05       	cpc	r25, r1
     d1e:	a1 05       	cpc	r26, r1
     d20:	b1 05       	cpc	r27, r1
     d22:	39 f4       	brne	.+14     	; 0xd32 <__pack_f+0x144>
     d24:	e7 fe       	sbrs	r14, 7
     d26:	0d c0       	rjmp	.+26     	; 0xd42 <__pack_f+0x154>
     d28:	80 e4       	ldi	r24, 0x40	; 64
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	a0 e0       	ldi	r26, 0x00	; 0
     d2e:	b0 e0       	ldi	r27, 0x00	; 0
     d30:	04 c0       	rjmp	.+8      	; 0xd3a <__pack_f+0x14c>
     d32:	8f e3       	ldi	r24, 0x3F	; 63
     d34:	90 e0       	ldi	r25, 0x00	; 0
     d36:	a0 e0       	ldi	r26, 0x00	; 0
     d38:	b0 e0       	ldi	r27, 0x00	; 0
     d3a:	e8 0e       	add	r14, r24
     d3c:	f9 1e       	adc	r15, r25
     d3e:	0a 1f       	adc	r16, r26
     d40:	1b 1f       	adc	r17, r27
     d42:	17 ff       	sbrs	r17, 7
     d44:	05 c0       	rjmp	.+10     	; 0xd50 <__pack_f+0x162>
     d46:	16 95       	lsr	r17
     d48:	07 95       	ror	r16
     d4a:	f7 94       	ror	r15
     d4c:	e7 94       	ror	r14
     d4e:	31 96       	adiw	r30, 0x01	; 1
     d50:	87 e0       	ldi	r24, 0x07	; 7
     d52:	16 95       	lsr	r17
     d54:	07 95       	ror	r16
     d56:	f7 94       	ror	r15
     d58:	e7 94       	ror	r14
     d5a:	8a 95       	dec	r24
     d5c:	d1 f7       	brne	.-12     	; 0xd52 <__pack_f+0x164>
     d5e:	05 c0       	rjmp	.+10     	; 0xd6a <__pack_f+0x17c>
     d60:	ee 24       	eor	r14, r14
     d62:	ff 24       	eor	r15, r15
     d64:	87 01       	movw	r16, r14
     d66:	ef ef       	ldi	r30, 0xFF	; 255
     d68:	f0 e0       	ldi	r31, 0x00	; 0
     d6a:	6e 2f       	mov	r22, r30
     d6c:	67 95       	ror	r22
     d6e:	66 27       	eor	r22, r22
     d70:	67 95       	ror	r22
     d72:	90 2f       	mov	r25, r16
     d74:	9f 77       	andi	r25, 0x7F	; 127
     d76:	d7 94       	ror	r13
     d78:	dd 24       	eor	r13, r13
     d7a:	d7 94       	ror	r13
     d7c:	8e 2f       	mov	r24, r30
     d7e:	86 95       	lsr	r24
     d80:	49 2f       	mov	r20, r25
     d82:	46 2b       	or	r20, r22
     d84:	58 2f       	mov	r21, r24
     d86:	5d 29       	or	r21, r13
     d88:	b7 01       	movw	r22, r14
     d8a:	ca 01       	movw	r24, r20
     d8c:	1f 91       	pop	r17
     d8e:	0f 91       	pop	r16
     d90:	ff 90       	pop	r15
     d92:	ef 90       	pop	r14
     d94:	df 90       	pop	r13
     d96:	08 95       	ret

00000d98 <__unpack_f>:
     d98:	fc 01       	movw	r30, r24
     d9a:	db 01       	movw	r26, r22
     d9c:	40 81       	ld	r20, Z
     d9e:	51 81       	ldd	r21, Z+1	; 0x01
     da0:	22 81       	ldd	r18, Z+2	; 0x02
     da2:	62 2f       	mov	r22, r18
     da4:	6f 77       	andi	r22, 0x7F	; 127
     da6:	70 e0       	ldi	r23, 0x00	; 0
     da8:	22 1f       	adc	r18, r18
     daa:	22 27       	eor	r18, r18
     dac:	22 1f       	adc	r18, r18
     dae:	93 81       	ldd	r25, Z+3	; 0x03
     db0:	89 2f       	mov	r24, r25
     db2:	88 0f       	add	r24, r24
     db4:	82 2b       	or	r24, r18
     db6:	28 2f       	mov	r18, r24
     db8:	30 e0       	ldi	r19, 0x00	; 0
     dba:	99 1f       	adc	r25, r25
     dbc:	99 27       	eor	r25, r25
     dbe:	99 1f       	adc	r25, r25
     dc0:	11 96       	adiw	r26, 0x01	; 1
     dc2:	9c 93       	st	X, r25
     dc4:	11 97       	sbiw	r26, 0x01	; 1
     dc6:	21 15       	cp	r18, r1
     dc8:	31 05       	cpc	r19, r1
     dca:	a9 f5       	brne	.+106    	; 0xe36 <__unpack_f+0x9e>
     dcc:	41 15       	cp	r20, r1
     dce:	51 05       	cpc	r21, r1
     dd0:	61 05       	cpc	r22, r1
     dd2:	71 05       	cpc	r23, r1
     dd4:	11 f4       	brne	.+4      	; 0xdda <__unpack_f+0x42>
     dd6:	82 e0       	ldi	r24, 0x02	; 2
     dd8:	37 c0       	rjmp	.+110    	; 0xe48 <__unpack_f+0xb0>
     dda:	82 e8       	ldi	r24, 0x82	; 130
     ddc:	9f ef       	ldi	r25, 0xFF	; 255
     dde:	13 96       	adiw	r26, 0x03	; 3
     de0:	9c 93       	st	X, r25
     de2:	8e 93       	st	-X, r24
     de4:	12 97       	sbiw	r26, 0x02	; 2
     de6:	9a 01       	movw	r18, r20
     de8:	ab 01       	movw	r20, r22
     dea:	67 e0       	ldi	r22, 0x07	; 7
     dec:	22 0f       	add	r18, r18
     dee:	33 1f       	adc	r19, r19
     df0:	44 1f       	adc	r20, r20
     df2:	55 1f       	adc	r21, r21
     df4:	6a 95       	dec	r22
     df6:	d1 f7       	brne	.-12     	; 0xdec <__unpack_f+0x54>
     df8:	83 e0       	ldi	r24, 0x03	; 3
     dfa:	8c 93       	st	X, r24
     dfc:	0d c0       	rjmp	.+26     	; 0xe18 <__unpack_f+0x80>
     dfe:	22 0f       	add	r18, r18
     e00:	33 1f       	adc	r19, r19
     e02:	44 1f       	adc	r20, r20
     e04:	55 1f       	adc	r21, r21
     e06:	12 96       	adiw	r26, 0x02	; 2
     e08:	8d 91       	ld	r24, X+
     e0a:	9c 91       	ld	r25, X
     e0c:	13 97       	sbiw	r26, 0x03	; 3
     e0e:	01 97       	sbiw	r24, 0x01	; 1
     e10:	13 96       	adiw	r26, 0x03	; 3
     e12:	9c 93       	st	X, r25
     e14:	8e 93       	st	-X, r24
     e16:	12 97       	sbiw	r26, 0x02	; 2
     e18:	20 30       	cpi	r18, 0x00	; 0
     e1a:	80 e0       	ldi	r24, 0x00	; 0
     e1c:	38 07       	cpc	r19, r24
     e1e:	80 e0       	ldi	r24, 0x00	; 0
     e20:	48 07       	cpc	r20, r24
     e22:	80 e4       	ldi	r24, 0x40	; 64
     e24:	58 07       	cpc	r21, r24
     e26:	58 f3       	brcs	.-42     	; 0xdfe <__unpack_f+0x66>
     e28:	14 96       	adiw	r26, 0x04	; 4
     e2a:	2d 93       	st	X+, r18
     e2c:	3d 93       	st	X+, r19
     e2e:	4d 93       	st	X+, r20
     e30:	5c 93       	st	X, r21
     e32:	17 97       	sbiw	r26, 0x07	; 7
     e34:	08 95       	ret
     e36:	2f 3f       	cpi	r18, 0xFF	; 255
     e38:	31 05       	cpc	r19, r1
     e3a:	79 f4       	brne	.+30     	; 0xe5a <__unpack_f+0xc2>
     e3c:	41 15       	cp	r20, r1
     e3e:	51 05       	cpc	r21, r1
     e40:	61 05       	cpc	r22, r1
     e42:	71 05       	cpc	r23, r1
     e44:	19 f4       	brne	.+6      	; 0xe4c <__unpack_f+0xb4>
     e46:	84 e0       	ldi	r24, 0x04	; 4
     e48:	8c 93       	st	X, r24
     e4a:	08 95       	ret
     e4c:	64 ff       	sbrs	r22, 4
     e4e:	03 c0       	rjmp	.+6      	; 0xe56 <__unpack_f+0xbe>
     e50:	81 e0       	ldi	r24, 0x01	; 1
     e52:	8c 93       	st	X, r24
     e54:	12 c0       	rjmp	.+36     	; 0xe7a <__unpack_f+0xe2>
     e56:	1c 92       	st	X, r1
     e58:	10 c0       	rjmp	.+32     	; 0xe7a <__unpack_f+0xe2>
     e5a:	2f 57       	subi	r18, 0x7F	; 127
     e5c:	30 40       	sbci	r19, 0x00	; 0
     e5e:	13 96       	adiw	r26, 0x03	; 3
     e60:	3c 93       	st	X, r19
     e62:	2e 93       	st	-X, r18
     e64:	12 97       	sbiw	r26, 0x02	; 2
     e66:	83 e0       	ldi	r24, 0x03	; 3
     e68:	8c 93       	st	X, r24
     e6a:	87 e0       	ldi	r24, 0x07	; 7
     e6c:	44 0f       	add	r20, r20
     e6e:	55 1f       	adc	r21, r21
     e70:	66 1f       	adc	r22, r22
     e72:	77 1f       	adc	r23, r23
     e74:	8a 95       	dec	r24
     e76:	d1 f7       	brne	.-12     	; 0xe6c <__unpack_f+0xd4>
     e78:	70 64       	ori	r23, 0x40	; 64
     e7a:	14 96       	adiw	r26, 0x04	; 4
     e7c:	4d 93       	st	X+, r20
     e7e:	5d 93       	st	X+, r21
     e80:	6d 93       	st	X+, r22
     e82:	7c 93       	st	X, r23
     e84:	17 97       	sbiw	r26, 0x07	; 7
     e86:	08 95       	ret

00000e88 <__fpcmp_parts_f>:
     e88:	1f 93       	push	r17
     e8a:	dc 01       	movw	r26, r24
     e8c:	fb 01       	movw	r30, r22
     e8e:	9c 91       	ld	r25, X
     e90:	92 30       	cpi	r25, 0x02	; 2
     e92:	08 f4       	brcc	.+2      	; 0xe96 <__fpcmp_parts_f+0xe>
     e94:	47 c0       	rjmp	.+142    	; 0xf24 <__fpcmp_parts_f+0x9c>
     e96:	80 81       	ld	r24, Z
     e98:	82 30       	cpi	r24, 0x02	; 2
     e9a:	08 f4       	brcc	.+2      	; 0xe9e <__fpcmp_parts_f+0x16>
     e9c:	43 c0       	rjmp	.+134    	; 0xf24 <__fpcmp_parts_f+0x9c>
     e9e:	94 30       	cpi	r25, 0x04	; 4
     ea0:	51 f4       	brne	.+20     	; 0xeb6 <__fpcmp_parts_f+0x2e>
     ea2:	11 96       	adiw	r26, 0x01	; 1
     ea4:	1c 91       	ld	r17, X
     ea6:	84 30       	cpi	r24, 0x04	; 4
     ea8:	99 f5       	brne	.+102    	; 0xf10 <__fpcmp_parts_f+0x88>
     eaa:	81 81       	ldd	r24, Z+1	; 0x01
     eac:	68 2f       	mov	r22, r24
     eae:	70 e0       	ldi	r23, 0x00	; 0
     eb0:	61 1b       	sub	r22, r17
     eb2:	71 09       	sbc	r23, r1
     eb4:	3f c0       	rjmp	.+126    	; 0xf34 <__fpcmp_parts_f+0xac>
     eb6:	84 30       	cpi	r24, 0x04	; 4
     eb8:	21 f0       	breq	.+8      	; 0xec2 <__fpcmp_parts_f+0x3a>
     eba:	92 30       	cpi	r25, 0x02	; 2
     ebc:	31 f4       	brne	.+12     	; 0xeca <__fpcmp_parts_f+0x42>
     ebe:	82 30       	cpi	r24, 0x02	; 2
     ec0:	b9 f1       	breq	.+110    	; 0xf30 <__fpcmp_parts_f+0xa8>
     ec2:	81 81       	ldd	r24, Z+1	; 0x01
     ec4:	88 23       	and	r24, r24
     ec6:	89 f1       	breq	.+98     	; 0xf2a <__fpcmp_parts_f+0xa2>
     ec8:	2d c0       	rjmp	.+90     	; 0xf24 <__fpcmp_parts_f+0x9c>
     eca:	11 96       	adiw	r26, 0x01	; 1
     ecc:	1c 91       	ld	r17, X
     ece:	11 97       	sbiw	r26, 0x01	; 1
     ed0:	82 30       	cpi	r24, 0x02	; 2
     ed2:	f1 f0       	breq	.+60     	; 0xf10 <__fpcmp_parts_f+0x88>
     ed4:	81 81       	ldd	r24, Z+1	; 0x01
     ed6:	18 17       	cp	r17, r24
     ed8:	d9 f4       	brne	.+54     	; 0xf10 <__fpcmp_parts_f+0x88>
     eda:	12 96       	adiw	r26, 0x02	; 2
     edc:	2d 91       	ld	r18, X+
     ede:	3c 91       	ld	r19, X
     ee0:	13 97       	sbiw	r26, 0x03	; 3
     ee2:	82 81       	ldd	r24, Z+2	; 0x02
     ee4:	93 81       	ldd	r25, Z+3	; 0x03
     ee6:	82 17       	cp	r24, r18
     ee8:	93 07       	cpc	r25, r19
     eea:	94 f0       	brlt	.+36     	; 0xf10 <__fpcmp_parts_f+0x88>
     eec:	28 17       	cp	r18, r24
     eee:	39 07       	cpc	r19, r25
     ef0:	bc f0       	brlt	.+46     	; 0xf20 <__fpcmp_parts_f+0x98>
     ef2:	14 96       	adiw	r26, 0x04	; 4
     ef4:	8d 91       	ld	r24, X+
     ef6:	9d 91       	ld	r25, X+
     ef8:	0d 90       	ld	r0, X+
     efa:	bc 91       	ld	r27, X
     efc:	a0 2d       	mov	r26, r0
     efe:	24 81       	ldd	r18, Z+4	; 0x04
     f00:	35 81       	ldd	r19, Z+5	; 0x05
     f02:	46 81       	ldd	r20, Z+6	; 0x06
     f04:	57 81       	ldd	r21, Z+7	; 0x07
     f06:	28 17       	cp	r18, r24
     f08:	39 07       	cpc	r19, r25
     f0a:	4a 07       	cpc	r20, r26
     f0c:	5b 07       	cpc	r21, r27
     f0e:	18 f4       	brcc	.+6      	; 0xf16 <__fpcmp_parts_f+0x8e>
     f10:	11 23       	and	r17, r17
     f12:	41 f0       	breq	.+16     	; 0xf24 <__fpcmp_parts_f+0x9c>
     f14:	0a c0       	rjmp	.+20     	; 0xf2a <__fpcmp_parts_f+0xa2>
     f16:	82 17       	cp	r24, r18
     f18:	93 07       	cpc	r25, r19
     f1a:	a4 07       	cpc	r26, r20
     f1c:	b5 07       	cpc	r27, r21
     f1e:	40 f4       	brcc	.+16     	; 0xf30 <__fpcmp_parts_f+0xa8>
     f20:	11 23       	and	r17, r17
     f22:	19 f0       	breq	.+6      	; 0xf2a <__fpcmp_parts_f+0xa2>
     f24:	61 e0       	ldi	r22, 0x01	; 1
     f26:	70 e0       	ldi	r23, 0x00	; 0
     f28:	05 c0       	rjmp	.+10     	; 0xf34 <__fpcmp_parts_f+0xac>
     f2a:	6f ef       	ldi	r22, 0xFF	; 255
     f2c:	7f ef       	ldi	r23, 0xFF	; 255
     f2e:	02 c0       	rjmp	.+4      	; 0xf34 <__fpcmp_parts_f+0xac>
     f30:	60 e0       	ldi	r22, 0x00	; 0
     f32:	70 e0       	ldi	r23, 0x00	; 0
     f34:	cb 01       	movw	r24, r22
     f36:	1f 91       	pop	r17
     f38:	08 95       	ret

00000f3a <Exp>:
#include "BIT_MATH.h"
#include "CALC.h"


f32 Exp(f32 Copy_value)
{
     f3a:	ef 92       	push	r14
     f3c:	ff 92       	push	r15
     f3e:	0f 93       	push	r16
     f40:	1f 93       	push	r17
     f42:	df 93       	push	r29
     f44:	cf 93       	push	r28
     f46:	cd b7       	in	r28, 0x3d	; 61
     f48:	de b7       	in	r29, 0x3e	; 62
     f4a:	2d 97       	sbiw	r28, 0x0d	; 13
     f4c:	0f b6       	in	r0, 0x3f	; 63
     f4e:	f8 94       	cli
     f50:	de bf       	out	0x3e, r29	; 62
     f52:	0f be       	out	0x3f, r0	; 63
     f54:	cd bf       	out	0x3d, r28	; 61
     f56:	6a 87       	std	Y+10, r22	; 0x0a
     f58:	7b 87       	std	Y+11, r23	; 0x0b
     f5a:	8c 87       	std	Y+12, r24	; 0x0c
     f5c:	9d 87       	std	Y+13, r25	; 0x0d
    f32 tmp=1,ans=1;
     f5e:	80 e0       	ldi	r24, 0x00	; 0
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	a0 e8       	ldi	r26, 0x80	; 128
     f64:	bf e3       	ldi	r27, 0x3F	; 63
     f66:	8e 83       	std	Y+6, r24	; 0x06
     f68:	9f 83       	std	Y+7, r25	; 0x07
     f6a:	a8 87       	std	Y+8, r26	; 0x08
     f6c:	b9 87       	std	Y+9, r27	; 0x09
     f6e:	80 e0       	ldi	r24, 0x00	; 0
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	a0 e8       	ldi	r26, 0x80	; 128
     f74:	bf e3       	ldi	r27, 0x3F	; 63
     f76:	8a 83       	std	Y+2, r24	; 0x02
     f78:	9b 83       	std	Y+3, r25	; 0x03
     f7a:	ac 83       	std	Y+4, r26	; 0x04
     f7c:	bd 83       	std	Y+5, r27	; 0x05
    for(u8 i=1;i<100;i++)
     f7e:	81 e0       	ldi	r24, 0x01	; 1
     f80:	89 83       	std	Y+1, r24	; 0x01
     f82:	38 c0       	rjmp	.+112    	; 0xff4 <Exp+0xba>
    {
        tmp=tmp*Copy_value/i;
     f84:	6e 81       	ldd	r22, Y+6	; 0x06
     f86:	7f 81       	ldd	r23, Y+7	; 0x07
     f88:	88 85       	ldd	r24, Y+8	; 0x08
     f8a:	99 85       	ldd	r25, Y+9	; 0x09
     f8c:	2a 85       	ldd	r18, Y+10	; 0x0a
     f8e:	3b 85       	ldd	r19, Y+11	; 0x0b
     f90:	4c 85       	ldd	r20, Y+12	; 0x0c
     f92:	5d 85       	ldd	r21, Y+13	; 0x0d
     f94:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f98:	dc 01       	movw	r26, r24
     f9a:	cb 01       	movw	r24, r22
     f9c:	7c 01       	movw	r14, r24
     f9e:	8d 01       	movw	r16, r26
     fa0:	89 81       	ldd	r24, Y+1	; 0x01
     fa2:	88 2f       	mov	r24, r24
     fa4:	90 e0       	ldi	r25, 0x00	; 0
     fa6:	aa 27       	eor	r26, r26
     fa8:	97 fd       	sbrc	r25, 7
     faa:	a0 95       	com	r26
     fac:	ba 2f       	mov	r27, r26
     fae:	bc 01       	movw	r22, r24
     fb0:	cd 01       	movw	r24, r26
     fb2:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__floatsisf>
     fb6:	9b 01       	movw	r18, r22
     fb8:	ac 01       	movw	r20, r24
     fba:	c8 01       	movw	r24, r16
     fbc:	b7 01       	movw	r22, r14
     fbe:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
     fc2:	dc 01       	movw	r26, r24
     fc4:	cb 01       	movw	r24, r22
     fc6:	8e 83       	std	Y+6, r24	; 0x06
     fc8:	9f 83       	std	Y+7, r25	; 0x07
     fca:	a8 87       	std	Y+8, r26	; 0x08
     fcc:	b9 87       	std	Y+9, r27	; 0x09
        ans+=tmp;
     fce:	6a 81       	ldd	r22, Y+2	; 0x02
     fd0:	7b 81       	ldd	r23, Y+3	; 0x03
     fd2:	8c 81       	ldd	r24, Y+4	; 0x04
     fd4:	9d 81       	ldd	r25, Y+5	; 0x05
     fd6:	2e 81       	ldd	r18, Y+6	; 0x06
     fd8:	3f 81       	ldd	r19, Y+7	; 0x07
     fda:	48 85       	ldd	r20, Y+8	; 0x08
     fdc:	59 85       	ldd	r21, Y+9	; 0x09
     fde:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__addsf3>
     fe2:	dc 01       	movw	r26, r24
     fe4:	cb 01       	movw	r24, r22
     fe6:	8a 83       	std	Y+2, r24	; 0x02
     fe8:	9b 83       	std	Y+3, r25	; 0x03
     fea:	ac 83       	std	Y+4, r26	; 0x04
     fec:	bd 83       	std	Y+5, r27	; 0x05


f32 Exp(f32 Copy_value)
{
    f32 tmp=1,ans=1;
    for(u8 i=1;i<100;i++)
     fee:	89 81       	ldd	r24, Y+1	; 0x01
     ff0:	8f 5f       	subi	r24, 0xFF	; 255
     ff2:	89 83       	std	Y+1, r24	; 0x01
     ff4:	89 81       	ldd	r24, Y+1	; 0x01
     ff6:	84 36       	cpi	r24, 0x64	; 100
     ff8:	28 f2       	brcs	.-118    	; 0xf84 <Exp+0x4a>
    {
        tmp=tmp*Copy_value/i;
        ans+=tmp;
    }
    return ans;
     ffa:	8a 81       	ldd	r24, Y+2	; 0x02
     ffc:	9b 81       	ldd	r25, Y+3	; 0x03
     ffe:	ac 81       	ldd	r26, Y+4	; 0x04
    1000:	bd 81       	ldd	r27, Y+5	; 0x05
}
    1002:	bc 01       	movw	r22, r24
    1004:	cd 01       	movw	r24, r26
    1006:	2d 96       	adiw	r28, 0x0d	; 13
    1008:	0f b6       	in	r0, 0x3f	; 63
    100a:	f8 94       	cli
    100c:	de bf       	out	0x3e, r29	; 62
    100e:	0f be       	out	0x3f, r0	; 63
    1010:	cd bf       	out	0x3d, r28	; 61
    1012:	cf 91       	pop	r28
    1014:	df 91       	pop	r29
    1016:	1f 91       	pop	r17
    1018:	0f 91       	pop	r16
    101a:	ff 90       	pop	r15
    101c:	ef 90       	pop	r14
    101e:	08 95       	ret

00001020 <Ln>:

f32 Ln(f32 Copy_value)
{
    1020:	df 93       	push	r29
    1022:	cf 93       	push	r28
    1024:	cd b7       	in	r28, 0x3d	; 61
    1026:	de b7       	in	r29, 0x3e	; 62
    1028:	65 97       	sbiw	r28, 0x15	; 21
    102a:	0f b6       	in	r0, 0x3f	; 63
    102c:	f8 94       	cli
    102e:	de bf       	out	0x3e, r29	; 62
    1030:	0f be       	out	0x3f, r0	; 63
    1032:	cd bf       	out	0x3d, r28	; 61
    1034:	6a 8b       	std	Y+18, r22	; 0x12
    1036:	7b 8b       	std	Y+19, r23	; 0x13
    1038:	8c 8b       	std	Y+20, r24	; 0x14
    103a:	9d 8b       	std	Y+21, r25	; 0x15
	f32 tmp=0;
    103c:	80 e0       	ldi	r24, 0x00	; 0
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	a0 e0       	ldi	r26, 0x00	; 0
    1042:	b0 e0       	ldi	r27, 0x00	; 0
    1044:	8e 87       	std	Y+14, r24	; 0x0e
    1046:	9f 87       	std	Y+15, r25	; 0x0f
    1048:	a8 8b       	std	Y+16, r26	; 0x10
    104a:	b9 8b       	std	Y+17, r27	; 0x11
	f32 x=11,y=11,ans=0;
    104c:	80 e0       	ldi	r24, 0x00	; 0
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	a0 e3       	ldi	r26, 0x30	; 48
    1052:	b1 e4       	ldi	r27, 0x41	; 65
    1054:	8a 87       	std	Y+10, r24	; 0x0a
    1056:	9b 87       	std	Y+11, r25	; 0x0b
    1058:	ac 87       	std	Y+12, r26	; 0x0c
    105a:	bd 87       	std	Y+13, r27	; 0x0d
    105c:	80 e0       	ldi	r24, 0x00	; 0
    105e:	90 e0       	ldi	r25, 0x00	; 0
    1060:	a0 e3       	ldi	r26, 0x30	; 48
    1062:	b1 e4       	ldi	r27, 0x41	; 65
    1064:	8e 83       	std	Y+6, r24	; 0x06
    1066:	9f 83       	std	Y+7, r25	; 0x07
    1068:	a8 87       	std	Y+8, r26	; 0x08
    106a:	b9 87       	std	Y+9, r27	; 0x09
    106c:	80 e0       	ldi	r24, 0x00	; 0
    106e:	90 e0       	ldi	r25, 0x00	; 0
    1070:	a0 e0       	ldi	r26, 0x00	; 0
    1072:	b0 e0       	ldi	r27, 0x00	; 0
    1074:	8a 83       	std	Y+2, r24	; 0x02
    1076:	9b 83       	std	Y+3, r25	; 0x03
    1078:	ac 83       	std	Y+4, r26	; 0x04
    107a:	bd 83       	std	Y+5, r27	; 0x05
	for(u8 i=0;i<100;i++)
    107c:	19 82       	std	Y+1, r1	; 0x01
    107e:	79 c0       	rjmp	.+242    	; 0x1172 <Ln+0x152>
    {
        ans=Exp(tmp)-Copy_value;
    1080:	8e 85       	ldd	r24, Y+14	; 0x0e
    1082:	9f 85       	ldd	r25, Y+15	; 0x0f
    1084:	a8 89       	ldd	r26, Y+16	; 0x10
    1086:	b9 89       	ldd	r27, Y+17	; 0x11
    1088:	bc 01       	movw	r22, r24
    108a:	cd 01       	movw	r24, r26
    108c:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Exp>
    1090:	dc 01       	movw	r26, r24
    1092:	cb 01       	movw	r24, r22
    1094:	bc 01       	movw	r22, r24
    1096:	cd 01       	movw	r24, r26
    1098:	2a 89       	ldd	r18, Y+18	; 0x12
    109a:	3b 89       	ldd	r19, Y+19	; 0x13
    109c:	4c 89       	ldd	r20, Y+20	; 0x14
    109e:	5d 89       	ldd	r21, Y+21	; 0x15
    10a0:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
    10a4:	dc 01       	movw	r26, r24
    10a6:	cb 01       	movw	r24, r22
    10a8:	8a 83       	std	Y+2, r24	; 0x02
    10aa:	9b 83       	std	Y+3, r25	; 0x03
    10ac:	ac 83       	std	Y+4, r26	; 0x04
    10ae:	bd 83       	std	Y+5, r27	; 0x05

        if(ans==0)
    10b0:	6a 81       	ldd	r22, Y+2	; 0x02
    10b2:	7b 81       	ldd	r23, Y+3	; 0x03
    10b4:	8c 81       	ldd	r24, Y+4	; 0x04
    10b6:	9d 81       	ldd	r25, Y+5	; 0x05
    10b8:	20 e0       	ldi	r18, 0x00	; 0
    10ba:	30 e0       	ldi	r19, 0x00	; 0
    10bc:	40 e0       	ldi	r20, 0x00	; 0
    10be:	50 e0       	ldi	r21, 0x00	; 0
    10c0:	0e 94 bd 03 	call	0x77a	; 0x77a <__eqsf2>
    10c4:	88 23       	and	r24, r24
    10c6:	09 f4       	brne	.+2      	; 0x10ca <Ln+0xaa>
    10c8:	58 c0       	rjmp	.+176    	; 0x117a <Ln+0x15a>
             break;

        else if(ans<0)
    10ca:	6a 81       	ldd	r22, Y+2	; 0x02
    10cc:	7b 81       	ldd	r23, Y+3	; 0x03
    10ce:	8c 81       	ldd	r24, Y+4	; 0x04
    10d0:	9d 81       	ldd	r25, Y+5	; 0x05
    10d2:	20 e0       	ldi	r18, 0x00	; 0
    10d4:	30 e0       	ldi	r19, 0x00	; 0
    10d6:	40 e0       	ldi	r20, 0x00	; 0
    10d8:	50 e0       	ldi	r21, 0x00	; 0
    10da:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    10de:	88 23       	and	r24, r24
    10e0:	1c f5       	brge	.+70     	; 0x1128 <Ln+0x108>
           {
               y=tmp;
    10e2:	8e 85       	ldd	r24, Y+14	; 0x0e
    10e4:	9f 85       	ldd	r25, Y+15	; 0x0f
    10e6:	a8 89       	ldd	r26, Y+16	; 0x10
    10e8:	b9 89       	ldd	r27, Y+17	; 0x11
    10ea:	8e 83       	std	Y+6, r24	; 0x06
    10ec:	9f 83       	std	Y+7, r25	; 0x07
    10ee:	a8 87       	std	Y+8, r26	; 0x08
    10f0:	b9 87       	std	Y+9, r27	; 0x09
               tmp=(x+y)/2;
    10f2:	6a 85       	ldd	r22, Y+10	; 0x0a
    10f4:	7b 85       	ldd	r23, Y+11	; 0x0b
    10f6:	8c 85       	ldd	r24, Y+12	; 0x0c
    10f8:	9d 85       	ldd	r25, Y+13	; 0x0d
    10fa:	2e 81       	ldd	r18, Y+6	; 0x06
    10fc:	3f 81       	ldd	r19, Y+7	; 0x07
    10fe:	48 85       	ldd	r20, Y+8	; 0x08
    1100:	59 85       	ldd	r21, Y+9	; 0x09
    1102:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__addsf3>
    1106:	dc 01       	movw	r26, r24
    1108:	cb 01       	movw	r24, r22
    110a:	bc 01       	movw	r22, r24
    110c:	cd 01       	movw	r24, r26
    110e:	20 e0       	ldi	r18, 0x00	; 0
    1110:	30 e0       	ldi	r19, 0x00	; 0
    1112:	40 e0       	ldi	r20, 0x00	; 0
    1114:	50 e4       	ldi	r21, 0x40	; 64
    1116:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    111a:	dc 01       	movw	r26, r24
    111c:	cb 01       	movw	r24, r22
    111e:	8e 87       	std	Y+14, r24	; 0x0e
    1120:	9f 87       	std	Y+15, r25	; 0x0f
    1122:	a8 8b       	std	Y+16, r26	; 0x10
    1124:	b9 8b       	std	Y+17, r27	; 0x11
    1126:	22 c0       	rjmp	.+68     	; 0x116c <Ln+0x14c>
           }
        else
            {
                x=tmp;
    1128:	8e 85       	ldd	r24, Y+14	; 0x0e
    112a:	9f 85       	ldd	r25, Y+15	; 0x0f
    112c:	a8 89       	ldd	r26, Y+16	; 0x10
    112e:	b9 89       	ldd	r27, Y+17	; 0x11
    1130:	8a 87       	std	Y+10, r24	; 0x0a
    1132:	9b 87       	std	Y+11, r25	; 0x0b
    1134:	ac 87       	std	Y+12, r26	; 0x0c
    1136:	bd 87       	std	Y+13, r27	; 0x0d
                tmp=(x+y)/2;
    1138:	6a 85       	ldd	r22, Y+10	; 0x0a
    113a:	7b 85       	ldd	r23, Y+11	; 0x0b
    113c:	8c 85       	ldd	r24, Y+12	; 0x0c
    113e:	9d 85       	ldd	r25, Y+13	; 0x0d
    1140:	2e 81       	ldd	r18, Y+6	; 0x06
    1142:	3f 81       	ldd	r19, Y+7	; 0x07
    1144:	48 85       	ldd	r20, Y+8	; 0x08
    1146:	59 85       	ldd	r21, Y+9	; 0x09
    1148:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__addsf3>
    114c:	dc 01       	movw	r26, r24
    114e:	cb 01       	movw	r24, r22
    1150:	bc 01       	movw	r22, r24
    1152:	cd 01       	movw	r24, r26
    1154:	20 e0       	ldi	r18, 0x00	; 0
    1156:	30 e0       	ldi	r19, 0x00	; 0
    1158:	40 e0       	ldi	r20, 0x00	; 0
    115a:	50 e4       	ldi	r21, 0x40	; 64
    115c:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1160:	dc 01       	movw	r26, r24
    1162:	cb 01       	movw	r24, r22
    1164:	8e 87       	std	Y+14, r24	; 0x0e
    1166:	9f 87       	std	Y+15, r25	; 0x0f
    1168:	a8 8b       	std	Y+16, r26	; 0x10
    116a:	b9 8b       	std	Y+17, r27	; 0x11

f32 Ln(f32 Copy_value)
{
	f32 tmp=0;
	f32 x=11,y=11,ans=0;
	for(u8 i=0;i<100;i++)
    116c:	89 81       	ldd	r24, Y+1	; 0x01
    116e:	8f 5f       	subi	r24, 0xFF	; 255
    1170:	89 83       	std	Y+1, r24	; 0x01
    1172:	89 81       	ldd	r24, Y+1	; 0x01
    1174:	84 36       	cpi	r24, 0x64	; 100
    1176:	08 f4       	brcc	.+2      	; 0x117a <Ln+0x15a>
    1178:	83 cf       	rjmp	.-250    	; 0x1080 <Ln+0x60>
            {
                x=tmp;
                tmp=(x+y)/2;
            }
    }
	return tmp;
    117a:	8e 85       	ldd	r24, Y+14	; 0x0e
    117c:	9f 85       	ldd	r25, Y+15	; 0x0f
    117e:	a8 89       	ldd	r26, Y+16	; 0x10
    1180:	b9 89       	ldd	r27, Y+17	; 0x11
}
    1182:	bc 01       	movw	r22, r24
    1184:	cd 01       	movw	r24, r26
    1186:	65 96       	adiw	r28, 0x15	; 21
    1188:	0f b6       	in	r0, 0x3f	; 63
    118a:	f8 94       	cli
    118c:	de bf       	out	0x3e, r29	; 62
    118e:	0f be       	out	0x3f, r0	; 63
    1190:	cd bf       	out	0x3d, r28	; 61
    1192:	cf 91       	pop	r28
    1194:	df 91       	pop	r29
    1196:	08 95       	ret

00001198 <Cos>:

f32 Cos(f32 Copy_value)
{
    1198:	ef 92       	push	r14
    119a:	ff 92       	push	r15
    119c:	0f 93       	push	r16
    119e:	1f 93       	push	r17
    11a0:	df 93       	push	r29
    11a2:	cf 93       	push	r28
    11a4:	cd b7       	in	r28, 0x3d	; 61
    11a6:	de b7       	in	r29, 0x3e	; 62
    11a8:	61 97       	sbiw	r28, 0x11	; 17
    11aa:	0f b6       	in	r0, 0x3f	; 63
    11ac:	f8 94       	cli
    11ae:	de bf       	out	0x3e, r29	; 62
    11b0:	0f be       	out	0x3f, r0	; 63
    11b2:	cd bf       	out	0x3d, r28	; 61
    11b4:	6e 87       	std	Y+14, r22	; 0x0e
    11b6:	7f 87       	std	Y+15, r23	; 0x0f
    11b8:	88 8b       	std	Y+16, r24	; 0x10
    11ba:	99 8b       	std	Y+17, r25	; 0x11
	f32 y=Copy_value*22/(7*180);
    11bc:	6e 85       	ldd	r22, Y+14	; 0x0e
    11be:	7f 85       	ldd	r23, Y+15	; 0x0f
    11c0:	88 89       	ldd	r24, Y+16	; 0x10
    11c2:	99 89       	ldd	r25, Y+17	; 0x11
    11c4:	20 e0       	ldi	r18, 0x00	; 0
    11c6:	30 e0       	ldi	r19, 0x00	; 0
    11c8:	40 eb       	ldi	r20, 0xB0	; 176
    11ca:	51 e4       	ldi	r21, 0x41	; 65
    11cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11d0:	dc 01       	movw	r26, r24
    11d2:	cb 01       	movw	r24, r22
    11d4:	bc 01       	movw	r22, r24
    11d6:	cd 01       	movw	r24, r26
    11d8:	20 e0       	ldi	r18, 0x00	; 0
    11da:	30 e8       	ldi	r19, 0x80	; 128
    11dc:	4d e9       	ldi	r20, 0x9D	; 157
    11de:	54 e4       	ldi	r21, 0x44	; 68
    11e0:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    11e4:	dc 01       	movw	r26, r24
    11e6:	cb 01       	movw	r24, r22
    11e8:	8a 87       	std	Y+10, r24	; 0x0a
    11ea:	9b 87       	std	Y+11, r25	; 0x0b
    11ec:	ac 87       	std	Y+12, r26	; 0x0c
    11ee:	bd 87       	std	Y+13, r27	; 0x0d
	
	f32 ans=1,tmp=1;
    11f0:	80 e0       	ldi	r24, 0x00	; 0
    11f2:	90 e0       	ldi	r25, 0x00	; 0
    11f4:	a0 e8       	ldi	r26, 0x80	; 128
    11f6:	bf e3       	ldi	r27, 0x3F	; 63
    11f8:	8e 83       	std	Y+6, r24	; 0x06
    11fa:	9f 83       	std	Y+7, r25	; 0x07
    11fc:	a8 87       	std	Y+8, r26	; 0x08
    11fe:	b9 87       	std	Y+9, r27	; 0x09
    1200:	80 e0       	ldi	r24, 0x00	; 0
    1202:	90 e0       	ldi	r25, 0x00	; 0
    1204:	a0 e8       	ldi	r26, 0x80	; 128
    1206:	bf e3       	ldi	r27, 0x3F	; 63
    1208:	8a 83       	std	Y+2, r24	; 0x02
    120a:	9b 83       	std	Y+3, r25	; 0x03
    120c:	ac 83       	std	Y+4, r26	; 0x04
    120e:	bd 83       	std	Y+5, r27	; 0x05

    for(u8 i=1;i<=200;i+=2)
    1210:	81 e0       	ldi	r24, 0x01	; 1
    1212:	89 83       	std	Y+1, r24	; 0x01
    1214:	53 c0       	rjmp	.+166    	; 0x12bc <Cos+0x124>
	{
		tmp=tmp*(-1)*y*y/((i+1)*i);
    1216:	8a 81       	ldd	r24, Y+2	; 0x02
    1218:	9b 81       	ldd	r25, Y+3	; 0x03
    121a:	ac 81       	ldd	r26, Y+4	; 0x04
    121c:	bd 81       	ldd	r27, Y+5	; 0x05
    121e:	b0 58       	subi	r27, 0x80	; 128
    1220:	bc 01       	movw	r22, r24
    1222:	cd 01       	movw	r24, r26
    1224:	2a 85       	ldd	r18, Y+10	; 0x0a
    1226:	3b 85       	ldd	r19, Y+11	; 0x0b
    1228:	4c 85       	ldd	r20, Y+12	; 0x0c
    122a:	5d 85       	ldd	r21, Y+13	; 0x0d
    122c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1230:	dc 01       	movw	r26, r24
    1232:	cb 01       	movw	r24, r22
    1234:	bc 01       	movw	r22, r24
    1236:	cd 01       	movw	r24, r26
    1238:	2a 85       	ldd	r18, Y+10	; 0x0a
    123a:	3b 85       	ldd	r19, Y+11	; 0x0b
    123c:	4c 85       	ldd	r20, Y+12	; 0x0c
    123e:	5d 85       	ldd	r21, Y+13	; 0x0d
    1240:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1244:	dc 01       	movw	r26, r24
    1246:	cb 01       	movw	r24, r22
    1248:	7c 01       	movw	r14, r24
    124a:	8d 01       	movw	r16, r26
    124c:	89 81       	ldd	r24, Y+1	; 0x01
    124e:	88 2f       	mov	r24, r24
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	9c 01       	movw	r18, r24
    1254:	2f 5f       	subi	r18, 0xFF	; 255
    1256:	3f 4f       	sbci	r19, 0xFF	; 255
    1258:	89 81       	ldd	r24, Y+1	; 0x01
    125a:	88 2f       	mov	r24, r24
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	ac 01       	movw	r20, r24
    1260:	24 9f       	mul	r18, r20
    1262:	c0 01       	movw	r24, r0
    1264:	25 9f       	mul	r18, r21
    1266:	90 0d       	add	r25, r0
    1268:	34 9f       	mul	r19, r20
    126a:	90 0d       	add	r25, r0
    126c:	11 24       	eor	r1, r1
    126e:	aa 27       	eor	r26, r26
    1270:	97 fd       	sbrc	r25, 7
    1272:	a0 95       	com	r26
    1274:	ba 2f       	mov	r27, r26
    1276:	bc 01       	movw	r22, r24
    1278:	cd 01       	movw	r24, r26
    127a:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__floatsisf>
    127e:	9b 01       	movw	r18, r22
    1280:	ac 01       	movw	r20, r24
    1282:	c8 01       	movw	r24, r16
    1284:	b7 01       	movw	r22, r14
    1286:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    128a:	dc 01       	movw	r26, r24
    128c:	cb 01       	movw	r24, r22
    128e:	8a 83       	std	Y+2, r24	; 0x02
    1290:	9b 83       	std	Y+3, r25	; 0x03
    1292:	ac 83       	std	Y+4, r26	; 0x04
    1294:	bd 83       	std	Y+5, r27	; 0x05

		ans+=tmp;
    1296:	6e 81       	ldd	r22, Y+6	; 0x06
    1298:	7f 81       	ldd	r23, Y+7	; 0x07
    129a:	88 85       	ldd	r24, Y+8	; 0x08
    129c:	99 85       	ldd	r25, Y+9	; 0x09
    129e:	2a 81       	ldd	r18, Y+2	; 0x02
    12a0:	3b 81       	ldd	r19, Y+3	; 0x03
    12a2:	4c 81       	ldd	r20, Y+4	; 0x04
    12a4:	5d 81       	ldd	r21, Y+5	; 0x05
    12a6:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__addsf3>
    12aa:	dc 01       	movw	r26, r24
    12ac:	cb 01       	movw	r24, r22
    12ae:	8e 83       	std	Y+6, r24	; 0x06
    12b0:	9f 83       	std	Y+7, r25	; 0x07
    12b2:	a8 87       	std	Y+8, r26	; 0x08
    12b4:	b9 87       	std	Y+9, r27	; 0x09
{
	f32 y=Copy_value*22/(7*180);
	
	f32 ans=1,tmp=1;

    for(u8 i=1;i<=200;i+=2)
    12b6:	89 81       	ldd	r24, Y+1	; 0x01
    12b8:	8e 5f       	subi	r24, 0xFE	; 254
    12ba:	89 83       	std	Y+1, r24	; 0x01
    12bc:	89 81       	ldd	r24, Y+1	; 0x01
    12be:	89 3c       	cpi	r24, 0xC9	; 201
    12c0:	08 f4       	brcc	.+2      	; 0x12c4 <Cos+0x12c>
    12c2:	a9 cf       	rjmp	.-174    	; 0x1216 <Cos+0x7e>
	{
		tmp=tmp*(-1)*y*y/((i+1)*i);

		ans+=tmp;
	}
	return ans;
    12c4:	8e 81       	ldd	r24, Y+6	; 0x06
    12c6:	9f 81       	ldd	r25, Y+7	; 0x07
    12c8:	a8 85       	ldd	r26, Y+8	; 0x08
    12ca:	b9 85       	ldd	r27, Y+9	; 0x09
}
    12cc:	bc 01       	movw	r22, r24
    12ce:	cd 01       	movw	r24, r26
    12d0:	61 96       	adiw	r28, 0x11	; 17
    12d2:	0f b6       	in	r0, 0x3f	; 63
    12d4:	f8 94       	cli
    12d6:	de bf       	out	0x3e, r29	; 62
    12d8:	0f be       	out	0x3f, r0	; 63
    12da:	cd bf       	out	0x3d, r28	; 61
    12dc:	cf 91       	pop	r28
    12de:	df 91       	pop	r29
    12e0:	1f 91       	pop	r17
    12e2:	0f 91       	pop	r16
    12e4:	ff 90       	pop	r15
    12e6:	ef 90       	pop	r14
    12e8:	08 95       	ret

000012ea <Sin>:

f32 Sin(f32 Copy_value)
{
    12ea:	ef 92       	push	r14
    12ec:	ff 92       	push	r15
    12ee:	0f 93       	push	r16
    12f0:	1f 93       	push	r17
    12f2:	df 93       	push	r29
    12f4:	cf 93       	push	r28
    12f6:	cd b7       	in	r28, 0x3d	; 61
    12f8:	de b7       	in	r29, 0x3e	; 62
    12fa:	61 97       	sbiw	r28, 0x11	; 17
    12fc:	0f b6       	in	r0, 0x3f	; 63
    12fe:	f8 94       	cli
    1300:	de bf       	out	0x3e, r29	; 62
    1302:	0f be       	out	0x3f, r0	; 63
    1304:	cd bf       	out	0x3d, r28	; 61
    1306:	6e 87       	std	Y+14, r22	; 0x0e
    1308:	7f 87       	std	Y+15, r23	; 0x0f
    130a:	88 8b       	std	Y+16, r24	; 0x10
    130c:	99 8b       	std	Y+17, r25	; 0x11
	f32 y=Copy_value*22/(7*180);
    130e:	6e 85       	ldd	r22, Y+14	; 0x0e
    1310:	7f 85       	ldd	r23, Y+15	; 0x0f
    1312:	88 89       	ldd	r24, Y+16	; 0x10
    1314:	99 89       	ldd	r25, Y+17	; 0x11
    1316:	20 e0       	ldi	r18, 0x00	; 0
    1318:	30 e0       	ldi	r19, 0x00	; 0
    131a:	40 eb       	ldi	r20, 0xB0	; 176
    131c:	51 e4       	ldi	r21, 0x41	; 65
    131e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1322:	dc 01       	movw	r26, r24
    1324:	cb 01       	movw	r24, r22
    1326:	bc 01       	movw	r22, r24
    1328:	cd 01       	movw	r24, r26
    132a:	20 e0       	ldi	r18, 0x00	; 0
    132c:	30 e8       	ldi	r19, 0x80	; 128
    132e:	4d e9       	ldi	r20, 0x9D	; 157
    1330:	54 e4       	ldi	r21, 0x44	; 68
    1332:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1336:	dc 01       	movw	r26, r24
    1338:	cb 01       	movw	r24, r22
    133a:	8a 87       	std	Y+10, r24	; 0x0a
    133c:	9b 87       	std	Y+11, r25	; 0x0b
    133e:	ac 87       	std	Y+12, r26	; 0x0c
    1340:	bd 87       	std	Y+13, r27	; 0x0d
	f32 tmp=y,ans=y;
    1342:	8a 85       	ldd	r24, Y+10	; 0x0a
    1344:	9b 85       	ldd	r25, Y+11	; 0x0b
    1346:	ac 85       	ldd	r26, Y+12	; 0x0c
    1348:	bd 85       	ldd	r27, Y+13	; 0x0d
    134a:	8e 83       	std	Y+6, r24	; 0x06
    134c:	9f 83       	std	Y+7, r25	; 0x07
    134e:	a8 87       	std	Y+8, r26	; 0x08
    1350:	b9 87       	std	Y+9, r27	; 0x09
    1352:	8a 85       	ldd	r24, Y+10	; 0x0a
    1354:	9b 85       	ldd	r25, Y+11	; 0x0b
    1356:	ac 85       	ldd	r26, Y+12	; 0x0c
    1358:	bd 85       	ldd	r27, Y+13	; 0x0d
    135a:	8a 83       	std	Y+2, r24	; 0x02
    135c:	9b 83       	std	Y+3, r25	; 0x03
    135e:	ac 83       	std	Y+4, r26	; 0x04
    1360:	bd 83       	std	Y+5, r27	; 0x05
    for(u8 i=1;i<=200;i+=2)
    1362:	81 e0       	ldi	r24, 0x01	; 1
    1364:	89 83       	std	Y+1, r24	; 0x01
    1366:	54 c0       	rjmp	.+168    	; 0x1410 <Sin+0x126>
	{
		tmp=tmp*(-1)*y*y/((i+1)*(i+2));
    1368:	8e 81       	ldd	r24, Y+6	; 0x06
    136a:	9f 81       	ldd	r25, Y+7	; 0x07
    136c:	a8 85       	ldd	r26, Y+8	; 0x08
    136e:	b9 85       	ldd	r27, Y+9	; 0x09
    1370:	b0 58       	subi	r27, 0x80	; 128
    1372:	bc 01       	movw	r22, r24
    1374:	cd 01       	movw	r24, r26
    1376:	2a 85       	ldd	r18, Y+10	; 0x0a
    1378:	3b 85       	ldd	r19, Y+11	; 0x0b
    137a:	4c 85       	ldd	r20, Y+12	; 0x0c
    137c:	5d 85       	ldd	r21, Y+13	; 0x0d
    137e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1382:	dc 01       	movw	r26, r24
    1384:	cb 01       	movw	r24, r22
    1386:	bc 01       	movw	r22, r24
    1388:	cd 01       	movw	r24, r26
    138a:	2a 85       	ldd	r18, Y+10	; 0x0a
    138c:	3b 85       	ldd	r19, Y+11	; 0x0b
    138e:	4c 85       	ldd	r20, Y+12	; 0x0c
    1390:	5d 85       	ldd	r21, Y+13	; 0x0d
    1392:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1396:	dc 01       	movw	r26, r24
    1398:	cb 01       	movw	r24, r22
    139a:	7c 01       	movw	r14, r24
    139c:	8d 01       	movw	r16, r26
    139e:	89 81       	ldd	r24, Y+1	; 0x01
    13a0:	88 2f       	mov	r24, r24
    13a2:	90 e0       	ldi	r25, 0x00	; 0
    13a4:	9c 01       	movw	r18, r24
    13a6:	2f 5f       	subi	r18, 0xFF	; 255
    13a8:	3f 4f       	sbci	r19, 0xFF	; 255
    13aa:	89 81       	ldd	r24, Y+1	; 0x01
    13ac:	88 2f       	mov	r24, r24
    13ae:	90 e0       	ldi	r25, 0x00	; 0
    13b0:	02 96       	adiw	r24, 0x02	; 2
    13b2:	ac 01       	movw	r20, r24
    13b4:	24 9f       	mul	r18, r20
    13b6:	c0 01       	movw	r24, r0
    13b8:	25 9f       	mul	r18, r21
    13ba:	90 0d       	add	r25, r0
    13bc:	34 9f       	mul	r19, r20
    13be:	90 0d       	add	r25, r0
    13c0:	11 24       	eor	r1, r1
    13c2:	aa 27       	eor	r26, r26
    13c4:	97 fd       	sbrc	r25, 7
    13c6:	a0 95       	com	r26
    13c8:	ba 2f       	mov	r27, r26
    13ca:	bc 01       	movw	r22, r24
    13cc:	cd 01       	movw	r24, r26
    13ce:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__floatsisf>
    13d2:	9b 01       	movw	r18, r22
    13d4:	ac 01       	movw	r20, r24
    13d6:	c8 01       	movw	r24, r16
    13d8:	b7 01       	movw	r22, r14
    13da:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    13de:	dc 01       	movw	r26, r24
    13e0:	cb 01       	movw	r24, r22
    13e2:	8e 83       	std	Y+6, r24	; 0x06
    13e4:	9f 83       	std	Y+7, r25	; 0x07
    13e6:	a8 87       	std	Y+8, r26	; 0x08
    13e8:	b9 87       	std	Y+9, r27	; 0x09

		ans+=tmp;
    13ea:	6a 81       	ldd	r22, Y+2	; 0x02
    13ec:	7b 81       	ldd	r23, Y+3	; 0x03
    13ee:	8c 81       	ldd	r24, Y+4	; 0x04
    13f0:	9d 81       	ldd	r25, Y+5	; 0x05
    13f2:	2e 81       	ldd	r18, Y+6	; 0x06
    13f4:	3f 81       	ldd	r19, Y+7	; 0x07
    13f6:	48 85       	ldd	r20, Y+8	; 0x08
    13f8:	59 85       	ldd	r21, Y+9	; 0x09
    13fa:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__addsf3>
    13fe:	dc 01       	movw	r26, r24
    1400:	cb 01       	movw	r24, r22
    1402:	8a 83       	std	Y+2, r24	; 0x02
    1404:	9b 83       	std	Y+3, r25	; 0x03
    1406:	ac 83       	std	Y+4, r26	; 0x04
    1408:	bd 83       	std	Y+5, r27	; 0x05

f32 Sin(f32 Copy_value)
{
	f32 y=Copy_value*22/(7*180);
	f32 tmp=y,ans=y;
    for(u8 i=1;i<=200;i+=2)
    140a:	89 81       	ldd	r24, Y+1	; 0x01
    140c:	8e 5f       	subi	r24, 0xFE	; 254
    140e:	89 83       	std	Y+1, r24	; 0x01
    1410:	89 81       	ldd	r24, Y+1	; 0x01
    1412:	89 3c       	cpi	r24, 0xC9	; 201
    1414:	08 f4       	brcc	.+2      	; 0x1418 <Sin+0x12e>
    1416:	a8 cf       	rjmp	.-176    	; 0x1368 <Sin+0x7e>
	{
		tmp=tmp*(-1)*y*y/((i+1)*(i+2));

		ans+=tmp;
	}
	return ans;
    1418:	8a 81       	ldd	r24, Y+2	; 0x02
    141a:	9b 81       	ldd	r25, Y+3	; 0x03
    141c:	ac 81       	ldd	r26, Y+4	; 0x04
    141e:	bd 81       	ldd	r27, Y+5	; 0x05
}
    1420:	bc 01       	movw	r22, r24
    1422:	cd 01       	movw	r24, r26
    1424:	61 96       	adiw	r28, 0x11	; 17
    1426:	0f b6       	in	r0, 0x3f	; 63
    1428:	f8 94       	cli
    142a:	de bf       	out	0x3e, r29	; 62
    142c:	0f be       	out	0x3f, r0	; 63
    142e:	cd bf       	out	0x3d, r28	; 61
    1430:	cf 91       	pop	r28
    1432:	df 91       	pop	r29
    1434:	1f 91       	pop	r17
    1436:	0f 91       	pop	r16
    1438:	ff 90       	pop	r15
    143a:	ef 90       	pop	r14
    143c:	08 95       	ret

0000143e <Tan>:

f32 Tan(f32 Copy_value)
{
    143e:	ef 92       	push	r14
    1440:	ff 92       	push	r15
    1442:	0f 93       	push	r16
    1444:	1f 93       	push	r17
    1446:	df 93       	push	r29
    1448:	cf 93       	push	r28
    144a:	00 d0       	rcall	.+0      	; 0x144c <Tan+0xe>
    144c:	00 d0       	rcall	.+0      	; 0x144e <Tan+0x10>
    144e:	cd b7       	in	r28, 0x3d	; 61
    1450:	de b7       	in	r29, 0x3e	; 62
    1452:	69 83       	std	Y+1, r22	; 0x01
    1454:	7a 83       	std	Y+2, r23	; 0x02
    1456:	8b 83       	std	Y+3, r24	; 0x03
    1458:	9c 83       	std	Y+4, r25	; 0x04
	return Sin(Copy_value)/Cos(Copy_value);
    145a:	89 81       	ldd	r24, Y+1	; 0x01
    145c:	9a 81       	ldd	r25, Y+2	; 0x02
    145e:	ab 81       	ldd	r26, Y+3	; 0x03
    1460:	bc 81       	ldd	r27, Y+4	; 0x04
    1462:	bc 01       	movw	r22, r24
    1464:	cd 01       	movw	r24, r26
    1466:	0e 94 75 09 	call	0x12ea	; 0x12ea <Sin>
    146a:	7b 01       	movw	r14, r22
    146c:	8c 01       	movw	r16, r24
    146e:	89 81       	ldd	r24, Y+1	; 0x01
    1470:	9a 81       	ldd	r25, Y+2	; 0x02
    1472:	ab 81       	ldd	r26, Y+3	; 0x03
    1474:	bc 81       	ldd	r27, Y+4	; 0x04
    1476:	bc 01       	movw	r22, r24
    1478:	cd 01       	movw	r24, r26
    147a:	0e 94 cc 08 	call	0x1198	; 0x1198 <Cos>
    147e:	9b 01       	movw	r18, r22
    1480:	ac 01       	movw	r20, r24
    1482:	c8 01       	movw	r24, r16
    1484:	b7 01       	movw	r22, r14
    1486:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    148a:	dc 01       	movw	r26, r24
    148c:	cb 01       	movw	r24, r22
}
    148e:	bc 01       	movw	r22, r24
    1490:	cd 01       	movw	r24, r26
    1492:	0f 90       	pop	r0
    1494:	0f 90       	pop	r0
    1496:	0f 90       	pop	r0
    1498:	0f 90       	pop	r0
    149a:	cf 91       	pop	r28
    149c:	df 91       	pop	r29
    149e:	1f 91       	pop	r17
    14a0:	0f 91       	pop	r16
    14a2:	ff 90       	pop	r15
    14a4:	ef 90       	pop	r14
    14a6:	08 95       	ret

000014a8 <DIO_VidSetPinDirection>:
#include "BIT_MATH.h"
#include "DIO.h"


void DIO_VidSetPinDirection(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8Direction)
{
    14a8:	df 93       	push	r29
    14aa:	cf 93       	push	r28
    14ac:	cd b7       	in	r28, 0x3d	; 61
    14ae:	de b7       	in	r29, 0x3e	; 62
    14b0:	27 97       	sbiw	r28, 0x07	; 7
    14b2:	0f b6       	in	r0, 0x3f	; 63
    14b4:	f8 94       	cli
    14b6:	de bf       	out	0x3e, r29	; 62
    14b8:	0f be       	out	0x3f, r0	; 63
    14ba:	cd bf       	out	0x3d, r28	; 61
    14bc:	89 83       	std	Y+1, r24	; 0x01
    14be:	6a 83       	std	Y+2, r22	; 0x02
    14c0:	4b 83       	std	Y+3, r20	; 0x03
	if(Copy_u8Direction==1)
    14c2:	8b 81       	ldd	r24, Y+3	; 0x03
    14c4:	81 30       	cpi	r24, 0x01	; 1
    14c6:	09 f0       	breq	.+2      	; 0x14ca <DIO_VidSetPinDirection+0x22>
    14c8:	6f c0       	rjmp	.+222    	; 0x15a8 <DIO_VidSetPinDirection+0x100>
	{
		switch(Copy_u8Port)
    14ca:	89 81       	ldd	r24, Y+1	; 0x01
    14cc:	28 2f       	mov	r18, r24
    14ce:	30 e0       	ldi	r19, 0x00	; 0
    14d0:	3f 83       	std	Y+7, r19	; 0x07
    14d2:	2e 83       	std	Y+6, r18	; 0x06
    14d4:	8e 81       	ldd	r24, Y+6	; 0x06
    14d6:	9f 81       	ldd	r25, Y+7	; 0x07
    14d8:	81 30       	cpi	r24, 0x01	; 1
    14da:	91 05       	cpc	r25, r1
    14dc:	49 f1       	breq	.+82     	; 0x1530 <DIO_VidSetPinDirection+0x88>
    14de:	2e 81       	ldd	r18, Y+6	; 0x06
    14e0:	3f 81       	ldd	r19, Y+7	; 0x07
    14e2:	22 30       	cpi	r18, 0x02	; 2
    14e4:	31 05       	cpc	r19, r1
    14e6:	2c f4       	brge	.+10     	; 0x14f2 <DIO_VidSetPinDirection+0x4a>
    14e8:	8e 81       	ldd	r24, Y+6	; 0x06
    14ea:	9f 81       	ldd	r25, Y+7	; 0x07
    14ec:	00 97       	sbiw	r24, 0x00	; 0
    14ee:	61 f0       	breq	.+24     	; 0x1508 <DIO_VidSetPinDirection+0x60>
    14f0:	d2 c0       	rjmp	.+420    	; 0x1696 <DIO_VidSetPinDirection+0x1ee>
    14f2:	2e 81       	ldd	r18, Y+6	; 0x06
    14f4:	3f 81       	ldd	r19, Y+7	; 0x07
    14f6:	22 30       	cpi	r18, 0x02	; 2
    14f8:	31 05       	cpc	r19, r1
    14fa:	71 f1       	breq	.+92     	; 0x1558 <DIO_VidSetPinDirection+0xb0>
    14fc:	8e 81       	ldd	r24, Y+6	; 0x06
    14fe:	9f 81       	ldd	r25, Y+7	; 0x07
    1500:	83 30       	cpi	r24, 0x03	; 3
    1502:	91 05       	cpc	r25, r1
    1504:	e9 f1       	breq	.+122    	; 0x1580 <DIO_VidSetPinDirection+0xd8>
    1506:	c7 c0       	rjmp	.+398    	; 0x1696 <DIO_VidSetPinDirection+0x1ee>
		{
			case 0: SET_BIT(DDRA,Copy_u8Pin);break;
    1508:	aa e3       	ldi	r26, 0x3A	; 58
    150a:	b0 e0       	ldi	r27, 0x00	; 0
    150c:	ea e3       	ldi	r30, 0x3A	; 58
    150e:	f0 e0       	ldi	r31, 0x00	; 0
    1510:	80 81       	ld	r24, Z
    1512:	48 2f       	mov	r20, r24
    1514:	8a 81       	ldd	r24, Y+2	; 0x02
    1516:	28 2f       	mov	r18, r24
    1518:	30 e0       	ldi	r19, 0x00	; 0
    151a:	81 e0       	ldi	r24, 0x01	; 1
    151c:	90 e0       	ldi	r25, 0x00	; 0
    151e:	02 2e       	mov	r0, r18
    1520:	02 c0       	rjmp	.+4      	; 0x1526 <DIO_VidSetPinDirection+0x7e>
    1522:	88 0f       	add	r24, r24
    1524:	99 1f       	adc	r25, r25
    1526:	0a 94       	dec	r0
    1528:	e2 f7       	brpl	.-8      	; 0x1522 <DIO_VidSetPinDirection+0x7a>
    152a:	84 2b       	or	r24, r20
    152c:	8c 93       	st	X, r24
    152e:	b3 c0       	rjmp	.+358    	; 0x1696 <DIO_VidSetPinDirection+0x1ee>
			case 1: SET_BIT(DDRB,Copy_u8Pin);break;
    1530:	a7 e3       	ldi	r26, 0x37	; 55
    1532:	b0 e0       	ldi	r27, 0x00	; 0
    1534:	e7 e3       	ldi	r30, 0x37	; 55
    1536:	f0 e0       	ldi	r31, 0x00	; 0
    1538:	80 81       	ld	r24, Z
    153a:	48 2f       	mov	r20, r24
    153c:	8a 81       	ldd	r24, Y+2	; 0x02
    153e:	28 2f       	mov	r18, r24
    1540:	30 e0       	ldi	r19, 0x00	; 0
    1542:	81 e0       	ldi	r24, 0x01	; 1
    1544:	90 e0       	ldi	r25, 0x00	; 0
    1546:	02 2e       	mov	r0, r18
    1548:	02 c0       	rjmp	.+4      	; 0x154e <DIO_VidSetPinDirection+0xa6>
    154a:	88 0f       	add	r24, r24
    154c:	99 1f       	adc	r25, r25
    154e:	0a 94       	dec	r0
    1550:	e2 f7       	brpl	.-8      	; 0x154a <DIO_VidSetPinDirection+0xa2>
    1552:	84 2b       	or	r24, r20
    1554:	8c 93       	st	X, r24
    1556:	9f c0       	rjmp	.+318    	; 0x1696 <DIO_VidSetPinDirection+0x1ee>
			case 2: SET_BIT(DDRC,Copy_u8Pin);break;
    1558:	a4 e3       	ldi	r26, 0x34	; 52
    155a:	b0 e0       	ldi	r27, 0x00	; 0
    155c:	e4 e3       	ldi	r30, 0x34	; 52
    155e:	f0 e0       	ldi	r31, 0x00	; 0
    1560:	80 81       	ld	r24, Z
    1562:	48 2f       	mov	r20, r24
    1564:	8a 81       	ldd	r24, Y+2	; 0x02
    1566:	28 2f       	mov	r18, r24
    1568:	30 e0       	ldi	r19, 0x00	; 0
    156a:	81 e0       	ldi	r24, 0x01	; 1
    156c:	90 e0       	ldi	r25, 0x00	; 0
    156e:	02 2e       	mov	r0, r18
    1570:	02 c0       	rjmp	.+4      	; 0x1576 <DIO_VidSetPinDirection+0xce>
    1572:	88 0f       	add	r24, r24
    1574:	99 1f       	adc	r25, r25
    1576:	0a 94       	dec	r0
    1578:	e2 f7       	brpl	.-8      	; 0x1572 <DIO_VidSetPinDirection+0xca>
    157a:	84 2b       	or	r24, r20
    157c:	8c 93       	st	X, r24
    157e:	8b c0       	rjmp	.+278    	; 0x1696 <DIO_VidSetPinDirection+0x1ee>
			case 3: SET_BIT(DDRD,Copy_u8Pin);break;
    1580:	a1 e3       	ldi	r26, 0x31	; 49
    1582:	b0 e0       	ldi	r27, 0x00	; 0
    1584:	e1 e3       	ldi	r30, 0x31	; 49
    1586:	f0 e0       	ldi	r31, 0x00	; 0
    1588:	80 81       	ld	r24, Z
    158a:	48 2f       	mov	r20, r24
    158c:	8a 81       	ldd	r24, Y+2	; 0x02
    158e:	28 2f       	mov	r18, r24
    1590:	30 e0       	ldi	r19, 0x00	; 0
    1592:	81 e0       	ldi	r24, 0x01	; 1
    1594:	90 e0       	ldi	r25, 0x00	; 0
    1596:	02 2e       	mov	r0, r18
    1598:	02 c0       	rjmp	.+4      	; 0x159e <DIO_VidSetPinDirection+0xf6>
    159a:	88 0f       	add	r24, r24
    159c:	99 1f       	adc	r25, r25
    159e:	0a 94       	dec	r0
    15a0:	e2 f7       	brpl	.-8      	; 0x159a <DIO_VidSetPinDirection+0xf2>
    15a2:	84 2b       	or	r24, r20
    15a4:	8c 93       	st	X, r24
    15a6:	77 c0       	rjmp	.+238    	; 0x1696 <DIO_VidSetPinDirection+0x1ee>
		}
	}
	else if(Copy_u8Direction==0)
    15a8:	8b 81       	ldd	r24, Y+3	; 0x03
    15aa:	88 23       	and	r24, r24
    15ac:	09 f0       	breq	.+2      	; 0x15b0 <DIO_VidSetPinDirection+0x108>
    15ae:	73 c0       	rjmp	.+230    	; 0x1696 <DIO_VidSetPinDirection+0x1ee>
	{
		switch(Copy_u8Port)
    15b0:	89 81       	ldd	r24, Y+1	; 0x01
    15b2:	28 2f       	mov	r18, r24
    15b4:	30 e0       	ldi	r19, 0x00	; 0
    15b6:	3d 83       	std	Y+5, r19	; 0x05
    15b8:	2c 83       	std	Y+4, r18	; 0x04
    15ba:	8c 81       	ldd	r24, Y+4	; 0x04
    15bc:	9d 81       	ldd	r25, Y+5	; 0x05
    15be:	81 30       	cpi	r24, 0x01	; 1
    15c0:	91 05       	cpc	r25, r1
    15c2:	59 f1       	breq	.+86     	; 0x161a <DIO_VidSetPinDirection+0x172>
    15c4:	2c 81       	ldd	r18, Y+4	; 0x04
    15c6:	3d 81       	ldd	r19, Y+5	; 0x05
    15c8:	22 30       	cpi	r18, 0x02	; 2
    15ca:	31 05       	cpc	r19, r1
    15cc:	2c f4       	brge	.+10     	; 0x15d8 <DIO_VidSetPinDirection+0x130>
    15ce:	8c 81       	ldd	r24, Y+4	; 0x04
    15d0:	9d 81       	ldd	r25, Y+5	; 0x05
    15d2:	00 97       	sbiw	r24, 0x00	; 0
    15d4:	69 f0       	breq	.+26     	; 0x15f0 <DIO_VidSetPinDirection+0x148>
    15d6:	5f c0       	rjmp	.+190    	; 0x1696 <DIO_VidSetPinDirection+0x1ee>
    15d8:	2c 81       	ldd	r18, Y+4	; 0x04
    15da:	3d 81       	ldd	r19, Y+5	; 0x05
    15dc:	22 30       	cpi	r18, 0x02	; 2
    15de:	31 05       	cpc	r19, r1
    15e0:	89 f1       	breq	.+98     	; 0x1644 <DIO_VidSetPinDirection+0x19c>
    15e2:	8c 81       	ldd	r24, Y+4	; 0x04
    15e4:	9d 81       	ldd	r25, Y+5	; 0x05
    15e6:	83 30       	cpi	r24, 0x03	; 3
    15e8:	91 05       	cpc	r25, r1
    15ea:	09 f4       	brne	.+2      	; 0x15ee <DIO_VidSetPinDirection+0x146>
    15ec:	40 c0       	rjmp	.+128    	; 0x166e <DIO_VidSetPinDirection+0x1c6>
    15ee:	53 c0       	rjmp	.+166    	; 0x1696 <DIO_VidSetPinDirection+0x1ee>
		{
			case 0: CLEAR_BIT(DDRA,Copy_u8Pin);break;
    15f0:	aa e3       	ldi	r26, 0x3A	; 58
    15f2:	b0 e0       	ldi	r27, 0x00	; 0
    15f4:	ea e3       	ldi	r30, 0x3A	; 58
    15f6:	f0 e0       	ldi	r31, 0x00	; 0
    15f8:	80 81       	ld	r24, Z
    15fa:	48 2f       	mov	r20, r24
    15fc:	8a 81       	ldd	r24, Y+2	; 0x02
    15fe:	28 2f       	mov	r18, r24
    1600:	30 e0       	ldi	r19, 0x00	; 0
    1602:	81 e0       	ldi	r24, 0x01	; 1
    1604:	90 e0       	ldi	r25, 0x00	; 0
    1606:	02 2e       	mov	r0, r18
    1608:	02 c0       	rjmp	.+4      	; 0x160e <DIO_VidSetPinDirection+0x166>
    160a:	88 0f       	add	r24, r24
    160c:	99 1f       	adc	r25, r25
    160e:	0a 94       	dec	r0
    1610:	e2 f7       	brpl	.-8      	; 0x160a <DIO_VidSetPinDirection+0x162>
    1612:	80 95       	com	r24
    1614:	84 23       	and	r24, r20
    1616:	8c 93       	st	X, r24
    1618:	3e c0       	rjmp	.+124    	; 0x1696 <DIO_VidSetPinDirection+0x1ee>
			case 1: CLEAR_BIT(DDRB,Copy_u8Pin);break;
    161a:	a7 e3       	ldi	r26, 0x37	; 55
    161c:	b0 e0       	ldi	r27, 0x00	; 0
    161e:	e7 e3       	ldi	r30, 0x37	; 55
    1620:	f0 e0       	ldi	r31, 0x00	; 0
    1622:	80 81       	ld	r24, Z
    1624:	48 2f       	mov	r20, r24
    1626:	8a 81       	ldd	r24, Y+2	; 0x02
    1628:	28 2f       	mov	r18, r24
    162a:	30 e0       	ldi	r19, 0x00	; 0
    162c:	81 e0       	ldi	r24, 0x01	; 1
    162e:	90 e0       	ldi	r25, 0x00	; 0
    1630:	02 2e       	mov	r0, r18
    1632:	02 c0       	rjmp	.+4      	; 0x1638 <DIO_VidSetPinDirection+0x190>
    1634:	88 0f       	add	r24, r24
    1636:	99 1f       	adc	r25, r25
    1638:	0a 94       	dec	r0
    163a:	e2 f7       	brpl	.-8      	; 0x1634 <DIO_VidSetPinDirection+0x18c>
    163c:	80 95       	com	r24
    163e:	84 23       	and	r24, r20
    1640:	8c 93       	st	X, r24
    1642:	29 c0       	rjmp	.+82     	; 0x1696 <DIO_VidSetPinDirection+0x1ee>
			case 2: CLEAR_BIT(DDRC,Copy_u8Pin);break;
    1644:	a4 e3       	ldi	r26, 0x34	; 52
    1646:	b0 e0       	ldi	r27, 0x00	; 0
    1648:	e4 e3       	ldi	r30, 0x34	; 52
    164a:	f0 e0       	ldi	r31, 0x00	; 0
    164c:	80 81       	ld	r24, Z
    164e:	48 2f       	mov	r20, r24
    1650:	8a 81       	ldd	r24, Y+2	; 0x02
    1652:	28 2f       	mov	r18, r24
    1654:	30 e0       	ldi	r19, 0x00	; 0
    1656:	81 e0       	ldi	r24, 0x01	; 1
    1658:	90 e0       	ldi	r25, 0x00	; 0
    165a:	02 2e       	mov	r0, r18
    165c:	02 c0       	rjmp	.+4      	; 0x1662 <DIO_VidSetPinDirection+0x1ba>
    165e:	88 0f       	add	r24, r24
    1660:	99 1f       	adc	r25, r25
    1662:	0a 94       	dec	r0
    1664:	e2 f7       	brpl	.-8      	; 0x165e <DIO_VidSetPinDirection+0x1b6>
    1666:	80 95       	com	r24
    1668:	84 23       	and	r24, r20
    166a:	8c 93       	st	X, r24
    166c:	14 c0       	rjmp	.+40     	; 0x1696 <DIO_VidSetPinDirection+0x1ee>
			case 3: CLEAR_BIT(DDRD,Copy_u8Pin);break;
    166e:	a1 e3       	ldi	r26, 0x31	; 49
    1670:	b0 e0       	ldi	r27, 0x00	; 0
    1672:	e1 e3       	ldi	r30, 0x31	; 49
    1674:	f0 e0       	ldi	r31, 0x00	; 0
    1676:	80 81       	ld	r24, Z
    1678:	48 2f       	mov	r20, r24
    167a:	8a 81       	ldd	r24, Y+2	; 0x02
    167c:	28 2f       	mov	r18, r24
    167e:	30 e0       	ldi	r19, 0x00	; 0
    1680:	81 e0       	ldi	r24, 0x01	; 1
    1682:	90 e0       	ldi	r25, 0x00	; 0
    1684:	02 2e       	mov	r0, r18
    1686:	02 c0       	rjmp	.+4      	; 0x168c <DIO_VidSetPinDirection+0x1e4>
    1688:	88 0f       	add	r24, r24
    168a:	99 1f       	adc	r25, r25
    168c:	0a 94       	dec	r0
    168e:	e2 f7       	brpl	.-8      	; 0x1688 <DIO_VidSetPinDirection+0x1e0>
    1690:	80 95       	com	r24
    1692:	84 23       	and	r24, r20
    1694:	8c 93       	st	X, r24
		}
	}
}
    1696:	27 96       	adiw	r28, 0x07	; 7
    1698:	0f b6       	in	r0, 0x3f	; 63
    169a:	f8 94       	cli
    169c:	de bf       	out	0x3e, r29	; 62
    169e:	0f be       	out	0x3f, r0	; 63
    16a0:	cd bf       	out	0x3d, r28	; 61
    16a2:	cf 91       	pop	r28
    16a4:	df 91       	pop	r29
    16a6:	08 95       	ret

000016a8 <DIO_VidSetPinValue>:

void DIO_VidSetPinValue(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8Value)
{
    16a8:	df 93       	push	r29
    16aa:	cf 93       	push	r28
    16ac:	cd b7       	in	r28, 0x3d	; 61
    16ae:	de b7       	in	r29, 0x3e	; 62
    16b0:	27 97       	sbiw	r28, 0x07	; 7
    16b2:	0f b6       	in	r0, 0x3f	; 63
    16b4:	f8 94       	cli
    16b6:	de bf       	out	0x3e, r29	; 62
    16b8:	0f be       	out	0x3f, r0	; 63
    16ba:	cd bf       	out	0x3d, r28	; 61
    16bc:	89 83       	std	Y+1, r24	; 0x01
    16be:	6a 83       	std	Y+2, r22	; 0x02
    16c0:	4b 83       	std	Y+3, r20	; 0x03
	if(Copy_u8Value==1)
    16c2:	8b 81       	ldd	r24, Y+3	; 0x03
    16c4:	81 30       	cpi	r24, 0x01	; 1
    16c6:	09 f0       	breq	.+2      	; 0x16ca <DIO_VidSetPinValue+0x22>
    16c8:	6f c0       	rjmp	.+222    	; 0x17a8 <DIO_VidSetPinValue+0x100>
	{
		switch(Copy_u8Port)
    16ca:	89 81       	ldd	r24, Y+1	; 0x01
    16cc:	28 2f       	mov	r18, r24
    16ce:	30 e0       	ldi	r19, 0x00	; 0
    16d0:	3f 83       	std	Y+7, r19	; 0x07
    16d2:	2e 83       	std	Y+6, r18	; 0x06
    16d4:	8e 81       	ldd	r24, Y+6	; 0x06
    16d6:	9f 81       	ldd	r25, Y+7	; 0x07
    16d8:	81 30       	cpi	r24, 0x01	; 1
    16da:	91 05       	cpc	r25, r1
    16dc:	49 f1       	breq	.+82     	; 0x1730 <DIO_VidSetPinValue+0x88>
    16de:	2e 81       	ldd	r18, Y+6	; 0x06
    16e0:	3f 81       	ldd	r19, Y+7	; 0x07
    16e2:	22 30       	cpi	r18, 0x02	; 2
    16e4:	31 05       	cpc	r19, r1
    16e6:	2c f4       	brge	.+10     	; 0x16f2 <DIO_VidSetPinValue+0x4a>
    16e8:	8e 81       	ldd	r24, Y+6	; 0x06
    16ea:	9f 81       	ldd	r25, Y+7	; 0x07
    16ec:	00 97       	sbiw	r24, 0x00	; 0
    16ee:	61 f0       	breq	.+24     	; 0x1708 <DIO_VidSetPinValue+0x60>
    16f0:	d2 c0       	rjmp	.+420    	; 0x1896 <DIO_VidSetPinValue+0x1ee>
    16f2:	2e 81       	ldd	r18, Y+6	; 0x06
    16f4:	3f 81       	ldd	r19, Y+7	; 0x07
    16f6:	22 30       	cpi	r18, 0x02	; 2
    16f8:	31 05       	cpc	r19, r1
    16fa:	71 f1       	breq	.+92     	; 0x1758 <DIO_VidSetPinValue+0xb0>
    16fc:	8e 81       	ldd	r24, Y+6	; 0x06
    16fe:	9f 81       	ldd	r25, Y+7	; 0x07
    1700:	83 30       	cpi	r24, 0x03	; 3
    1702:	91 05       	cpc	r25, r1
    1704:	e9 f1       	breq	.+122    	; 0x1780 <DIO_VidSetPinValue+0xd8>
    1706:	c7 c0       	rjmp	.+398    	; 0x1896 <DIO_VidSetPinValue+0x1ee>
		{
			case 0: SET_BIT(PORTA,Copy_u8Pin);break;
    1708:	ab e3       	ldi	r26, 0x3B	; 59
    170a:	b0 e0       	ldi	r27, 0x00	; 0
    170c:	eb e3       	ldi	r30, 0x3B	; 59
    170e:	f0 e0       	ldi	r31, 0x00	; 0
    1710:	80 81       	ld	r24, Z
    1712:	48 2f       	mov	r20, r24
    1714:	8a 81       	ldd	r24, Y+2	; 0x02
    1716:	28 2f       	mov	r18, r24
    1718:	30 e0       	ldi	r19, 0x00	; 0
    171a:	81 e0       	ldi	r24, 0x01	; 1
    171c:	90 e0       	ldi	r25, 0x00	; 0
    171e:	02 2e       	mov	r0, r18
    1720:	02 c0       	rjmp	.+4      	; 0x1726 <DIO_VidSetPinValue+0x7e>
    1722:	88 0f       	add	r24, r24
    1724:	99 1f       	adc	r25, r25
    1726:	0a 94       	dec	r0
    1728:	e2 f7       	brpl	.-8      	; 0x1722 <DIO_VidSetPinValue+0x7a>
    172a:	84 2b       	or	r24, r20
    172c:	8c 93       	st	X, r24
    172e:	b3 c0       	rjmp	.+358    	; 0x1896 <DIO_VidSetPinValue+0x1ee>
			case 1: SET_BIT(PORTB,Copy_u8Pin);break;
    1730:	a8 e3       	ldi	r26, 0x38	; 56
    1732:	b0 e0       	ldi	r27, 0x00	; 0
    1734:	e8 e3       	ldi	r30, 0x38	; 56
    1736:	f0 e0       	ldi	r31, 0x00	; 0
    1738:	80 81       	ld	r24, Z
    173a:	48 2f       	mov	r20, r24
    173c:	8a 81       	ldd	r24, Y+2	; 0x02
    173e:	28 2f       	mov	r18, r24
    1740:	30 e0       	ldi	r19, 0x00	; 0
    1742:	81 e0       	ldi	r24, 0x01	; 1
    1744:	90 e0       	ldi	r25, 0x00	; 0
    1746:	02 2e       	mov	r0, r18
    1748:	02 c0       	rjmp	.+4      	; 0x174e <DIO_VidSetPinValue+0xa6>
    174a:	88 0f       	add	r24, r24
    174c:	99 1f       	adc	r25, r25
    174e:	0a 94       	dec	r0
    1750:	e2 f7       	brpl	.-8      	; 0x174a <DIO_VidSetPinValue+0xa2>
    1752:	84 2b       	or	r24, r20
    1754:	8c 93       	st	X, r24
    1756:	9f c0       	rjmp	.+318    	; 0x1896 <DIO_VidSetPinValue+0x1ee>
			case 2: SET_BIT(PORTC,Copy_u8Pin);break;
    1758:	a5 e3       	ldi	r26, 0x35	; 53
    175a:	b0 e0       	ldi	r27, 0x00	; 0
    175c:	e5 e3       	ldi	r30, 0x35	; 53
    175e:	f0 e0       	ldi	r31, 0x00	; 0
    1760:	80 81       	ld	r24, Z
    1762:	48 2f       	mov	r20, r24
    1764:	8a 81       	ldd	r24, Y+2	; 0x02
    1766:	28 2f       	mov	r18, r24
    1768:	30 e0       	ldi	r19, 0x00	; 0
    176a:	81 e0       	ldi	r24, 0x01	; 1
    176c:	90 e0       	ldi	r25, 0x00	; 0
    176e:	02 2e       	mov	r0, r18
    1770:	02 c0       	rjmp	.+4      	; 0x1776 <DIO_VidSetPinValue+0xce>
    1772:	88 0f       	add	r24, r24
    1774:	99 1f       	adc	r25, r25
    1776:	0a 94       	dec	r0
    1778:	e2 f7       	brpl	.-8      	; 0x1772 <DIO_VidSetPinValue+0xca>
    177a:	84 2b       	or	r24, r20
    177c:	8c 93       	st	X, r24
    177e:	8b c0       	rjmp	.+278    	; 0x1896 <DIO_VidSetPinValue+0x1ee>
			case 3: SET_BIT(PORTD,Copy_u8Pin);break;
    1780:	a2 e3       	ldi	r26, 0x32	; 50
    1782:	b0 e0       	ldi	r27, 0x00	; 0
    1784:	e2 e3       	ldi	r30, 0x32	; 50
    1786:	f0 e0       	ldi	r31, 0x00	; 0
    1788:	80 81       	ld	r24, Z
    178a:	48 2f       	mov	r20, r24
    178c:	8a 81       	ldd	r24, Y+2	; 0x02
    178e:	28 2f       	mov	r18, r24
    1790:	30 e0       	ldi	r19, 0x00	; 0
    1792:	81 e0       	ldi	r24, 0x01	; 1
    1794:	90 e0       	ldi	r25, 0x00	; 0
    1796:	02 2e       	mov	r0, r18
    1798:	02 c0       	rjmp	.+4      	; 0x179e <DIO_VidSetPinValue+0xf6>
    179a:	88 0f       	add	r24, r24
    179c:	99 1f       	adc	r25, r25
    179e:	0a 94       	dec	r0
    17a0:	e2 f7       	brpl	.-8      	; 0x179a <DIO_VidSetPinValue+0xf2>
    17a2:	84 2b       	or	r24, r20
    17a4:	8c 93       	st	X, r24
    17a6:	77 c0       	rjmp	.+238    	; 0x1896 <DIO_VidSetPinValue+0x1ee>
		}
	}
	else if(Copy_u8Value==0)
    17a8:	8b 81       	ldd	r24, Y+3	; 0x03
    17aa:	88 23       	and	r24, r24
    17ac:	09 f0       	breq	.+2      	; 0x17b0 <DIO_VidSetPinValue+0x108>
    17ae:	73 c0       	rjmp	.+230    	; 0x1896 <DIO_VidSetPinValue+0x1ee>
	{
		switch(Copy_u8Port)
    17b0:	89 81       	ldd	r24, Y+1	; 0x01
    17b2:	28 2f       	mov	r18, r24
    17b4:	30 e0       	ldi	r19, 0x00	; 0
    17b6:	3d 83       	std	Y+5, r19	; 0x05
    17b8:	2c 83       	std	Y+4, r18	; 0x04
    17ba:	8c 81       	ldd	r24, Y+4	; 0x04
    17bc:	9d 81       	ldd	r25, Y+5	; 0x05
    17be:	81 30       	cpi	r24, 0x01	; 1
    17c0:	91 05       	cpc	r25, r1
    17c2:	59 f1       	breq	.+86     	; 0x181a <DIO_VidSetPinValue+0x172>
    17c4:	2c 81       	ldd	r18, Y+4	; 0x04
    17c6:	3d 81       	ldd	r19, Y+5	; 0x05
    17c8:	22 30       	cpi	r18, 0x02	; 2
    17ca:	31 05       	cpc	r19, r1
    17cc:	2c f4       	brge	.+10     	; 0x17d8 <DIO_VidSetPinValue+0x130>
    17ce:	8c 81       	ldd	r24, Y+4	; 0x04
    17d0:	9d 81       	ldd	r25, Y+5	; 0x05
    17d2:	00 97       	sbiw	r24, 0x00	; 0
    17d4:	69 f0       	breq	.+26     	; 0x17f0 <DIO_VidSetPinValue+0x148>
    17d6:	5f c0       	rjmp	.+190    	; 0x1896 <DIO_VidSetPinValue+0x1ee>
    17d8:	2c 81       	ldd	r18, Y+4	; 0x04
    17da:	3d 81       	ldd	r19, Y+5	; 0x05
    17dc:	22 30       	cpi	r18, 0x02	; 2
    17de:	31 05       	cpc	r19, r1
    17e0:	89 f1       	breq	.+98     	; 0x1844 <DIO_VidSetPinValue+0x19c>
    17e2:	8c 81       	ldd	r24, Y+4	; 0x04
    17e4:	9d 81       	ldd	r25, Y+5	; 0x05
    17e6:	83 30       	cpi	r24, 0x03	; 3
    17e8:	91 05       	cpc	r25, r1
    17ea:	09 f4       	brne	.+2      	; 0x17ee <DIO_VidSetPinValue+0x146>
    17ec:	40 c0       	rjmp	.+128    	; 0x186e <DIO_VidSetPinValue+0x1c6>
    17ee:	53 c0       	rjmp	.+166    	; 0x1896 <DIO_VidSetPinValue+0x1ee>
		{
			case 0: CLEAR_BIT(PORTA,Copy_u8Pin);break;
    17f0:	ab e3       	ldi	r26, 0x3B	; 59
    17f2:	b0 e0       	ldi	r27, 0x00	; 0
    17f4:	eb e3       	ldi	r30, 0x3B	; 59
    17f6:	f0 e0       	ldi	r31, 0x00	; 0
    17f8:	80 81       	ld	r24, Z
    17fa:	48 2f       	mov	r20, r24
    17fc:	8a 81       	ldd	r24, Y+2	; 0x02
    17fe:	28 2f       	mov	r18, r24
    1800:	30 e0       	ldi	r19, 0x00	; 0
    1802:	81 e0       	ldi	r24, 0x01	; 1
    1804:	90 e0       	ldi	r25, 0x00	; 0
    1806:	02 2e       	mov	r0, r18
    1808:	02 c0       	rjmp	.+4      	; 0x180e <DIO_VidSetPinValue+0x166>
    180a:	88 0f       	add	r24, r24
    180c:	99 1f       	adc	r25, r25
    180e:	0a 94       	dec	r0
    1810:	e2 f7       	brpl	.-8      	; 0x180a <DIO_VidSetPinValue+0x162>
    1812:	80 95       	com	r24
    1814:	84 23       	and	r24, r20
    1816:	8c 93       	st	X, r24
    1818:	3e c0       	rjmp	.+124    	; 0x1896 <DIO_VidSetPinValue+0x1ee>
			case 1: CLEAR_BIT(PORTB,Copy_u8Pin);break;
    181a:	a8 e3       	ldi	r26, 0x38	; 56
    181c:	b0 e0       	ldi	r27, 0x00	; 0
    181e:	e8 e3       	ldi	r30, 0x38	; 56
    1820:	f0 e0       	ldi	r31, 0x00	; 0
    1822:	80 81       	ld	r24, Z
    1824:	48 2f       	mov	r20, r24
    1826:	8a 81       	ldd	r24, Y+2	; 0x02
    1828:	28 2f       	mov	r18, r24
    182a:	30 e0       	ldi	r19, 0x00	; 0
    182c:	81 e0       	ldi	r24, 0x01	; 1
    182e:	90 e0       	ldi	r25, 0x00	; 0
    1830:	02 2e       	mov	r0, r18
    1832:	02 c0       	rjmp	.+4      	; 0x1838 <DIO_VidSetPinValue+0x190>
    1834:	88 0f       	add	r24, r24
    1836:	99 1f       	adc	r25, r25
    1838:	0a 94       	dec	r0
    183a:	e2 f7       	brpl	.-8      	; 0x1834 <DIO_VidSetPinValue+0x18c>
    183c:	80 95       	com	r24
    183e:	84 23       	and	r24, r20
    1840:	8c 93       	st	X, r24
    1842:	29 c0       	rjmp	.+82     	; 0x1896 <DIO_VidSetPinValue+0x1ee>
			case 2: CLEAR_BIT(PORTC,Copy_u8Pin);break;
    1844:	a5 e3       	ldi	r26, 0x35	; 53
    1846:	b0 e0       	ldi	r27, 0x00	; 0
    1848:	e5 e3       	ldi	r30, 0x35	; 53
    184a:	f0 e0       	ldi	r31, 0x00	; 0
    184c:	80 81       	ld	r24, Z
    184e:	48 2f       	mov	r20, r24
    1850:	8a 81       	ldd	r24, Y+2	; 0x02
    1852:	28 2f       	mov	r18, r24
    1854:	30 e0       	ldi	r19, 0x00	; 0
    1856:	81 e0       	ldi	r24, 0x01	; 1
    1858:	90 e0       	ldi	r25, 0x00	; 0
    185a:	02 2e       	mov	r0, r18
    185c:	02 c0       	rjmp	.+4      	; 0x1862 <DIO_VidSetPinValue+0x1ba>
    185e:	88 0f       	add	r24, r24
    1860:	99 1f       	adc	r25, r25
    1862:	0a 94       	dec	r0
    1864:	e2 f7       	brpl	.-8      	; 0x185e <DIO_VidSetPinValue+0x1b6>
    1866:	80 95       	com	r24
    1868:	84 23       	and	r24, r20
    186a:	8c 93       	st	X, r24
    186c:	14 c0       	rjmp	.+40     	; 0x1896 <DIO_VidSetPinValue+0x1ee>
			case 3: CLEAR_BIT(PORTD,Copy_u8Pin);break;
    186e:	a2 e3       	ldi	r26, 0x32	; 50
    1870:	b0 e0       	ldi	r27, 0x00	; 0
    1872:	e2 e3       	ldi	r30, 0x32	; 50
    1874:	f0 e0       	ldi	r31, 0x00	; 0
    1876:	80 81       	ld	r24, Z
    1878:	48 2f       	mov	r20, r24
    187a:	8a 81       	ldd	r24, Y+2	; 0x02
    187c:	28 2f       	mov	r18, r24
    187e:	30 e0       	ldi	r19, 0x00	; 0
    1880:	81 e0       	ldi	r24, 0x01	; 1
    1882:	90 e0       	ldi	r25, 0x00	; 0
    1884:	02 2e       	mov	r0, r18
    1886:	02 c0       	rjmp	.+4      	; 0x188c <DIO_VidSetPinValue+0x1e4>
    1888:	88 0f       	add	r24, r24
    188a:	99 1f       	adc	r25, r25
    188c:	0a 94       	dec	r0
    188e:	e2 f7       	brpl	.-8      	; 0x1888 <DIO_VidSetPinValue+0x1e0>
    1890:	80 95       	com	r24
    1892:	84 23       	and	r24, r20
    1894:	8c 93       	st	X, r24
		}
	}
}
    1896:	27 96       	adiw	r28, 0x07	; 7
    1898:	0f b6       	in	r0, 0x3f	; 63
    189a:	f8 94       	cli
    189c:	de bf       	out	0x3e, r29	; 62
    189e:	0f be       	out	0x3f, r0	; 63
    18a0:	cd bf       	out	0x3d, r28	; 61
    18a2:	cf 91       	pop	r28
    18a4:	df 91       	pop	r29
    18a6:	08 95       	ret

000018a8 <DIO_VidSetPortDirection>:

void DIO_VidSetPortDirection(u8 Copy_u8Port,u8 Copy_u8Direction)
{
    18a8:	df 93       	push	r29
    18aa:	cf 93       	push	r28
    18ac:	00 d0       	rcall	.+0      	; 0x18ae <DIO_VidSetPortDirection+0x6>
    18ae:	00 d0       	rcall	.+0      	; 0x18b0 <DIO_VidSetPortDirection+0x8>
    18b0:	cd b7       	in	r28, 0x3d	; 61
    18b2:	de b7       	in	r29, 0x3e	; 62
    18b4:	89 83       	std	Y+1, r24	; 0x01
    18b6:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8Port)
    18b8:	89 81       	ldd	r24, Y+1	; 0x01
    18ba:	28 2f       	mov	r18, r24
    18bc:	30 e0       	ldi	r19, 0x00	; 0
    18be:	3c 83       	std	Y+4, r19	; 0x04
    18c0:	2b 83       	std	Y+3, r18	; 0x03
    18c2:	8b 81       	ldd	r24, Y+3	; 0x03
    18c4:	9c 81       	ldd	r25, Y+4	; 0x04
    18c6:	81 30       	cpi	r24, 0x01	; 1
    18c8:	91 05       	cpc	r25, r1
    18ca:	d1 f0       	breq	.+52     	; 0x1900 <DIO_VidSetPortDirection+0x58>
    18cc:	2b 81       	ldd	r18, Y+3	; 0x03
    18ce:	3c 81       	ldd	r19, Y+4	; 0x04
    18d0:	22 30       	cpi	r18, 0x02	; 2
    18d2:	31 05       	cpc	r19, r1
    18d4:	2c f4       	brge	.+10     	; 0x18e0 <DIO_VidSetPortDirection+0x38>
    18d6:	8b 81       	ldd	r24, Y+3	; 0x03
    18d8:	9c 81       	ldd	r25, Y+4	; 0x04
    18da:	00 97       	sbiw	r24, 0x00	; 0
    18dc:	61 f0       	breq	.+24     	; 0x18f6 <DIO_VidSetPortDirection+0x4e>
    18de:	1e c0       	rjmp	.+60     	; 0x191c <DIO_VidSetPortDirection+0x74>
    18e0:	2b 81       	ldd	r18, Y+3	; 0x03
    18e2:	3c 81       	ldd	r19, Y+4	; 0x04
    18e4:	22 30       	cpi	r18, 0x02	; 2
    18e6:	31 05       	cpc	r19, r1
    18e8:	81 f0       	breq	.+32     	; 0x190a <DIO_VidSetPortDirection+0x62>
    18ea:	8b 81       	ldd	r24, Y+3	; 0x03
    18ec:	9c 81       	ldd	r25, Y+4	; 0x04
    18ee:	83 30       	cpi	r24, 0x03	; 3
    18f0:	91 05       	cpc	r25, r1
    18f2:	81 f0       	breq	.+32     	; 0x1914 <DIO_VidSetPortDirection+0x6c>
    18f4:	13 c0       	rjmp	.+38     	; 0x191c <DIO_VidSetPortDirection+0x74>
	{
		case 0: DDRA=Copy_u8Direction;break;
    18f6:	ea e3       	ldi	r30, 0x3A	; 58
    18f8:	f0 e0       	ldi	r31, 0x00	; 0
    18fa:	8a 81       	ldd	r24, Y+2	; 0x02
    18fc:	80 83       	st	Z, r24
    18fe:	0e c0       	rjmp	.+28     	; 0x191c <DIO_VidSetPortDirection+0x74>
		case 1: DDRB=Copy_u8Direction;break;
    1900:	e7 e3       	ldi	r30, 0x37	; 55
    1902:	f0 e0       	ldi	r31, 0x00	; 0
    1904:	8a 81       	ldd	r24, Y+2	; 0x02
    1906:	80 83       	st	Z, r24
    1908:	09 c0       	rjmp	.+18     	; 0x191c <DIO_VidSetPortDirection+0x74>
		case 2: DDRC=Copy_u8Direction;break;
    190a:	e4 e3       	ldi	r30, 0x34	; 52
    190c:	f0 e0       	ldi	r31, 0x00	; 0
    190e:	8a 81       	ldd	r24, Y+2	; 0x02
    1910:	80 83       	st	Z, r24
    1912:	04 c0       	rjmp	.+8      	; 0x191c <DIO_VidSetPortDirection+0x74>
		case 3: DDRD=Copy_u8Direction;break;
    1914:	e1 e3       	ldi	r30, 0x31	; 49
    1916:	f0 e0       	ldi	r31, 0x00	; 0
    1918:	8a 81       	ldd	r24, Y+2	; 0x02
    191a:	80 83       	st	Z, r24
	}
}
    191c:	0f 90       	pop	r0
    191e:	0f 90       	pop	r0
    1920:	0f 90       	pop	r0
    1922:	0f 90       	pop	r0
    1924:	cf 91       	pop	r28
    1926:	df 91       	pop	r29
    1928:	08 95       	ret

0000192a <DIO_VidSetPortValue>:

void DIO_VidSetPortValue(u8 Copy_u8Port,u8 Copy_u8Value)
{
    192a:	df 93       	push	r29
    192c:	cf 93       	push	r28
    192e:	00 d0       	rcall	.+0      	; 0x1930 <DIO_VidSetPortValue+0x6>
    1930:	00 d0       	rcall	.+0      	; 0x1932 <DIO_VidSetPortValue+0x8>
    1932:	cd b7       	in	r28, 0x3d	; 61
    1934:	de b7       	in	r29, 0x3e	; 62
    1936:	89 83       	std	Y+1, r24	; 0x01
    1938:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8Port)
    193a:	89 81       	ldd	r24, Y+1	; 0x01
    193c:	28 2f       	mov	r18, r24
    193e:	30 e0       	ldi	r19, 0x00	; 0
    1940:	3c 83       	std	Y+4, r19	; 0x04
    1942:	2b 83       	std	Y+3, r18	; 0x03
    1944:	8b 81       	ldd	r24, Y+3	; 0x03
    1946:	9c 81       	ldd	r25, Y+4	; 0x04
    1948:	81 30       	cpi	r24, 0x01	; 1
    194a:	91 05       	cpc	r25, r1
    194c:	d1 f0       	breq	.+52     	; 0x1982 <DIO_VidSetPortValue+0x58>
    194e:	2b 81       	ldd	r18, Y+3	; 0x03
    1950:	3c 81       	ldd	r19, Y+4	; 0x04
    1952:	22 30       	cpi	r18, 0x02	; 2
    1954:	31 05       	cpc	r19, r1
    1956:	2c f4       	brge	.+10     	; 0x1962 <DIO_VidSetPortValue+0x38>
    1958:	8b 81       	ldd	r24, Y+3	; 0x03
    195a:	9c 81       	ldd	r25, Y+4	; 0x04
    195c:	00 97       	sbiw	r24, 0x00	; 0
    195e:	61 f0       	breq	.+24     	; 0x1978 <DIO_VidSetPortValue+0x4e>
    1960:	1e c0       	rjmp	.+60     	; 0x199e <DIO_VidSetPortValue+0x74>
    1962:	2b 81       	ldd	r18, Y+3	; 0x03
    1964:	3c 81       	ldd	r19, Y+4	; 0x04
    1966:	22 30       	cpi	r18, 0x02	; 2
    1968:	31 05       	cpc	r19, r1
    196a:	81 f0       	breq	.+32     	; 0x198c <DIO_VidSetPortValue+0x62>
    196c:	8b 81       	ldd	r24, Y+3	; 0x03
    196e:	9c 81       	ldd	r25, Y+4	; 0x04
    1970:	83 30       	cpi	r24, 0x03	; 3
    1972:	91 05       	cpc	r25, r1
    1974:	81 f0       	breq	.+32     	; 0x1996 <DIO_VidSetPortValue+0x6c>
    1976:	13 c0       	rjmp	.+38     	; 0x199e <DIO_VidSetPortValue+0x74>
	{
		case 0: PORTA=Copy_u8Value;break;
    1978:	eb e3       	ldi	r30, 0x3B	; 59
    197a:	f0 e0       	ldi	r31, 0x00	; 0
    197c:	8a 81       	ldd	r24, Y+2	; 0x02
    197e:	80 83       	st	Z, r24
    1980:	0e c0       	rjmp	.+28     	; 0x199e <DIO_VidSetPortValue+0x74>
		case 1: PORTB=Copy_u8Value;break;
    1982:	e8 e3       	ldi	r30, 0x38	; 56
    1984:	f0 e0       	ldi	r31, 0x00	; 0
    1986:	8a 81       	ldd	r24, Y+2	; 0x02
    1988:	80 83       	st	Z, r24
    198a:	09 c0       	rjmp	.+18     	; 0x199e <DIO_VidSetPortValue+0x74>
		case 2: PORTC=Copy_u8Value;break;
    198c:	e5 e3       	ldi	r30, 0x35	; 53
    198e:	f0 e0       	ldi	r31, 0x00	; 0
    1990:	8a 81       	ldd	r24, Y+2	; 0x02
    1992:	80 83       	st	Z, r24
    1994:	04 c0       	rjmp	.+8      	; 0x199e <DIO_VidSetPortValue+0x74>
		case 3: PORTD=Copy_u8Value;break;
    1996:	e2 e3       	ldi	r30, 0x32	; 50
    1998:	f0 e0       	ldi	r31, 0x00	; 0
    199a:	8a 81       	ldd	r24, Y+2	; 0x02
    199c:	80 83       	st	Z, r24
	}
}
    199e:	0f 90       	pop	r0
    19a0:	0f 90       	pop	r0
    19a2:	0f 90       	pop	r0
    19a4:	0f 90       	pop	r0
    19a6:	cf 91       	pop	r28
    19a8:	df 91       	pop	r29
    19aa:	08 95       	ret

000019ac <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 Copy_u8Port,u8 Copy_u8Pin)
{
    19ac:	df 93       	push	r29
    19ae:	cf 93       	push	r28
    19b0:	00 d0       	rcall	.+0      	; 0x19b2 <DIO_u8GetPinValue+0x6>
    19b2:	00 d0       	rcall	.+0      	; 0x19b4 <DIO_u8GetPinValue+0x8>
    19b4:	0f 92       	push	r0
    19b6:	cd b7       	in	r28, 0x3d	; 61
    19b8:	de b7       	in	r29, 0x3e	; 62
    19ba:	8a 83       	std	Y+2, r24	; 0x02
    19bc:	6b 83       	std	Y+3, r22	; 0x03
	u8 tmp;
	
	switch(Copy_u8Port)
    19be:	8a 81       	ldd	r24, Y+2	; 0x02
    19c0:	28 2f       	mov	r18, r24
    19c2:	30 e0       	ldi	r19, 0x00	; 0
    19c4:	3d 83       	std	Y+5, r19	; 0x05
    19c6:	2c 83       	std	Y+4, r18	; 0x04
    19c8:	4c 81       	ldd	r20, Y+4	; 0x04
    19ca:	5d 81       	ldd	r21, Y+5	; 0x05
    19cc:	41 30       	cpi	r20, 0x01	; 1
    19ce:	51 05       	cpc	r21, r1
    19d0:	41 f1       	breq	.+80     	; 0x1a22 <DIO_u8GetPinValue+0x76>
    19d2:	8c 81       	ldd	r24, Y+4	; 0x04
    19d4:	9d 81       	ldd	r25, Y+5	; 0x05
    19d6:	82 30       	cpi	r24, 0x02	; 2
    19d8:	91 05       	cpc	r25, r1
    19da:	34 f4       	brge	.+12     	; 0x19e8 <DIO_u8GetPinValue+0x3c>
    19dc:	2c 81       	ldd	r18, Y+4	; 0x04
    19de:	3d 81       	ldd	r19, Y+5	; 0x05
    19e0:	21 15       	cp	r18, r1
    19e2:	31 05       	cpc	r19, r1
    19e4:	61 f0       	breq	.+24     	; 0x19fe <DIO_u8GetPinValue+0x52>
    19e6:	52 c0       	rjmp	.+164    	; 0x1a8c <DIO_u8GetPinValue+0xe0>
    19e8:	4c 81       	ldd	r20, Y+4	; 0x04
    19ea:	5d 81       	ldd	r21, Y+5	; 0x05
    19ec:	42 30       	cpi	r20, 0x02	; 2
    19ee:	51 05       	cpc	r21, r1
    19f0:	51 f1       	breq	.+84     	; 0x1a46 <DIO_u8GetPinValue+0x9a>
    19f2:	8c 81       	ldd	r24, Y+4	; 0x04
    19f4:	9d 81       	ldd	r25, Y+5	; 0x05
    19f6:	83 30       	cpi	r24, 0x03	; 3
    19f8:	91 05       	cpc	r25, r1
    19fa:	b9 f1       	breq	.+110    	; 0x1a6a <DIO_u8GetPinValue+0xbe>
    19fc:	47 c0       	rjmp	.+142    	; 0x1a8c <DIO_u8GetPinValue+0xe0>
	{
		case 0: tmp = GET_BIT(PINA,Copy_u8Pin);break;
    19fe:	e9 e3       	ldi	r30, 0x39	; 57
    1a00:	f0 e0       	ldi	r31, 0x00	; 0
    1a02:	80 81       	ld	r24, Z
    1a04:	28 2f       	mov	r18, r24
    1a06:	30 e0       	ldi	r19, 0x00	; 0
    1a08:	8b 81       	ldd	r24, Y+3	; 0x03
    1a0a:	88 2f       	mov	r24, r24
    1a0c:	90 e0       	ldi	r25, 0x00	; 0
    1a0e:	a9 01       	movw	r20, r18
    1a10:	02 c0       	rjmp	.+4      	; 0x1a16 <DIO_u8GetPinValue+0x6a>
    1a12:	55 95       	asr	r21
    1a14:	47 95       	ror	r20
    1a16:	8a 95       	dec	r24
    1a18:	e2 f7       	brpl	.-8      	; 0x1a12 <DIO_u8GetPinValue+0x66>
    1a1a:	ca 01       	movw	r24, r20
    1a1c:	81 70       	andi	r24, 0x01	; 1
    1a1e:	89 83       	std	Y+1, r24	; 0x01
    1a20:	35 c0       	rjmp	.+106    	; 0x1a8c <DIO_u8GetPinValue+0xe0>
		case 1: tmp = GET_BIT(PINB,Copy_u8Pin);break;
    1a22:	e6 e3       	ldi	r30, 0x36	; 54
    1a24:	f0 e0       	ldi	r31, 0x00	; 0
    1a26:	80 81       	ld	r24, Z
    1a28:	28 2f       	mov	r18, r24
    1a2a:	30 e0       	ldi	r19, 0x00	; 0
    1a2c:	8b 81       	ldd	r24, Y+3	; 0x03
    1a2e:	88 2f       	mov	r24, r24
    1a30:	90 e0       	ldi	r25, 0x00	; 0
    1a32:	a9 01       	movw	r20, r18
    1a34:	02 c0       	rjmp	.+4      	; 0x1a3a <DIO_u8GetPinValue+0x8e>
    1a36:	55 95       	asr	r21
    1a38:	47 95       	ror	r20
    1a3a:	8a 95       	dec	r24
    1a3c:	e2 f7       	brpl	.-8      	; 0x1a36 <DIO_u8GetPinValue+0x8a>
    1a3e:	ca 01       	movw	r24, r20
    1a40:	81 70       	andi	r24, 0x01	; 1
    1a42:	89 83       	std	Y+1, r24	; 0x01
    1a44:	23 c0       	rjmp	.+70     	; 0x1a8c <DIO_u8GetPinValue+0xe0>
		case 2: tmp = GET_BIT(PINC,Copy_u8Pin);break;
    1a46:	e3 e3       	ldi	r30, 0x33	; 51
    1a48:	f0 e0       	ldi	r31, 0x00	; 0
    1a4a:	80 81       	ld	r24, Z
    1a4c:	28 2f       	mov	r18, r24
    1a4e:	30 e0       	ldi	r19, 0x00	; 0
    1a50:	8b 81       	ldd	r24, Y+3	; 0x03
    1a52:	88 2f       	mov	r24, r24
    1a54:	90 e0       	ldi	r25, 0x00	; 0
    1a56:	a9 01       	movw	r20, r18
    1a58:	02 c0       	rjmp	.+4      	; 0x1a5e <DIO_u8GetPinValue+0xb2>
    1a5a:	55 95       	asr	r21
    1a5c:	47 95       	ror	r20
    1a5e:	8a 95       	dec	r24
    1a60:	e2 f7       	brpl	.-8      	; 0x1a5a <DIO_u8GetPinValue+0xae>
    1a62:	ca 01       	movw	r24, r20
    1a64:	81 70       	andi	r24, 0x01	; 1
    1a66:	89 83       	std	Y+1, r24	; 0x01
    1a68:	11 c0       	rjmp	.+34     	; 0x1a8c <DIO_u8GetPinValue+0xe0>
		case 3: tmp = GET_BIT(PIND,Copy_u8Pin);break;
    1a6a:	e0 e3       	ldi	r30, 0x30	; 48
    1a6c:	f0 e0       	ldi	r31, 0x00	; 0
    1a6e:	80 81       	ld	r24, Z
    1a70:	28 2f       	mov	r18, r24
    1a72:	30 e0       	ldi	r19, 0x00	; 0
    1a74:	8b 81       	ldd	r24, Y+3	; 0x03
    1a76:	88 2f       	mov	r24, r24
    1a78:	90 e0       	ldi	r25, 0x00	; 0
    1a7a:	a9 01       	movw	r20, r18
    1a7c:	02 c0       	rjmp	.+4      	; 0x1a82 <DIO_u8GetPinValue+0xd6>
    1a7e:	55 95       	asr	r21
    1a80:	47 95       	ror	r20
    1a82:	8a 95       	dec	r24
    1a84:	e2 f7       	brpl	.-8      	; 0x1a7e <DIO_u8GetPinValue+0xd2>
    1a86:	ca 01       	movw	r24, r20
    1a88:	81 70       	andi	r24, 0x01	; 1
    1a8a:	89 83       	std	Y+1, r24	; 0x01
	}
	return tmp;
    1a8c:	89 81       	ldd	r24, Y+1	; 0x01
}
    1a8e:	0f 90       	pop	r0
    1a90:	0f 90       	pop	r0
    1a92:	0f 90       	pop	r0
    1a94:	0f 90       	pop	r0
    1a96:	0f 90       	pop	r0
    1a98:	cf 91       	pop	r28
    1a9a:	df 91       	pop	r29
    1a9c:	08 95       	ret

00001a9e <DIO_VidTogglePin>:

void DIO_VidTogglePin(u8 Copy_u8Port,u8 Copy_u8Pin)
{
    1a9e:	df 93       	push	r29
    1aa0:	cf 93       	push	r28
    1aa2:	00 d0       	rcall	.+0      	; 0x1aa4 <DIO_VidTogglePin+0x6>
    1aa4:	00 d0       	rcall	.+0      	; 0x1aa6 <DIO_VidTogglePin+0x8>
    1aa6:	cd b7       	in	r28, 0x3d	; 61
    1aa8:	de b7       	in	r29, 0x3e	; 62
    1aaa:	89 83       	std	Y+1, r24	; 0x01
    1aac:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8Port)
    1aae:	89 81       	ldd	r24, Y+1	; 0x01
    1ab0:	28 2f       	mov	r18, r24
    1ab2:	30 e0       	ldi	r19, 0x00	; 0
    1ab4:	3c 83       	std	Y+4, r19	; 0x04
    1ab6:	2b 83       	std	Y+3, r18	; 0x03
    1ab8:	8b 81       	ldd	r24, Y+3	; 0x03
    1aba:	9c 81       	ldd	r25, Y+4	; 0x04
    1abc:	81 30       	cpi	r24, 0x01	; 1
    1abe:	91 05       	cpc	r25, r1
    1ac0:	49 f1       	breq	.+82     	; 0x1b14 <DIO_VidTogglePin+0x76>
    1ac2:	2b 81       	ldd	r18, Y+3	; 0x03
    1ac4:	3c 81       	ldd	r19, Y+4	; 0x04
    1ac6:	22 30       	cpi	r18, 0x02	; 2
    1ac8:	31 05       	cpc	r19, r1
    1aca:	2c f4       	brge	.+10     	; 0x1ad6 <DIO_VidTogglePin+0x38>
    1acc:	8b 81       	ldd	r24, Y+3	; 0x03
    1ace:	9c 81       	ldd	r25, Y+4	; 0x04
    1ad0:	00 97       	sbiw	r24, 0x00	; 0
    1ad2:	61 f0       	breq	.+24     	; 0x1aec <DIO_VidTogglePin+0x4e>
    1ad4:	5a c0       	rjmp	.+180    	; 0x1b8a <DIO_VidTogglePin+0xec>
    1ad6:	2b 81       	ldd	r18, Y+3	; 0x03
    1ad8:	3c 81       	ldd	r19, Y+4	; 0x04
    1ada:	22 30       	cpi	r18, 0x02	; 2
    1adc:	31 05       	cpc	r19, r1
    1ade:	71 f1       	breq	.+92     	; 0x1b3c <DIO_VidTogglePin+0x9e>
    1ae0:	8b 81       	ldd	r24, Y+3	; 0x03
    1ae2:	9c 81       	ldd	r25, Y+4	; 0x04
    1ae4:	83 30       	cpi	r24, 0x03	; 3
    1ae6:	91 05       	cpc	r25, r1
    1ae8:	e9 f1       	breq	.+122    	; 0x1b64 <DIO_VidTogglePin+0xc6>
    1aea:	4f c0       	rjmp	.+158    	; 0x1b8a <DIO_VidTogglePin+0xec>
	{
		case 0: TOGGLE_BIT(PORTA,Copy_u8Pin);break;
    1aec:	ab e3       	ldi	r26, 0x3B	; 59
    1aee:	b0 e0       	ldi	r27, 0x00	; 0
    1af0:	eb e3       	ldi	r30, 0x3B	; 59
    1af2:	f0 e0       	ldi	r31, 0x00	; 0
    1af4:	80 81       	ld	r24, Z
    1af6:	48 2f       	mov	r20, r24
    1af8:	8a 81       	ldd	r24, Y+2	; 0x02
    1afa:	28 2f       	mov	r18, r24
    1afc:	30 e0       	ldi	r19, 0x00	; 0
    1afe:	81 e0       	ldi	r24, 0x01	; 1
    1b00:	90 e0       	ldi	r25, 0x00	; 0
    1b02:	02 2e       	mov	r0, r18
    1b04:	02 c0       	rjmp	.+4      	; 0x1b0a <DIO_VidTogglePin+0x6c>
    1b06:	88 0f       	add	r24, r24
    1b08:	99 1f       	adc	r25, r25
    1b0a:	0a 94       	dec	r0
    1b0c:	e2 f7       	brpl	.-8      	; 0x1b06 <DIO_VidTogglePin+0x68>
    1b0e:	84 27       	eor	r24, r20
    1b10:	8c 93       	st	X, r24
    1b12:	3b c0       	rjmp	.+118    	; 0x1b8a <DIO_VidTogglePin+0xec>
		case 1: TOGGLE_BIT(PORTB,Copy_u8Pin);break;
    1b14:	a8 e3       	ldi	r26, 0x38	; 56
    1b16:	b0 e0       	ldi	r27, 0x00	; 0
    1b18:	e8 e3       	ldi	r30, 0x38	; 56
    1b1a:	f0 e0       	ldi	r31, 0x00	; 0
    1b1c:	80 81       	ld	r24, Z
    1b1e:	48 2f       	mov	r20, r24
    1b20:	8a 81       	ldd	r24, Y+2	; 0x02
    1b22:	28 2f       	mov	r18, r24
    1b24:	30 e0       	ldi	r19, 0x00	; 0
    1b26:	81 e0       	ldi	r24, 0x01	; 1
    1b28:	90 e0       	ldi	r25, 0x00	; 0
    1b2a:	02 2e       	mov	r0, r18
    1b2c:	02 c0       	rjmp	.+4      	; 0x1b32 <DIO_VidTogglePin+0x94>
    1b2e:	88 0f       	add	r24, r24
    1b30:	99 1f       	adc	r25, r25
    1b32:	0a 94       	dec	r0
    1b34:	e2 f7       	brpl	.-8      	; 0x1b2e <DIO_VidTogglePin+0x90>
    1b36:	84 27       	eor	r24, r20
    1b38:	8c 93       	st	X, r24
    1b3a:	27 c0       	rjmp	.+78     	; 0x1b8a <DIO_VidTogglePin+0xec>
		case 2: TOGGLE_BIT(PORTC,Copy_u8Pin);break;
    1b3c:	a5 e3       	ldi	r26, 0x35	; 53
    1b3e:	b0 e0       	ldi	r27, 0x00	; 0
    1b40:	e5 e3       	ldi	r30, 0x35	; 53
    1b42:	f0 e0       	ldi	r31, 0x00	; 0
    1b44:	80 81       	ld	r24, Z
    1b46:	48 2f       	mov	r20, r24
    1b48:	8a 81       	ldd	r24, Y+2	; 0x02
    1b4a:	28 2f       	mov	r18, r24
    1b4c:	30 e0       	ldi	r19, 0x00	; 0
    1b4e:	81 e0       	ldi	r24, 0x01	; 1
    1b50:	90 e0       	ldi	r25, 0x00	; 0
    1b52:	02 2e       	mov	r0, r18
    1b54:	02 c0       	rjmp	.+4      	; 0x1b5a <DIO_VidTogglePin+0xbc>
    1b56:	88 0f       	add	r24, r24
    1b58:	99 1f       	adc	r25, r25
    1b5a:	0a 94       	dec	r0
    1b5c:	e2 f7       	brpl	.-8      	; 0x1b56 <DIO_VidTogglePin+0xb8>
    1b5e:	84 27       	eor	r24, r20
    1b60:	8c 93       	st	X, r24
    1b62:	13 c0       	rjmp	.+38     	; 0x1b8a <DIO_VidTogglePin+0xec>
		case 3: TOGGLE_BIT(PORTD,Copy_u8Pin);break;
    1b64:	a2 e3       	ldi	r26, 0x32	; 50
    1b66:	b0 e0       	ldi	r27, 0x00	; 0
    1b68:	e2 e3       	ldi	r30, 0x32	; 50
    1b6a:	f0 e0       	ldi	r31, 0x00	; 0
    1b6c:	80 81       	ld	r24, Z
    1b6e:	48 2f       	mov	r20, r24
    1b70:	8a 81       	ldd	r24, Y+2	; 0x02
    1b72:	28 2f       	mov	r18, r24
    1b74:	30 e0       	ldi	r19, 0x00	; 0
    1b76:	81 e0       	ldi	r24, 0x01	; 1
    1b78:	90 e0       	ldi	r25, 0x00	; 0
    1b7a:	02 2e       	mov	r0, r18
    1b7c:	02 c0       	rjmp	.+4      	; 0x1b82 <DIO_VidTogglePin+0xe4>
    1b7e:	88 0f       	add	r24, r24
    1b80:	99 1f       	adc	r25, r25
    1b82:	0a 94       	dec	r0
    1b84:	e2 f7       	brpl	.-8      	; 0x1b7e <DIO_VidTogglePin+0xe0>
    1b86:	84 27       	eor	r24, r20
    1b88:	8c 93       	st	X, r24
	}
}
    1b8a:	0f 90       	pop	r0
    1b8c:	0f 90       	pop	r0
    1b8e:	0f 90       	pop	r0
    1b90:	0f 90       	pop	r0
    1b92:	cf 91       	pop	r28
    1b94:	df 91       	pop	r29
    1b96:	08 95       	ret

00001b98 <KPD_VidInt>:
u8 KPD_u8ColPins[6]={KPD_C0_PIN,KPD_C1_PIN,KPD_C2_PIN,KPD_C3_PIN,KPD_C4_PIN,KPD_C5_PIN};



void KPD_VidInt()
{
    1b98:	df 93       	push	r29
    1b9a:	cf 93       	push	r28
    1b9c:	cd b7       	in	r28, 0x3d	; 61
    1b9e:	de b7       	in	r29, 0x3e	; 62
	DIO_VidSetPortDirection(KPD_PORT_0,0x0f);
    1ba0:	82 e0       	ldi	r24, 0x02	; 2
    1ba2:	6f e0       	ldi	r22, 0x0F	; 15
    1ba4:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <DIO_VidSetPortDirection>
	DIO_VidSetPortValue(KPD_PORT_0,0xff);
    1ba8:	82 e0       	ldi	r24, 0x02	; 2
    1baa:	6f ef       	ldi	r22, 0xFF	; 255
    1bac:	0e 94 95 0c 	call	0x192a	; 0x192a <DIO_VidSetPortValue>
	DIO_VidSetPinDirection(KPD_PORT_1,PIN_0,DIO_IN);
    1bb0:	83 e0       	ldi	r24, 0x03	; 3
    1bb2:	60 e0       	ldi	r22, 0x00	; 0
    1bb4:	40 e0       	ldi	r20, 0x00	; 0
    1bb6:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(KPD_PORT_1,PIN_1,DIO_IN);
    1bba:	83 e0       	ldi	r24, 0x03	; 3
    1bbc:	61 e0       	ldi	r22, 0x01	; 1
    1bbe:	40 e0       	ldi	r20, 0x00	; 0
    1bc0:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <DIO_VidSetPinDirection>
	DIO_VidSetPortValue(KPD_PORT_1,0xff);
    1bc4:	83 e0       	ldi	r24, 0x03	; 3
    1bc6:	6f ef       	ldi	r22, 0xFF	; 255
    1bc8:	0e 94 95 0c 	call	0x192a	; 0x192a <DIO_VidSetPortValue>
}
    1bcc:	cf 91       	pop	r28
    1bce:	df 91       	pop	r29
    1bd0:	08 95       	ret

00001bd2 <KPD_u8PressedKey>:

u8 KPD_u8PressedKey()
{
    1bd2:	df 93       	push	r29
    1bd4:	cf 93       	push	r28
    1bd6:	cd b7       	in	r28, 0x3d	; 61
    1bd8:	de b7       	in	r29, 0x3e	; 62
    1bda:	a1 97       	sbiw	r28, 0x21	; 33
    1bdc:	0f b6       	in	r0, 0x3f	; 63
    1bde:	f8 94       	cli
    1be0:	de bf       	out	0x3e, r29	; 62
    1be2:	0f be       	out	0x3f, r0	; 63
    1be4:	cd bf       	out	0x3d, r28	; 61
	u8 count_R, count_C,Pressed,Returned=KPD_CHEK,Flag=0;
    1be6:	8f ef       	ldi	r24, 0xFF	; 255
    1be8:	8e 8f       	std	Y+30, r24	; 0x1e
    1bea:	1d 8e       	std	Y+29, r1	; 0x1d
	for(count_R=0;count_R<4;count_R++)
    1bec:	19 a2       	std	Y+33, r1	; 0x21
    1bee:	7d c1       	rjmp	.+762    	; 0x1eea <KPD_u8PressedKey+0x318>
	{
		DIO_VidSetPinValue(KPD_PORT_0,KPD_u8RowPins[count_R],DIO_LOW);
    1bf0:	89 a1       	ldd	r24, Y+33	; 0x21
    1bf2:	88 2f       	mov	r24, r24
    1bf4:	90 e0       	ldi	r25, 0x00	; 0
    1bf6:	fc 01       	movw	r30, r24
    1bf8:	ea 56       	subi	r30, 0x6A	; 106
    1bfa:	fe 4f       	sbci	r31, 0xFE	; 254
    1bfc:	90 81       	ld	r25, Z
    1bfe:	82 e0       	ldi	r24, 0x02	; 2
    1c00:	69 2f       	mov	r22, r25
    1c02:	40 e0       	ldi	r20, 0x00	; 0
    1c04:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <DIO_VidSetPinValue>
		for(count_C=0;count_C<6;count_C++)
    1c08:	18 a2       	std	Y+32, r1	; 0x20
    1c0a:	59 c1       	rjmp	.+690    	; 0x1ebe <KPD_u8PressedKey+0x2ec>
		{
			if(count_C<4)
    1c0c:	88 a1       	ldd	r24, Y+32	; 0x20
    1c0e:	84 30       	cpi	r24, 0x04	; 4
    1c10:	08 f0       	brcs	.+2      	; 0x1c14 <KPD_u8PressedKey+0x42>
    1c12:	a9 c0       	rjmp	.+338    	; 0x1d66 <KPD_u8PressedKey+0x194>
			{
				Pressed=DIO_u8GetPinValue(KPD_PORT_0,KPD_u8ColPins[count_C]);
    1c14:	88 a1       	ldd	r24, Y+32	; 0x20
    1c16:	88 2f       	mov	r24, r24
    1c18:	90 e0       	ldi	r25, 0x00	; 0
    1c1a:	fc 01       	movw	r30, r24
    1c1c:	e6 56       	subi	r30, 0x66	; 102
    1c1e:	fe 4f       	sbci	r31, 0xFE	; 254
    1c20:	90 81       	ld	r25, Z
    1c22:	82 e0       	ldi	r24, 0x02	; 2
    1c24:	69 2f       	mov	r22, r25
    1c26:	0e 94 d6 0c 	call	0x19ac	; 0x19ac <DIO_u8GetPinValue>
    1c2a:	8f 8f       	std	Y+31, r24	; 0x1f
				if(Pressed==DIO_LOW)
    1c2c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1c2e:	88 23       	and	r24, r24
    1c30:	09 f0       	breq	.+2      	; 0x1c34 <KPD_u8PressedKey+0x62>
    1c32:	42 c1       	rjmp	.+644    	; 0x1eb8 <KPD_u8PressedKey+0x2e6>
    1c34:	80 e0       	ldi	r24, 0x00	; 0
    1c36:	90 e0       	ldi	r25, 0x00	; 0
    1c38:	a0 ea       	ldi	r26, 0xA0	; 160
    1c3a:	b1 e4       	ldi	r27, 0x41	; 65
    1c3c:	89 8f       	std	Y+25, r24	; 0x19
    1c3e:	9a 8f       	std	Y+26, r25	; 0x1a
    1c40:	ab 8f       	std	Y+27, r26	; 0x1b
    1c42:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c44:	69 8d       	ldd	r22, Y+25	; 0x19
    1c46:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c48:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c4a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c4c:	20 e0       	ldi	r18, 0x00	; 0
    1c4e:	30 e0       	ldi	r19, 0x00	; 0
    1c50:	4a ef       	ldi	r20, 0xFA	; 250
    1c52:	54 e4       	ldi	r21, 0x44	; 68
    1c54:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c58:	dc 01       	movw	r26, r24
    1c5a:	cb 01       	movw	r24, r22
    1c5c:	8d 8b       	std	Y+21, r24	; 0x15
    1c5e:	9e 8b       	std	Y+22, r25	; 0x16
    1c60:	af 8b       	std	Y+23, r26	; 0x17
    1c62:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1c64:	6d 89       	ldd	r22, Y+21	; 0x15
    1c66:	7e 89       	ldd	r23, Y+22	; 0x16
    1c68:	8f 89       	ldd	r24, Y+23	; 0x17
    1c6a:	98 8d       	ldd	r25, Y+24	; 0x18
    1c6c:	20 e0       	ldi	r18, 0x00	; 0
    1c6e:	30 e0       	ldi	r19, 0x00	; 0
    1c70:	40 e8       	ldi	r20, 0x80	; 128
    1c72:	5f e3       	ldi	r21, 0x3F	; 63
    1c74:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    1c78:	88 23       	and	r24, r24
    1c7a:	2c f4       	brge	.+10     	; 0x1c86 <KPD_u8PressedKey+0xb4>
		__ticks = 1;
    1c7c:	81 e0       	ldi	r24, 0x01	; 1
    1c7e:	90 e0       	ldi	r25, 0x00	; 0
    1c80:	9c 8b       	std	Y+20, r25	; 0x14
    1c82:	8b 8b       	std	Y+19, r24	; 0x13
    1c84:	3f c0       	rjmp	.+126    	; 0x1d04 <KPD_u8PressedKey+0x132>
	else if (__tmp > 65535)
    1c86:	6d 89       	ldd	r22, Y+21	; 0x15
    1c88:	7e 89       	ldd	r23, Y+22	; 0x16
    1c8a:	8f 89       	ldd	r24, Y+23	; 0x17
    1c8c:	98 8d       	ldd	r25, Y+24	; 0x18
    1c8e:	20 e0       	ldi	r18, 0x00	; 0
    1c90:	3f ef       	ldi	r19, 0xFF	; 255
    1c92:	4f e7       	ldi	r20, 0x7F	; 127
    1c94:	57 e4       	ldi	r21, 0x47	; 71
    1c96:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    1c9a:	18 16       	cp	r1, r24
    1c9c:	4c f5       	brge	.+82     	; 0x1cf0 <KPD_u8PressedKey+0x11e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c9e:	69 8d       	ldd	r22, Y+25	; 0x19
    1ca0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1ca2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1ca4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1ca6:	20 e0       	ldi	r18, 0x00	; 0
    1ca8:	30 e0       	ldi	r19, 0x00	; 0
    1caa:	40 e2       	ldi	r20, 0x20	; 32
    1cac:	51 e4       	ldi	r21, 0x41	; 65
    1cae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cb2:	dc 01       	movw	r26, r24
    1cb4:	cb 01       	movw	r24, r22
    1cb6:	bc 01       	movw	r22, r24
    1cb8:	cd 01       	movw	r24, r26
    1cba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cbe:	dc 01       	movw	r26, r24
    1cc0:	cb 01       	movw	r24, r22
    1cc2:	9c 8b       	std	Y+20, r25	; 0x14
    1cc4:	8b 8b       	std	Y+19, r24	; 0x13
    1cc6:	0f c0       	rjmp	.+30     	; 0x1ce6 <KPD_u8PressedKey+0x114>
    1cc8:	88 ec       	ldi	r24, 0xC8	; 200
    1cca:	90 e0       	ldi	r25, 0x00	; 0
    1ccc:	9a 8b       	std	Y+18, r25	; 0x12
    1cce:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1cd0:	89 89       	ldd	r24, Y+17	; 0x11
    1cd2:	9a 89       	ldd	r25, Y+18	; 0x12
    1cd4:	01 97       	sbiw	r24, 0x01	; 1
    1cd6:	f1 f7       	brne	.-4      	; 0x1cd4 <KPD_u8PressedKey+0x102>
    1cd8:	9a 8b       	std	Y+18, r25	; 0x12
    1cda:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cdc:	8b 89       	ldd	r24, Y+19	; 0x13
    1cde:	9c 89       	ldd	r25, Y+20	; 0x14
    1ce0:	01 97       	sbiw	r24, 0x01	; 1
    1ce2:	9c 8b       	std	Y+20, r25	; 0x14
    1ce4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ce6:	8b 89       	ldd	r24, Y+19	; 0x13
    1ce8:	9c 89       	ldd	r25, Y+20	; 0x14
    1cea:	00 97       	sbiw	r24, 0x00	; 0
    1cec:	69 f7       	brne	.-38     	; 0x1cc8 <KPD_u8PressedKey+0xf6>
    1cee:	21 c0       	rjmp	.+66     	; 0x1d32 <KPD_u8PressedKey+0x160>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cf0:	6d 89       	ldd	r22, Y+21	; 0x15
    1cf2:	7e 89       	ldd	r23, Y+22	; 0x16
    1cf4:	8f 89       	ldd	r24, Y+23	; 0x17
    1cf6:	98 8d       	ldd	r25, Y+24	; 0x18
    1cf8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cfc:	dc 01       	movw	r26, r24
    1cfe:	cb 01       	movw	r24, r22
    1d00:	9c 8b       	std	Y+20, r25	; 0x14
    1d02:	8b 8b       	std	Y+19, r24	; 0x13
    1d04:	8b 89       	ldd	r24, Y+19	; 0x13
    1d06:	9c 89       	ldd	r25, Y+20	; 0x14
    1d08:	98 8b       	std	Y+16, r25	; 0x10
    1d0a:	8f 87       	std	Y+15, r24	; 0x0f
    1d0c:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d0e:	98 89       	ldd	r25, Y+16	; 0x10
    1d10:	01 97       	sbiw	r24, 0x01	; 1
    1d12:	f1 f7       	brne	.-4      	; 0x1d10 <KPD_u8PressedKey+0x13e>
    1d14:	98 8b       	std	Y+16, r25	; 0x10
    1d16:	8f 87       	std	Y+15, r24	; 0x0f
    1d18:	0c c0       	rjmp	.+24     	; 0x1d32 <KPD_u8PressedKey+0x160>
				{
					_delay_ms(20);
					while(Pressed==DIO_LOW)
						Pressed=DIO_u8GetPinValue(KPD_PORT_0,KPD_u8ColPins[count_C]);
    1d1a:	88 a1       	ldd	r24, Y+32	; 0x20
    1d1c:	88 2f       	mov	r24, r24
    1d1e:	90 e0       	ldi	r25, 0x00	; 0
    1d20:	fc 01       	movw	r30, r24
    1d22:	e6 56       	subi	r30, 0x66	; 102
    1d24:	fe 4f       	sbci	r31, 0xFE	; 254
    1d26:	90 81       	ld	r25, Z
    1d28:	82 e0       	ldi	r24, 0x02	; 2
    1d2a:	69 2f       	mov	r22, r25
    1d2c:	0e 94 d6 0c 	call	0x19ac	; 0x19ac <DIO_u8GetPinValue>
    1d30:	8f 8f       	std	Y+31, r24	; 0x1f
			{
				Pressed=DIO_u8GetPinValue(KPD_PORT_0,KPD_u8ColPins[count_C]);
				if(Pressed==DIO_LOW)
				{
					_delay_ms(20);
					while(Pressed==DIO_LOW)
    1d32:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1d34:	88 23       	and	r24, r24
    1d36:	89 f3       	breq	.-30     	; 0x1d1a <KPD_u8PressedKey+0x148>
						Pressed=DIO_u8GetPinValue(KPD_PORT_0,KPD_u8ColPins[count_C]);

					Returned = KPD_u8Keys[count_R][count_C];
    1d38:	89 a1       	ldd	r24, Y+33	; 0x21
    1d3a:	28 2f       	mov	r18, r24
    1d3c:	30 e0       	ldi	r19, 0x00	; 0
    1d3e:	88 a1       	ldd	r24, Y+32	; 0x20
    1d40:	48 2f       	mov	r20, r24
    1d42:	50 e0       	ldi	r21, 0x00	; 0
    1d44:	c9 01       	movw	r24, r18
    1d46:	88 0f       	add	r24, r24
    1d48:	99 1f       	adc	r25, r25
    1d4a:	82 0f       	add	r24, r18
    1d4c:	93 1f       	adc	r25, r19
    1d4e:	88 0f       	add	r24, r24
    1d50:	99 1f       	adc	r25, r25
    1d52:	84 0f       	add	r24, r20
    1d54:	95 1f       	adc	r25, r21
    1d56:	fc 01       	movw	r30, r24
    1d58:	e2 58       	subi	r30, 0x82	; 130
    1d5a:	fe 4f       	sbci	r31, 0xFE	; 254
    1d5c:	80 81       	ld	r24, Z
    1d5e:	8e 8f       	std	Y+30, r24	; 0x1e
					Flag=1;
    1d60:	81 e0       	ldi	r24, 0x01	; 1
    1d62:	8d 8f       	std	Y+29, r24	; 0x1d
    1d64:	b0 c0       	rjmp	.+352    	; 0x1ec6 <KPD_u8PressedKey+0x2f4>
					break;
				}
			}
			else
			{
				Pressed=DIO_u8GetPinValue(KPD_PORT_1,KPD_u8ColPins[count_C]);
    1d66:	88 a1       	ldd	r24, Y+32	; 0x20
    1d68:	88 2f       	mov	r24, r24
    1d6a:	90 e0       	ldi	r25, 0x00	; 0
    1d6c:	fc 01       	movw	r30, r24
    1d6e:	e6 56       	subi	r30, 0x66	; 102
    1d70:	fe 4f       	sbci	r31, 0xFE	; 254
    1d72:	90 81       	ld	r25, Z
    1d74:	83 e0       	ldi	r24, 0x03	; 3
    1d76:	69 2f       	mov	r22, r25
    1d78:	0e 94 d6 0c 	call	0x19ac	; 0x19ac <DIO_u8GetPinValue>
    1d7c:	8f 8f       	std	Y+31, r24	; 0x1f
				if(Pressed==DIO_LOW)
    1d7e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1d80:	88 23       	and	r24, r24
    1d82:	09 f0       	breq	.+2      	; 0x1d86 <KPD_u8PressedKey+0x1b4>
    1d84:	99 c0       	rjmp	.+306    	; 0x1eb8 <KPD_u8PressedKey+0x2e6>
    1d86:	80 e0       	ldi	r24, 0x00	; 0
    1d88:	90 e0       	ldi	r25, 0x00	; 0
    1d8a:	a0 ea       	ldi	r26, 0xA0	; 160
    1d8c:	b1 e4       	ldi	r27, 0x41	; 65
    1d8e:	8b 87       	std	Y+11, r24	; 0x0b
    1d90:	9c 87       	std	Y+12, r25	; 0x0c
    1d92:	ad 87       	std	Y+13, r26	; 0x0d
    1d94:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d96:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d98:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d9a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d9c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d9e:	20 e0       	ldi	r18, 0x00	; 0
    1da0:	30 e0       	ldi	r19, 0x00	; 0
    1da2:	4a ef       	ldi	r20, 0xFA	; 250
    1da4:	54 e4       	ldi	r21, 0x44	; 68
    1da6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1daa:	dc 01       	movw	r26, r24
    1dac:	cb 01       	movw	r24, r22
    1dae:	8f 83       	std	Y+7, r24	; 0x07
    1db0:	98 87       	std	Y+8, r25	; 0x08
    1db2:	a9 87       	std	Y+9, r26	; 0x09
    1db4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1db6:	6f 81       	ldd	r22, Y+7	; 0x07
    1db8:	78 85       	ldd	r23, Y+8	; 0x08
    1dba:	89 85       	ldd	r24, Y+9	; 0x09
    1dbc:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dbe:	20 e0       	ldi	r18, 0x00	; 0
    1dc0:	30 e0       	ldi	r19, 0x00	; 0
    1dc2:	40 e8       	ldi	r20, 0x80	; 128
    1dc4:	5f e3       	ldi	r21, 0x3F	; 63
    1dc6:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    1dca:	88 23       	and	r24, r24
    1dcc:	2c f4       	brge	.+10     	; 0x1dd8 <KPD_u8PressedKey+0x206>
		__ticks = 1;
    1dce:	81 e0       	ldi	r24, 0x01	; 1
    1dd0:	90 e0       	ldi	r25, 0x00	; 0
    1dd2:	9e 83       	std	Y+6, r25	; 0x06
    1dd4:	8d 83       	std	Y+5, r24	; 0x05
    1dd6:	3f c0       	rjmp	.+126    	; 0x1e56 <KPD_u8PressedKey+0x284>
	else if (__tmp > 65535)
    1dd8:	6f 81       	ldd	r22, Y+7	; 0x07
    1dda:	78 85       	ldd	r23, Y+8	; 0x08
    1ddc:	89 85       	ldd	r24, Y+9	; 0x09
    1dde:	9a 85       	ldd	r25, Y+10	; 0x0a
    1de0:	20 e0       	ldi	r18, 0x00	; 0
    1de2:	3f ef       	ldi	r19, 0xFF	; 255
    1de4:	4f e7       	ldi	r20, 0x7F	; 127
    1de6:	57 e4       	ldi	r21, 0x47	; 71
    1de8:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    1dec:	18 16       	cp	r1, r24
    1dee:	4c f5       	brge	.+82     	; 0x1e42 <KPD_u8PressedKey+0x270>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1df0:	6b 85       	ldd	r22, Y+11	; 0x0b
    1df2:	7c 85       	ldd	r23, Y+12	; 0x0c
    1df4:	8d 85       	ldd	r24, Y+13	; 0x0d
    1df6:	9e 85       	ldd	r25, Y+14	; 0x0e
    1df8:	20 e0       	ldi	r18, 0x00	; 0
    1dfa:	30 e0       	ldi	r19, 0x00	; 0
    1dfc:	40 e2       	ldi	r20, 0x20	; 32
    1dfe:	51 e4       	ldi	r21, 0x41	; 65
    1e00:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e04:	dc 01       	movw	r26, r24
    1e06:	cb 01       	movw	r24, r22
    1e08:	bc 01       	movw	r22, r24
    1e0a:	cd 01       	movw	r24, r26
    1e0c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e10:	dc 01       	movw	r26, r24
    1e12:	cb 01       	movw	r24, r22
    1e14:	9e 83       	std	Y+6, r25	; 0x06
    1e16:	8d 83       	std	Y+5, r24	; 0x05
    1e18:	0f c0       	rjmp	.+30     	; 0x1e38 <KPD_u8PressedKey+0x266>
    1e1a:	88 ec       	ldi	r24, 0xC8	; 200
    1e1c:	90 e0       	ldi	r25, 0x00	; 0
    1e1e:	9c 83       	std	Y+4, r25	; 0x04
    1e20:	8b 83       	std	Y+3, r24	; 0x03
    1e22:	8b 81       	ldd	r24, Y+3	; 0x03
    1e24:	9c 81       	ldd	r25, Y+4	; 0x04
    1e26:	01 97       	sbiw	r24, 0x01	; 1
    1e28:	f1 f7       	brne	.-4      	; 0x1e26 <KPD_u8PressedKey+0x254>
    1e2a:	9c 83       	std	Y+4, r25	; 0x04
    1e2c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e2e:	8d 81       	ldd	r24, Y+5	; 0x05
    1e30:	9e 81       	ldd	r25, Y+6	; 0x06
    1e32:	01 97       	sbiw	r24, 0x01	; 1
    1e34:	9e 83       	std	Y+6, r25	; 0x06
    1e36:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e38:	8d 81       	ldd	r24, Y+5	; 0x05
    1e3a:	9e 81       	ldd	r25, Y+6	; 0x06
    1e3c:	00 97       	sbiw	r24, 0x00	; 0
    1e3e:	69 f7       	brne	.-38     	; 0x1e1a <KPD_u8PressedKey+0x248>
    1e40:	21 c0       	rjmp	.+66     	; 0x1e84 <KPD_u8PressedKey+0x2b2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e42:	6f 81       	ldd	r22, Y+7	; 0x07
    1e44:	78 85       	ldd	r23, Y+8	; 0x08
    1e46:	89 85       	ldd	r24, Y+9	; 0x09
    1e48:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e4a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e4e:	dc 01       	movw	r26, r24
    1e50:	cb 01       	movw	r24, r22
    1e52:	9e 83       	std	Y+6, r25	; 0x06
    1e54:	8d 83       	std	Y+5, r24	; 0x05
    1e56:	8d 81       	ldd	r24, Y+5	; 0x05
    1e58:	9e 81       	ldd	r25, Y+6	; 0x06
    1e5a:	9a 83       	std	Y+2, r25	; 0x02
    1e5c:	89 83       	std	Y+1, r24	; 0x01
    1e5e:	89 81       	ldd	r24, Y+1	; 0x01
    1e60:	9a 81       	ldd	r25, Y+2	; 0x02
    1e62:	01 97       	sbiw	r24, 0x01	; 1
    1e64:	f1 f7       	brne	.-4      	; 0x1e62 <KPD_u8PressedKey+0x290>
    1e66:	9a 83       	std	Y+2, r25	; 0x02
    1e68:	89 83       	std	Y+1, r24	; 0x01
    1e6a:	0c c0       	rjmp	.+24     	; 0x1e84 <KPD_u8PressedKey+0x2b2>
				{
					_delay_ms(20);
					while(Pressed==DIO_LOW)
						Pressed=DIO_u8GetPinValue(KPD_PORT_1,KPD_u8ColPins[count_C]);
    1e6c:	88 a1       	ldd	r24, Y+32	; 0x20
    1e6e:	88 2f       	mov	r24, r24
    1e70:	90 e0       	ldi	r25, 0x00	; 0
    1e72:	fc 01       	movw	r30, r24
    1e74:	e6 56       	subi	r30, 0x66	; 102
    1e76:	fe 4f       	sbci	r31, 0xFE	; 254
    1e78:	90 81       	ld	r25, Z
    1e7a:	83 e0       	ldi	r24, 0x03	; 3
    1e7c:	69 2f       	mov	r22, r25
    1e7e:	0e 94 d6 0c 	call	0x19ac	; 0x19ac <DIO_u8GetPinValue>
    1e82:	8f 8f       	std	Y+31, r24	; 0x1f
			{
				Pressed=DIO_u8GetPinValue(KPD_PORT_1,KPD_u8ColPins[count_C]);
				if(Pressed==DIO_LOW)
				{
					_delay_ms(20);
					while(Pressed==DIO_LOW)
    1e84:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1e86:	88 23       	and	r24, r24
    1e88:	89 f3       	breq	.-30     	; 0x1e6c <KPD_u8PressedKey+0x29a>
						Pressed=DIO_u8GetPinValue(KPD_PORT_1,KPD_u8ColPins[count_C]);

					Returned = KPD_u8Keys[count_R][count_C];
    1e8a:	89 a1       	ldd	r24, Y+33	; 0x21
    1e8c:	28 2f       	mov	r18, r24
    1e8e:	30 e0       	ldi	r19, 0x00	; 0
    1e90:	88 a1       	ldd	r24, Y+32	; 0x20
    1e92:	48 2f       	mov	r20, r24
    1e94:	50 e0       	ldi	r21, 0x00	; 0
    1e96:	c9 01       	movw	r24, r18
    1e98:	88 0f       	add	r24, r24
    1e9a:	99 1f       	adc	r25, r25
    1e9c:	82 0f       	add	r24, r18
    1e9e:	93 1f       	adc	r25, r19
    1ea0:	88 0f       	add	r24, r24
    1ea2:	99 1f       	adc	r25, r25
    1ea4:	84 0f       	add	r24, r20
    1ea6:	95 1f       	adc	r25, r21
    1ea8:	fc 01       	movw	r30, r24
    1eaa:	e2 58       	subi	r30, 0x82	; 130
    1eac:	fe 4f       	sbci	r31, 0xFE	; 254
    1eae:	80 81       	ld	r24, Z
    1eb0:	8e 8f       	std	Y+30, r24	; 0x1e
					Flag=1;
    1eb2:	81 e0       	ldi	r24, 0x01	; 1
    1eb4:	8d 8f       	std	Y+29, r24	; 0x1d
    1eb6:	07 c0       	rjmp	.+14     	; 0x1ec6 <KPD_u8PressedKey+0x2f4>
{
	u8 count_R, count_C,Pressed,Returned=KPD_CHEK,Flag=0;
	for(count_R=0;count_R<4;count_R++)
	{
		DIO_VidSetPinValue(KPD_PORT_0,KPD_u8RowPins[count_R],DIO_LOW);
		for(count_C=0;count_C<6;count_C++)
    1eb8:	88 a1       	ldd	r24, Y+32	; 0x20
    1eba:	8f 5f       	subi	r24, 0xFF	; 255
    1ebc:	88 a3       	std	Y+32, r24	; 0x20
    1ebe:	88 a1       	ldd	r24, Y+32	; 0x20
    1ec0:	86 30       	cpi	r24, 0x06	; 6
    1ec2:	08 f4       	brcc	.+2      	; 0x1ec6 <KPD_u8PressedKey+0x2f4>
    1ec4:	a3 ce       	rjmp	.-698    	; 0x1c0c <KPD_u8PressedKey+0x3a>
					break;
				}
			}

		}
		DIO_VidSetPinValue(KPD_PORT_0,KPD_u8RowPins[count_R],DIO_HIGH);
    1ec6:	89 a1       	ldd	r24, Y+33	; 0x21
    1ec8:	88 2f       	mov	r24, r24
    1eca:	90 e0       	ldi	r25, 0x00	; 0
    1ecc:	fc 01       	movw	r30, r24
    1ece:	ea 56       	subi	r30, 0x6A	; 106
    1ed0:	fe 4f       	sbci	r31, 0xFE	; 254
    1ed2:	90 81       	ld	r25, Z
    1ed4:	82 e0       	ldi	r24, 0x02	; 2
    1ed6:	69 2f       	mov	r22, r25
    1ed8:	41 e0       	ldi	r20, 0x01	; 1
    1eda:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <DIO_VidSetPinValue>
		if(Flag==1)
    1ede:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1ee0:	81 30       	cpi	r24, 0x01	; 1
    1ee2:	39 f0       	breq	.+14     	; 0x1ef2 <KPD_u8PressedKey+0x320>
}

u8 KPD_u8PressedKey()
{
	u8 count_R, count_C,Pressed,Returned=KPD_CHEK,Flag=0;
	for(count_R=0;count_R<4;count_R++)
    1ee4:	89 a1       	ldd	r24, Y+33	; 0x21
    1ee6:	8f 5f       	subi	r24, 0xFF	; 255
    1ee8:	89 a3       	std	Y+33, r24	; 0x21
    1eea:	89 a1       	ldd	r24, Y+33	; 0x21
    1eec:	84 30       	cpi	r24, 0x04	; 4
    1eee:	08 f4       	brcc	.+2      	; 0x1ef2 <KPD_u8PressedKey+0x320>
    1ef0:	7f ce       	rjmp	.-770    	; 0x1bf0 <KPD_u8PressedKey+0x1e>
		}
		DIO_VidSetPinValue(KPD_PORT_0,KPD_u8RowPins[count_R],DIO_HIGH);
		if(Flag==1)
			break;
	}
	return Returned;
    1ef2:	8e 8d       	ldd	r24, Y+30	; 0x1e
}
    1ef4:	a1 96       	adiw	r28, 0x21	; 33
    1ef6:	0f b6       	in	r0, 0x3f	; 63
    1ef8:	f8 94       	cli
    1efa:	de bf       	out	0x3e, r29	; 62
    1efc:	0f be       	out	0x3f, r0	; 63
    1efe:	cd bf       	out	0x3d, r28	; 61
    1f00:	cf 91       	pop	r28
    1f02:	df 91       	pop	r29
    1f04:	08 95       	ret

00001f06 <LCD_VidSendCMD>:
#include "DIO.h"
#include "LCD.h"


void LCD_VidSendCMD(u8 Copy_U8CMD)
{
    1f06:	df 93       	push	r29
    1f08:	cf 93       	push	r28
    1f0a:	cd b7       	in	r28, 0x3d	; 61
    1f0c:	de b7       	in	r29, 0x3e	; 62
    1f0e:	2f 97       	sbiw	r28, 0x0f	; 15
    1f10:	0f b6       	in	r0, 0x3f	; 63
    1f12:	f8 94       	cli
    1f14:	de bf       	out	0x3e, r29	; 62
    1f16:	0f be       	out	0x3f, r0	; 63
    1f18:	cd bf       	out	0x3d, r28	; 61
    1f1a:	8f 87       	std	Y+15, r24	; 0x0f

	DIO_VidSetPinValue(LCD_CMD_PORT,RS,DIO_LOW);
    1f1c:	81 e0       	ldi	r24, 0x01	; 1
    1f1e:	65 e0       	ldi	r22, 0x05	; 5
    1f20:	40 e0       	ldi	r20, 0x00	; 0
    1f22:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <DIO_VidSetPinValue>
	DIO_VidSetPinValue(LCD_CMD_PORT,RW,DIO_LOW);
    1f26:	81 e0       	ldi	r24, 0x01	; 1
    1f28:	66 e0       	ldi	r22, 0x06	; 6
    1f2a:	40 e0       	ldi	r20, 0x00	; 0
    1f2c:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <DIO_VidSetPinValue>
	DIO_VidSetPortValue(LCD_DATA_PORT,Copy_U8CMD);
    1f30:	80 e0       	ldi	r24, 0x00	; 0
    1f32:	6f 85       	ldd	r22, Y+15	; 0x0f
    1f34:	0e 94 95 0c 	call	0x192a	; 0x192a <DIO_VidSetPortValue>

	DIO_VidSetPinValue(LCD_CMD_PORT,EN,DIO_HIGH);
    1f38:	81 e0       	ldi	r24, 0x01	; 1
    1f3a:	67 e0       	ldi	r22, 0x07	; 7
    1f3c:	41 e0       	ldi	r20, 0x01	; 1
    1f3e:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <DIO_VidSetPinValue>
    1f42:	80 e0       	ldi	r24, 0x00	; 0
    1f44:	90 e0       	ldi	r25, 0x00	; 0
    1f46:	a0 e8       	ldi	r26, 0x80	; 128
    1f48:	bf e3       	ldi	r27, 0x3F	; 63
    1f4a:	8b 87       	std	Y+11, r24	; 0x0b
    1f4c:	9c 87       	std	Y+12, r25	; 0x0c
    1f4e:	ad 87       	std	Y+13, r26	; 0x0d
    1f50:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f52:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f54:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f56:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f58:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f5a:	20 e0       	ldi	r18, 0x00	; 0
    1f5c:	30 e0       	ldi	r19, 0x00	; 0
    1f5e:	4a ef       	ldi	r20, 0xFA	; 250
    1f60:	54 e4       	ldi	r21, 0x44	; 68
    1f62:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f66:	dc 01       	movw	r26, r24
    1f68:	cb 01       	movw	r24, r22
    1f6a:	8f 83       	std	Y+7, r24	; 0x07
    1f6c:	98 87       	std	Y+8, r25	; 0x08
    1f6e:	a9 87       	std	Y+9, r26	; 0x09
    1f70:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1f72:	6f 81       	ldd	r22, Y+7	; 0x07
    1f74:	78 85       	ldd	r23, Y+8	; 0x08
    1f76:	89 85       	ldd	r24, Y+9	; 0x09
    1f78:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f7a:	20 e0       	ldi	r18, 0x00	; 0
    1f7c:	30 e0       	ldi	r19, 0x00	; 0
    1f7e:	40 e8       	ldi	r20, 0x80	; 128
    1f80:	5f e3       	ldi	r21, 0x3F	; 63
    1f82:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    1f86:	88 23       	and	r24, r24
    1f88:	2c f4       	brge	.+10     	; 0x1f94 <LCD_VidSendCMD+0x8e>
		__ticks = 1;
    1f8a:	81 e0       	ldi	r24, 0x01	; 1
    1f8c:	90 e0       	ldi	r25, 0x00	; 0
    1f8e:	9e 83       	std	Y+6, r25	; 0x06
    1f90:	8d 83       	std	Y+5, r24	; 0x05
    1f92:	3f c0       	rjmp	.+126    	; 0x2012 <LCD_VidSendCMD+0x10c>
	else if (__tmp > 65535)
    1f94:	6f 81       	ldd	r22, Y+7	; 0x07
    1f96:	78 85       	ldd	r23, Y+8	; 0x08
    1f98:	89 85       	ldd	r24, Y+9	; 0x09
    1f9a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f9c:	20 e0       	ldi	r18, 0x00	; 0
    1f9e:	3f ef       	ldi	r19, 0xFF	; 255
    1fa0:	4f e7       	ldi	r20, 0x7F	; 127
    1fa2:	57 e4       	ldi	r21, 0x47	; 71
    1fa4:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    1fa8:	18 16       	cp	r1, r24
    1faa:	4c f5       	brge	.+82     	; 0x1ffe <LCD_VidSendCMD+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1fac:	6b 85       	ldd	r22, Y+11	; 0x0b
    1fae:	7c 85       	ldd	r23, Y+12	; 0x0c
    1fb0:	8d 85       	ldd	r24, Y+13	; 0x0d
    1fb2:	9e 85       	ldd	r25, Y+14	; 0x0e
    1fb4:	20 e0       	ldi	r18, 0x00	; 0
    1fb6:	30 e0       	ldi	r19, 0x00	; 0
    1fb8:	40 e2       	ldi	r20, 0x20	; 32
    1fba:	51 e4       	ldi	r21, 0x41	; 65
    1fbc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fc0:	dc 01       	movw	r26, r24
    1fc2:	cb 01       	movw	r24, r22
    1fc4:	bc 01       	movw	r22, r24
    1fc6:	cd 01       	movw	r24, r26
    1fc8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fcc:	dc 01       	movw	r26, r24
    1fce:	cb 01       	movw	r24, r22
    1fd0:	9e 83       	std	Y+6, r25	; 0x06
    1fd2:	8d 83       	std	Y+5, r24	; 0x05
    1fd4:	0f c0       	rjmp	.+30     	; 0x1ff4 <LCD_VidSendCMD+0xee>
    1fd6:	88 ec       	ldi	r24, 0xC8	; 200
    1fd8:	90 e0       	ldi	r25, 0x00	; 0
    1fda:	9c 83       	std	Y+4, r25	; 0x04
    1fdc:	8b 83       	std	Y+3, r24	; 0x03
    1fde:	8b 81       	ldd	r24, Y+3	; 0x03
    1fe0:	9c 81       	ldd	r25, Y+4	; 0x04
    1fe2:	01 97       	sbiw	r24, 0x01	; 1
    1fe4:	f1 f7       	brne	.-4      	; 0x1fe2 <LCD_VidSendCMD+0xdc>
    1fe6:	9c 83       	std	Y+4, r25	; 0x04
    1fe8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1fea:	8d 81       	ldd	r24, Y+5	; 0x05
    1fec:	9e 81       	ldd	r25, Y+6	; 0x06
    1fee:	01 97       	sbiw	r24, 0x01	; 1
    1ff0:	9e 83       	std	Y+6, r25	; 0x06
    1ff2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ff4:	8d 81       	ldd	r24, Y+5	; 0x05
    1ff6:	9e 81       	ldd	r25, Y+6	; 0x06
    1ff8:	00 97       	sbiw	r24, 0x00	; 0
    1ffa:	69 f7       	brne	.-38     	; 0x1fd6 <LCD_VidSendCMD+0xd0>
    1ffc:	14 c0       	rjmp	.+40     	; 0x2026 <LCD_VidSendCMD+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ffe:	6f 81       	ldd	r22, Y+7	; 0x07
    2000:	78 85       	ldd	r23, Y+8	; 0x08
    2002:	89 85       	ldd	r24, Y+9	; 0x09
    2004:	9a 85       	ldd	r25, Y+10	; 0x0a
    2006:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    200a:	dc 01       	movw	r26, r24
    200c:	cb 01       	movw	r24, r22
    200e:	9e 83       	std	Y+6, r25	; 0x06
    2010:	8d 83       	std	Y+5, r24	; 0x05
    2012:	8d 81       	ldd	r24, Y+5	; 0x05
    2014:	9e 81       	ldd	r25, Y+6	; 0x06
    2016:	9a 83       	std	Y+2, r25	; 0x02
    2018:	89 83       	std	Y+1, r24	; 0x01
    201a:	89 81       	ldd	r24, Y+1	; 0x01
    201c:	9a 81       	ldd	r25, Y+2	; 0x02
    201e:	01 97       	sbiw	r24, 0x01	; 1
    2020:	f1 f7       	brne	.-4      	; 0x201e <LCD_VidSendCMD+0x118>
    2022:	9a 83       	std	Y+2, r25	; 0x02
    2024:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	DIO_VidSetPinValue(LCD_CMD_PORT,EN,DIO_LOW);
    2026:	81 e0       	ldi	r24, 0x01	; 1
    2028:	67 e0       	ldi	r22, 0x07	; 7
    202a:	40 e0       	ldi	r20, 0x00	; 0
    202c:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <DIO_VidSetPinValue>

}
    2030:	2f 96       	adiw	r28, 0x0f	; 15
    2032:	0f b6       	in	r0, 0x3f	; 63
    2034:	f8 94       	cli
    2036:	de bf       	out	0x3e, r29	; 62
    2038:	0f be       	out	0x3f, r0	; 63
    203a:	cd bf       	out	0x3d, r28	; 61
    203c:	cf 91       	pop	r28
    203e:	df 91       	pop	r29
    2040:	08 95       	ret

00002042 <LCD_VidSendNumber>:

void LCD_VidSendNumber(u32 Copy_U8Number)
{
    2042:	df 93       	push	r29
    2044:	cf 93       	push	r28
    2046:	cd b7       	in	r28, 0x3d	; 61
    2048:	de b7       	in	r29, 0x3e	; 62
    204a:	29 97       	sbiw	r28, 0x09	; 9
    204c:	0f b6       	in	r0, 0x3f	; 63
    204e:	f8 94       	cli
    2050:	de bf       	out	0x3e, r29	; 62
    2052:	0f be       	out	0x3f, r0	; 63
    2054:	cd bf       	out	0x3d, r28	; 61
    2056:	99 87       	std	Y+9, r25	; 0x09
    2058:	88 87       	std	Y+8, r24	; 0x08
	u32 local_remainder=0;
    205a:	1f 82       	std	Y+7, r1	; 0x07
    205c:	1e 82       	std	Y+6, r1	; 0x06
	u32 local_reversed=0;
    205e:	1d 82       	std	Y+5, r1	; 0x05
    2060:	1c 82       	std	Y+4, r1	; 0x04
	u32 tmp=Copy_U8Number;
    2062:	88 85       	ldd	r24, Y+8	; 0x08
    2064:	99 85       	ldd	r25, Y+9	; 0x09
    2066:	9b 83       	std	Y+3, r25	; 0x03
    2068:	8a 83       	std	Y+2, r24	; 0x02
	u8 count=0;
    206a:	19 82       	std	Y+1, r1	; 0x01
    206c:	28 c0       	rjmp	.+80     	; 0x20be <LCD_VidSendNumber+0x7c>

	while(Copy_U8Number!=0)
	{
		local_remainder=Copy_U8Number%10;
    206e:	88 85       	ldd	r24, Y+8	; 0x08
    2070:	99 85       	ldd	r25, Y+9	; 0x09
    2072:	2a e0       	ldi	r18, 0x0A	; 10
    2074:	30 e0       	ldi	r19, 0x00	; 0
    2076:	b9 01       	movw	r22, r18
    2078:	0e 94 26 18 	call	0x304c	; 0x304c <__udivmodhi4>
    207c:	9f 83       	std	Y+7, r25	; 0x07
    207e:	8e 83       	std	Y+6, r24	; 0x06
		local_reversed=(local_reversed*10)+local_remainder;
    2080:	8c 81       	ldd	r24, Y+4	; 0x04
    2082:	9d 81       	ldd	r25, Y+5	; 0x05
    2084:	9c 01       	movw	r18, r24
    2086:	22 0f       	add	r18, r18
    2088:	33 1f       	adc	r19, r19
    208a:	c9 01       	movw	r24, r18
    208c:	88 0f       	add	r24, r24
    208e:	99 1f       	adc	r25, r25
    2090:	88 0f       	add	r24, r24
    2092:	99 1f       	adc	r25, r25
    2094:	28 0f       	add	r18, r24
    2096:	39 1f       	adc	r19, r25
    2098:	8e 81       	ldd	r24, Y+6	; 0x06
    209a:	9f 81       	ldd	r25, Y+7	; 0x07
    209c:	82 0f       	add	r24, r18
    209e:	93 1f       	adc	r25, r19
    20a0:	9d 83       	std	Y+5, r25	; 0x05
    20a2:	8c 83       	std	Y+4, r24	; 0x04
		Copy_U8Number/=10;
    20a4:	88 85       	ldd	r24, Y+8	; 0x08
    20a6:	99 85       	ldd	r25, Y+9	; 0x09
    20a8:	2a e0       	ldi	r18, 0x0A	; 10
    20aa:	30 e0       	ldi	r19, 0x00	; 0
    20ac:	b9 01       	movw	r22, r18
    20ae:	0e 94 26 18 	call	0x304c	; 0x304c <__udivmodhi4>
    20b2:	cb 01       	movw	r24, r22
    20b4:	99 87       	std	Y+9, r25	; 0x09
    20b6:	88 87       	std	Y+8, r24	; 0x08
		count++;
    20b8:	89 81       	ldd	r24, Y+1	; 0x01
    20ba:	8f 5f       	subi	r24, 0xFF	; 255
    20bc:	89 83       	std	Y+1, r24	; 0x01
	u32 local_remainder=0;
	u32 local_reversed=0;
	u32 tmp=Copy_U8Number;
	u8 count=0;

	while(Copy_U8Number!=0)
    20be:	88 85       	ldd	r24, Y+8	; 0x08
    20c0:	99 85       	ldd	r25, Y+9	; 0x09
    20c2:	00 97       	sbiw	r24, 0x00	; 0
    20c4:	a1 f6       	brne	.-88     	; 0x206e <LCD_VidSendNumber+0x2c>
    20c6:	17 c0       	rjmp	.+46     	; 0x20f6 <LCD_VidSendNumber+0xb4>
		count++;
	}

	while(count!=0)
	{
		LCD_VidSendChar((local_reversed%10)+'0');
    20c8:	8c 81       	ldd	r24, Y+4	; 0x04
    20ca:	9d 81       	ldd	r25, Y+5	; 0x05
    20cc:	2a e0       	ldi	r18, 0x0A	; 10
    20ce:	30 e0       	ldi	r19, 0x00	; 0
    20d0:	b9 01       	movw	r22, r18
    20d2:	0e 94 26 18 	call	0x304c	; 0x304c <__udivmodhi4>
    20d6:	80 5d       	subi	r24, 0xD0	; 208
    20d8:	0e 94 a3 11 	call	0x2346	; 0x2346 <LCD_VidSendChar>
		local_reversed/=10;
    20dc:	8c 81       	ldd	r24, Y+4	; 0x04
    20de:	9d 81       	ldd	r25, Y+5	; 0x05
    20e0:	2a e0       	ldi	r18, 0x0A	; 10
    20e2:	30 e0       	ldi	r19, 0x00	; 0
    20e4:	b9 01       	movw	r22, r18
    20e6:	0e 94 26 18 	call	0x304c	; 0x304c <__udivmodhi4>
    20ea:	cb 01       	movw	r24, r22
    20ec:	9d 83       	std	Y+5, r25	; 0x05
    20ee:	8c 83       	std	Y+4, r24	; 0x04
		count--;
    20f0:	89 81       	ldd	r24, Y+1	; 0x01
    20f2:	81 50       	subi	r24, 0x01	; 1
    20f4:	89 83       	std	Y+1, r24	; 0x01
		local_reversed=(local_reversed*10)+local_remainder;
		Copy_U8Number/=10;
		count++;
	}

	while(count!=0)
    20f6:	89 81       	ldd	r24, Y+1	; 0x01
    20f8:	88 23       	and	r24, r24
    20fa:	31 f7       	brne	.-52     	; 0x20c8 <LCD_VidSendNumber+0x86>
	{
		LCD_VidSendChar((local_reversed%10)+'0');
		local_reversed/=10;
		count--;
	}
	if(tmp==0)
    20fc:	8a 81       	ldd	r24, Y+2	; 0x02
    20fe:	9b 81       	ldd	r25, Y+3	; 0x03
    2100:	00 97       	sbiw	r24, 0x00	; 0
    2102:	19 f4       	brne	.+6      	; 0x210a <LCD_VidSendNumber+0xc8>
		LCD_VidSendChar('0');
    2104:	80 e3       	ldi	r24, 0x30	; 48
    2106:	0e 94 a3 11 	call	0x2346	; 0x2346 <LCD_VidSendChar>

}
    210a:	29 96       	adiw	r28, 0x09	; 9
    210c:	0f b6       	in	r0, 0x3f	; 63
    210e:	f8 94       	cli
    2110:	de bf       	out	0x3e, r29	; 62
    2112:	0f be       	out	0x3f, r0	; 63
    2114:	cd bf       	out	0x3d, r28	; 61
    2116:	cf 91       	pop	r28
    2118:	df 91       	pop	r29
    211a:	08 95       	ret

0000211c <LCD_VidSendNumberFloat>:

void LCD_VidSendNumberFloat(f32 Copy_Value)
{
    211c:	df 93       	push	r29
    211e:	cf 93       	push	r28
    2120:	cd b7       	in	r28, 0x3d	; 61
    2122:	de b7       	in	r29, 0x3e	; 62
    2124:	62 97       	sbiw	r28, 0x12	; 18
    2126:	0f b6       	in	r0, 0x3f	; 63
    2128:	f8 94       	cli
    212a:	de bf       	out	0x3e, r29	; 62
    212c:	0f be       	out	0x3f, r0	; 63
    212e:	cd bf       	out	0x3d, r28	; 61
    2130:	6f 87       	std	Y+15, r22	; 0x0f
    2132:	78 8b       	std	Y+16, r23	; 0x10
    2134:	89 8b       	std	Y+17, r24	; 0x11
    2136:	9a 8b       	std	Y+18, r25	; 0x12
	u32 local_remainder=0;
    2138:	1e 86       	std	Y+14, r1	; 0x0e
    213a:	1d 86       	std	Y+13, r1	; 0x0d
	u32 local_reversed=0;
    213c:	1c 86       	std	Y+12, r1	; 0x0c
    213e:	1b 86       	std	Y+11, r1	; 0x0b

	u32 tmp_1=Copy_Value;
    2140:	6f 85       	ldd	r22, Y+15	; 0x0f
    2142:	78 89       	ldd	r23, Y+16	; 0x10
    2144:	89 89       	ldd	r24, Y+17	; 0x11
    2146:	9a 89       	ldd	r25, Y+18	; 0x12
    2148:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    214c:	dc 01       	movw	r26, r24
    214e:	cb 01       	movw	r24, r22
    2150:	9a 87       	std	Y+10, r25	; 0x0a
    2152:	89 87       	std	Y+9, r24	; 0x09
	f32 tmp=Copy_Value-tmp_1;
    2154:	89 85       	ldd	r24, Y+9	; 0x09
    2156:	9a 85       	ldd	r25, Y+10	; 0x0a
    2158:	cc 01       	movw	r24, r24
    215a:	a0 e0       	ldi	r26, 0x00	; 0
    215c:	b0 e0       	ldi	r27, 0x00	; 0
    215e:	bc 01       	movw	r22, r24
    2160:	cd 01       	movw	r24, r26
    2162:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__floatunsisf>
    2166:	9b 01       	movw	r18, r22
    2168:	ac 01       	movw	r20, r24
    216a:	6f 85       	ldd	r22, Y+15	; 0x0f
    216c:	78 89       	ldd	r23, Y+16	; 0x10
    216e:	89 89       	ldd	r24, Y+17	; 0x11
    2170:	9a 89       	ldd	r25, Y+18	; 0x12
    2172:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
    2176:	dc 01       	movw	r26, r24
    2178:	cb 01       	movw	r24, r22
    217a:	8d 83       	std	Y+5, r24	; 0x05
    217c:	9e 83       	std	Y+6, r25	; 0x06
    217e:	af 83       	std	Y+7, r26	; 0x07
    2180:	b8 87       	std	Y+8, r27	; 0x08

	u8 count=0,count1=3;
    2182:	1c 82       	std	Y+4, r1	; 0x04
    2184:	83 e0       	ldi	r24, 0x03	; 3
    2186:	8b 83       	std	Y+3, r24	; 0x03

	u32 Copy_U8Number=tmp*1000;
    2188:	6d 81       	ldd	r22, Y+5	; 0x05
    218a:	7e 81       	ldd	r23, Y+6	; 0x06
    218c:	8f 81       	ldd	r24, Y+7	; 0x07
    218e:	98 85       	ldd	r25, Y+8	; 0x08
    2190:	20 e0       	ldi	r18, 0x00	; 0
    2192:	30 e0       	ldi	r19, 0x00	; 0
    2194:	4a e7       	ldi	r20, 0x7A	; 122
    2196:	54 e4       	ldi	r21, 0x44	; 68
    2198:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    219c:	dc 01       	movw	r26, r24
    219e:	cb 01       	movw	r24, r22
    21a0:	bc 01       	movw	r22, r24
    21a2:	cd 01       	movw	r24, r26
    21a4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21a8:	dc 01       	movw	r26, r24
    21aa:	cb 01       	movw	r24, r22
    21ac:	9a 83       	std	Y+2, r25	; 0x02
    21ae:	89 83       	std	Y+1, r24	; 0x01



	if(Copy_Value<1)
    21b0:	6f 85       	ldd	r22, Y+15	; 0x0f
    21b2:	78 89       	ldd	r23, Y+16	; 0x10
    21b4:	89 89       	ldd	r24, Y+17	; 0x11
    21b6:	9a 89       	ldd	r25, Y+18	; 0x12
    21b8:	20 e0       	ldi	r18, 0x00	; 0
    21ba:	30 e0       	ldi	r19, 0x00	; 0
    21bc:	40 e8       	ldi	r20, 0x80	; 128
    21be:	5f e3       	ldi	r21, 0x3F	; 63
    21c0:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    21c4:	88 23       	and	r24, r24
    21c6:	64 f5       	brge	.+88     	; 0x2220 <LCD_VidSendNumberFloat+0x104>
		LCD_VidSendChar('0');
    21c8:	80 e3       	ldi	r24, 0x30	; 48
    21ca:	0e 94 a3 11 	call	0x2346	; 0x2346 <LCD_VidSendChar>
    21ce:	28 c0       	rjmp	.+80     	; 0x2220 <LCD_VidSendNumberFloat+0x104>

	while(tmp_1!=0)
	{
		local_remainder=tmp_1%10;
    21d0:	89 85       	ldd	r24, Y+9	; 0x09
    21d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    21d4:	2a e0       	ldi	r18, 0x0A	; 10
    21d6:	30 e0       	ldi	r19, 0x00	; 0
    21d8:	b9 01       	movw	r22, r18
    21da:	0e 94 26 18 	call	0x304c	; 0x304c <__udivmodhi4>
    21de:	9e 87       	std	Y+14, r25	; 0x0e
    21e0:	8d 87       	std	Y+13, r24	; 0x0d
		local_reversed=(local_reversed*10)+local_remainder;
    21e2:	8b 85       	ldd	r24, Y+11	; 0x0b
    21e4:	9c 85       	ldd	r25, Y+12	; 0x0c
    21e6:	9c 01       	movw	r18, r24
    21e8:	22 0f       	add	r18, r18
    21ea:	33 1f       	adc	r19, r19
    21ec:	c9 01       	movw	r24, r18
    21ee:	88 0f       	add	r24, r24
    21f0:	99 1f       	adc	r25, r25
    21f2:	88 0f       	add	r24, r24
    21f4:	99 1f       	adc	r25, r25
    21f6:	28 0f       	add	r18, r24
    21f8:	39 1f       	adc	r19, r25
    21fa:	8d 85       	ldd	r24, Y+13	; 0x0d
    21fc:	9e 85       	ldd	r25, Y+14	; 0x0e
    21fe:	82 0f       	add	r24, r18
    2200:	93 1f       	adc	r25, r19
    2202:	9c 87       	std	Y+12, r25	; 0x0c
    2204:	8b 87       	std	Y+11, r24	; 0x0b
		tmp_1/=10;
    2206:	89 85       	ldd	r24, Y+9	; 0x09
    2208:	9a 85       	ldd	r25, Y+10	; 0x0a
    220a:	2a e0       	ldi	r18, 0x0A	; 10
    220c:	30 e0       	ldi	r19, 0x00	; 0
    220e:	b9 01       	movw	r22, r18
    2210:	0e 94 26 18 	call	0x304c	; 0x304c <__udivmodhi4>
    2214:	cb 01       	movw	r24, r22
    2216:	9a 87       	std	Y+10, r25	; 0x0a
    2218:	89 87       	std	Y+9, r24	; 0x09
		count++;
    221a:	8c 81       	ldd	r24, Y+4	; 0x04
    221c:	8f 5f       	subi	r24, 0xFF	; 255
    221e:	8c 83       	std	Y+4, r24	; 0x04


	if(Copy_Value<1)
		LCD_VidSendChar('0');

	while(tmp_1!=0)
    2220:	89 85       	ldd	r24, Y+9	; 0x09
    2222:	9a 85       	ldd	r25, Y+10	; 0x0a
    2224:	00 97       	sbiw	r24, 0x00	; 0
    2226:	a1 f6       	brne	.-88     	; 0x21d0 <LCD_VidSendNumberFloat+0xb4>
    2228:	17 c0       	rjmp	.+46     	; 0x2258 <LCD_VidSendNumberFloat+0x13c>
		tmp_1/=10;
		count++;
	}
	while(count!=0)
	{
		LCD_VidSendChar((local_reversed%10)+'0');
    222a:	8b 85       	ldd	r24, Y+11	; 0x0b
    222c:	9c 85       	ldd	r25, Y+12	; 0x0c
    222e:	2a e0       	ldi	r18, 0x0A	; 10
    2230:	30 e0       	ldi	r19, 0x00	; 0
    2232:	b9 01       	movw	r22, r18
    2234:	0e 94 26 18 	call	0x304c	; 0x304c <__udivmodhi4>
    2238:	80 5d       	subi	r24, 0xD0	; 208
    223a:	0e 94 a3 11 	call	0x2346	; 0x2346 <LCD_VidSendChar>
		local_reversed/=10;
    223e:	8b 85       	ldd	r24, Y+11	; 0x0b
    2240:	9c 85       	ldd	r25, Y+12	; 0x0c
    2242:	2a e0       	ldi	r18, 0x0A	; 10
    2244:	30 e0       	ldi	r19, 0x00	; 0
    2246:	b9 01       	movw	r22, r18
    2248:	0e 94 26 18 	call	0x304c	; 0x304c <__udivmodhi4>
    224c:	cb 01       	movw	r24, r22
    224e:	9c 87       	std	Y+12, r25	; 0x0c
    2250:	8b 87       	std	Y+11, r24	; 0x0b
		count--;
    2252:	8c 81       	ldd	r24, Y+4	; 0x04
    2254:	81 50       	subi	r24, 0x01	; 1
    2256:	8c 83       	std	Y+4, r24	; 0x04
		local_remainder=tmp_1%10;
		local_reversed=(local_reversed*10)+local_remainder;
		tmp_1/=10;
		count++;
	}
	while(count!=0)
    2258:	8c 81       	ldd	r24, Y+4	; 0x04
    225a:	88 23       	and	r24, r24
    225c:	31 f7       	brne	.-52     	; 0x222a <LCD_VidSendNumberFloat+0x10e>
		LCD_VidSendChar((local_reversed%10)+'0');
		local_reversed/=10;
		count--;
	}

	LCD_VidSendChar('.');
    225e:	8e e2       	ldi	r24, 0x2E	; 46
    2260:	0e 94 a3 11 	call	0x2346	; 0x2346 <LCD_VidSendChar>
	if(Copy_U8Number/100 ==0)
    2264:	89 81       	ldd	r24, Y+1	; 0x01
    2266:	9a 81       	ldd	r25, Y+2	; 0x02
    2268:	84 36       	cpi	r24, 0x64	; 100
    226a:	91 05       	cpc	r25, r1
    226c:	20 f4       	brcc	.+8      	; 0x2276 <LCD_VidSendNumberFloat+0x15a>
		LCD_VidSendChar('0');
    226e:	80 e3       	ldi	r24, 0x30	; 48
    2270:	0e 94 a3 11 	call	0x2346	; 0x2346 <LCD_VidSendChar>
    2274:	31 c0       	rjmp	.+98     	; 0x22d8 <LCD_VidSendNumberFloat+0x1bc>
	else if (Copy_U8Number/10 ==0)
    2276:	89 81       	ldd	r24, Y+1	; 0x01
    2278:	9a 81       	ldd	r25, Y+2	; 0x02
    227a:	8a 30       	cpi	r24, 0x0A	; 10
    227c:	91 05       	cpc	r25, r1
    227e:	60 f5       	brcc	.+88     	; 0x22d8 <LCD_VidSendNumberFloat+0x1bc>
			LCD_VidSendChar('0');
    2280:	80 e3       	ldi	r24, 0x30	; 48
    2282:	0e 94 a3 11 	call	0x2346	; 0x2346 <LCD_VidSendChar>
    2286:	28 c0       	rjmp	.+80     	; 0x22d8 <LCD_VidSendNumberFloat+0x1bc>

	while(Copy_U8Number!=0)
	{
		local_remainder=Copy_U8Number%10;
    2288:	89 81       	ldd	r24, Y+1	; 0x01
    228a:	9a 81       	ldd	r25, Y+2	; 0x02
    228c:	2a e0       	ldi	r18, 0x0A	; 10
    228e:	30 e0       	ldi	r19, 0x00	; 0
    2290:	b9 01       	movw	r22, r18
    2292:	0e 94 26 18 	call	0x304c	; 0x304c <__udivmodhi4>
    2296:	9e 87       	std	Y+14, r25	; 0x0e
    2298:	8d 87       	std	Y+13, r24	; 0x0d
		local_reversed=(local_reversed*10)+local_remainder;
    229a:	8b 85       	ldd	r24, Y+11	; 0x0b
    229c:	9c 85       	ldd	r25, Y+12	; 0x0c
    229e:	9c 01       	movw	r18, r24
    22a0:	22 0f       	add	r18, r18
    22a2:	33 1f       	adc	r19, r19
    22a4:	c9 01       	movw	r24, r18
    22a6:	88 0f       	add	r24, r24
    22a8:	99 1f       	adc	r25, r25
    22aa:	88 0f       	add	r24, r24
    22ac:	99 1f       	adc	r25, r25
    22ae:	28 0f       	add	r18, r24
    22b0:	39 1f       	adc	r19, r25
    22b2:	8d 85       	ldd	r24, Y+13	; 0x0d
    22b4:	9e 85       	ldd	r25, Y+14	; 0x0e
    22b6:	82 0f       	add	r24, r18
    22b8:	93 1f       	adc	r25, r19
    22ba:	9c 87       	std	Y+12, r25	; 0x0c
    22bc:	8b 87       	std	Y+11, r24	; 0x0b
		Copy_U8Number/=10;
    22be:	89 81       	ldd	r24, Y+1	; 0x01
    22c0:	9a 81       	ldd	r25, Y+2	; 0x02
    22c2:	2a e0       	ldi	r18, 0x0A	; 10
    22c4:	30 e0       	ldi	r19, 0x00	; 0
    22c6:	b9 01       	movw	r22, r18
    22c8:	0e 94 26 18 	call	0x304c	; 0x304c <__udivmodhi4>
    22cc:	cb 01       	movw	r24, r22
    22ce:	9a 83       	std	Y+2, r25	; 0x02
    22d0:	89 83       	std	Y+1, r24	; 0x01
		count++;
    22d2:	8c 81       	ldd	r24, Y+4	; 0x04
    22d4:	8f 5f       	subi	r24, 0xFF	; 255
    22d6:	8c 83       	std	Y+4, r24	; 0x04
	if(Copy_U8Number/100 ==0)
		LCD_VidSendChar('0');
	else if (Copy_U8Number/10 ==0)
			LCD_VidSendChar('0');

	while(Copy_U8Number!=0)
    22d8:	89 81       	ldd	r24, Y+1	; 0x01
    22da:	9a 81       	ldd	r25, Y+2	; 0x02
    22dc:	00 97       	sbiw	r24, 0x00	; 0
    22de:	a1 f6       	brne	.-88     	; 0x2288 <LCD_VidSendNumberFloat+0x16c>
    22e0:	17 c0       	rjmp	.+46     	; 0x2310 <LCD_VidSendNumberFloat+0x1f4>
		Copy_U8Number/=10;
		count++;
	}
	while(count!=0)
	{
		LCD_VidSendChar((local_reversed%10)+'0');
    22e2:	8b 85       	ldd	r24, Y+11	; 0x0b
    22e4:	9c 85       	ldd	r25, Y+12	; 0x0c
    22e6:	2a e0       	ldi	r18, 0x0A	; 10
    22e8:	30 e0       	ldi	r19, 0x00	; 0
    22ea:	b9 01       	movw	r22, r18
    22ec:	0e 94 26 18 	call	0x304c	; 0x304c <__udivmodhi4>
    22f0:	80 5d       	subi	r24, 0xD0	; 208
    22f2:	0e 94 a3 11 	call	0x2346	; 0x2346 <LCD_VidSendChar>
		local_reversed/=10;
    22f6:	8b 85       	ldd	r24, Y+11	; 0x0b
    22f8:	9c 85       	ldd	r25, Y+12	; 0x0c
    22fa:	2a e0       	ldi	r18, 0x0A	; 10
    22fc:	30 e0       	ldi	r19, 0x00	; 0
    22fe:	b9 01       	movw	r22, r18
    2300:	0e 94 26 18 	call	0x304c	; 0x304c <__udivmodhi4>
    2304:	cb 01       	movw	r24, r22
    2306:	9c 87       	std	Y+12, r25	; 0x0c
    2308:	8b 87       	std	Y+11, r24	; 0x0b
		count--;
    230a:	8c 81       	ldd	r24, Y+4	; 0x04
    230c:	81 50       	subi	r24, 0x01	; 1
    230e:	8c 83       	std	Y+4, r24	; 0x04
		local_remainder=Copy_U8Number%10;
		local_reversed=(local_reversed*10)+local_remainder;
		Copy_U8Number/=10;
		count++;
	}
	while(count!=0)
    2310:	8c 81       	ldd	r24, Y+4	; 0x04
    2312:	88 23       	and	r24, r24
    2314:	31 f7       	brne	.-52     	; 0x22e2 <LCD_VidSendNumberFloat+0x1c6>
		LCD_VidSendChar((local_reversed%10)+'0');
		local_reversed/=10;
		count--;
	}

	if(tmp==0)
    2316:	6d 81       	ldd	r22, Y+5	; 0x05
    2318:	7e 81       	ldd	r23, Y+6	; 0x06
    231a:	8f 81       	ldd	r24, Y+7	; 0x07
    231c:	98 85       	ldd	r25, Y+8	; 0x08
    231e:	20 e0       	ldi	r18, 0x00	; 0
    2320:	30 e0       	ldi	r19, 0x00	; 0
    2322:	40 e0       	ldi	r20, 0x00	; 0
    2324:	50 e0       	ldi	r21, 0x00	; 0
    2326:	0e 94 bd 03 	call	0x77a	; 0x77a <__eqsf2>
    232a:	88 23       	and	r24, r24
    232c:	19 f4       	brne	.+6      	; 0x2334 <LCD_VidSendNumberFloat+0x218>
		LCD_VidSendChar('0');
    232e:	80 e3       	ldi	r24, 0x30	; 48
    2330:	0e 94 a3 11 	call	0x2346	; 0x2346 <LCD_VidSendChar>

}
    2334:	62 96       	adiw	r28, 0x12	; 18
    2336:	0f b6       	in	r0, 0x3f	; 63
    2338:	f8 94       	cli
    233a:	de bf       	out	0x3e, r29	; 62
    233c:	0f be       	out	0x3f, r0	; 63
    233e:	cd bf       	out	0x3d, r28	; 61
    2340:	cf 91       	pop	r28
    2342:	df 91       	pop	r29
    2344:	08 95       	ret

00002346 <LCD_VidSendChar>:

void LCD_VidSendChar(u8 Copy_U8Char)
{
    2346:	df 93       	push	r29
    2348:	cf 93       	push	r28
    234a:	cd b7       	in	r28, 0x3d	; 61
    234c:	de b7       	in	r29, 0x3e	; 62
    234e:	2f 97       	sbiw	r28, 0x0f	; 15
    2350:	0f b6       	in	r0, 0x3f	; 63
    2352:	f8 94       	cli
    2354:	de bf       	out	0x3e, r29	; 62
    2356:	0f be       	out	0x3f, r0	; 63
    2358:	cd bf       	out	0x3d, r28	; 61
    235a:	8f 87       	std	Y+15, r24	; 0x0f

	DIO_VidSetPinValue(LCD_CMD_PORT,RS,DIO_HIGH);
    235c:	81 e0       	ldi	r24, 0x01	; 1
    235e:	65 e0       	ldi	r22, 0x05	; 5
    2360:	41 e0       	ldi	r20, 0x01	; 1
    2362:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <DIO_VidSetPinValue>
	DIO_VidSetPinValue(LCD_CMD_PORT,RW,DIO_LOW);
    2366:	81 e0       	ldi	r24, 0x01	; 1
    2368:	66 e0       	ldi	r22, 0x06	; 6
    236a:	40 e0       	ldi	r20, 0x00	; 0
    236c:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <DIO_VidSetPinValue>
	DIO_VidSetPortValue(LCD_DATA_PORT,Copy_U8Char);
    2370:	80 e0       	ldi	r24, 0x00	; 0
    2372:	6f 85       	ldd	r22, Y+15	; 0x0f
    2374:	0e 94 95 0c 	call	0x192a	; 0x192a <DIO_VidSetPortValue>

	DIO_VidSetPinValue(LCD_CMD_PORT,EN,DIO_HIGH);
    2378:	81 e0       	ldi	r24, 0x01	; 1
    237a:	67 e0       	ldi	r22, 0x07	; 7
    237c:	41 e0       	ldi	r20, 0x01	; 1
    237e:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <DIO_VidSetPinValue>
    2382:	80 e0       	ldi	r24, 0x00	; 0
    2384:	90 e0       	ldi	r25, 0x00	; 0
    2386:	a0 e8       	ldi	r26, 0x80	; 128
    2388:	bf e3       	ldi	r27, 0x3F	; 63
    238a:	8b 87       	std	Y+11, r24	; 0x0b
    238c:	9c 87       	std	Y+12, r25	; 0x0c
    238e:	ad 87       	std	Y+13, r26	; 0x0d
    2390:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2392:	6b 85       	ldd	r22, Y+11	; 0x0b
    2394:	7c 85       	ldd	r23, Y+12	; 0x0c
    2396:	8d 85       	ldd	r24, Y+13	; 0x0d
    2398:	9e 85       	ldd	r25, Y+14	; 0x0e
    239a:	20 e0       	ldi	r18, 0x00	; 0
    239c:	30 e0       	ldi	r19, 0x00	; 0
    239e:	4a ef       	ldi	r20, 0xFA	; 250
    23a0:	54 e4       	ldi	r21, 0x44	; 68
    23a2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23a6:	dc 01       	movw	r26, r24
    23a8:	cb 01       	movw	r24, r22
    23aa:	8f 83       	std	Y+7, r24	; 0x07
    23ac:	98 87       	std	Y+8, r25	; 0x08
    23ae:	a9 87       	std	Y+9, r26	; 0x09
    23b0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    23b2:	6f 81       	ldd	r22, Y+7	; 0x07
    23b4:	78 85       	ldd	r23, Y+8	; 0x08
    23b6:	89 85       	ldd	r24, Y+9	; 0x09
    23b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    23ba:	20 e0       	ldi	r18, 0x00	; 0
    23bc:	30 e0       	ldi	r19, 0x00	; 0
    23be:	40 e8       	ldi	r20, 0x80	; 128
    23c0:	5f e3       	ldi	r21, 0x3F	; 63
    23c2:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    23c6:	88 23       	and	r24, r24
    23c8:	2c f4       	brge	.+10     	; 0x23d4 <LCD_VidSendChar+0x8e>
		__ticks = 1;
    23ca:	81 e0       	ldi	r24, 0x01	; 1
    23cc:	90 e0       	ldi	r25, 0x00	; 0
    23ce:	9e 83       	std	Y+6, r25	; 0x06
    23d0:	8d 83       	std	Y+5, r24	; 0x05
    23d2:	3f c0       	rjmp	.+126    	; 0x2452 <LCD_VidSendChar+0x10c>
	else if (__tmp > 65535)
    23d4:	6f 81       	ldd	r22, Y+7	; 0x07
    23d6:	78 85       	ldd	r23, Y+8	; 0x08
    23d8:	89 85       	ldd	r24, Y+9	; 0x09
    23da:	9a 85       	ldd	r25, Y+10	; 0x0a
    23dc:	20 e0       	ldi	r18, 0x00	; 0
    23de:	3f ef       	ldi	r19, 0xFF	; 255
    23e0:	4f e7       	ldi	r20, 0x7F	; 127
    23e2:	57 e4       	ldi	r21, 0x47	; 71
    23e4:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    23e8:	18 16       	cp	r1, r24
    23ea:	4c f5       	brge	.+82     	; 0x243e <LCD_VidSendChar+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23ec:	6b 85       	ldd	r22, Y+11	; 0x0b
    23ee:	7c 85       	ldd	r23, Y+12	; 0x0c
    23f0:	8d 85       	ldd	r24, Y+13	; 0x0d
    23f2:	9e 85       	ldd	r25, Y+14	; 0x0e
    23f4:	20 e0       	ldi	r18, 0x00	; 0
    23f6:	30 e0       	ldi	r19, 0x00	; 0
    23f8:	40 e2       	ldi	r20, 0x20	; 32
    23fa:	51 e4       	ldi	r21, 0x41	; 65
    23fc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2400:	dc 01       	movw	r26, r24
    2402:	cb 01       	movw	r24, r22
    2404:	bc 01       	movw	r22, r24
    2406:	cd 01       	movw	r24, r26
    2408:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    240c:	dc 01       	movw	r26, r24
    240e:	cb 01       	movw	r24, r22
    2410:	9e 83       	std	Y+6, r25	; 0x06
    2412:	8d 83       	std	Y+5, r24	; 0x05
    2414:	0f c0       	rjmp	.+30     	; 0x2434 <LCD_VidSendChar+0xee>
    2416:	88 ec       	ldi	r24, 0xC8	; 200
    2418:	90 e0       	ldi	r25, 0x00	; 0
    241a:	9c 83       	std	Y+4, r25	; 0x04
    241c:	8b 83       	std	Y+3, r24	; 0x03
    241e:	8b 81       	ldd	r24, Y+3	; 0x03
    2420:	9c 81       	ldd	r25, Y+4	; 0x04
    2422:	01 97       	sbiw	r24, 0x01	; 1
    2424:	f1 f7       	brne	.-4      	; 0x2422 <LCD_VidSendChar+0xdc>
    2426:	9c 83       	std	Y+4, r25	; 0x04
    2428:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    242a:	8d 81       	ldd	r24, Y+5	; 0x05
    242c:	9e 81       	ldd	r25, Y+6	; 0x06
    242e:	01 97       	sbiw	r24, 0x01	; 1
    2430:	9e 83       	std	Y+6, r25	; 0x06
    2432:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2434:	8d 81       	ldd	r24, Y+5	; 0x05
    2436:	9e 81       	ldd	r25, Y+6	; 0x06
    2438:	00 97       	sbiw	r24, 0x00	; 0
    243a:	69 f7       	brne	.-38     	; 0x2416 <LCD_VidSendChar+0xd0>
    243c:	14 c0       	rjmp	.+40     	; 0x2466 <LCD_VidSendChar+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    243e:	6f 81       	ldd	r22, Y+7	; 0x07
    2440:	78 85       	ldd	r23, Y+8	; 0x08
    2442:	89 85       	ldd	r24, Y+9	; 0x09
    2444:	9a 85       	ldd	r25, Y+10	; 0x0a
    2446:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    244a:	dc 01       	movw	r26, r24
    244c:	cb 01       	movw	r24, r22
    244e:	9e 83       	std	Y+6, r25	; 0x06
    2450:	8d 83       	std	Y+5, r24	; 0x05
    2452:	8d 81       	ldd	r24, Y+5	; 0x05
    2454:	9e 81       	ldd	r25, Y+6	; 0x06
    2456:	9a 83       	std	Y+2, r25	; 0x02
    2458:	89 83       	std	Y+1, r24	; 0x01
    245a:	89 81       	ldd	r24, Y+1	; 0x01
    245c:	9a 81       	ldd	r25, Y+2	; 0x02
    245e:	01 97       	sbiw	r24, 0x01	; 1
    2460:	f1 f7       	brne	.-4      	; 0x245e <LCD_VidSendChar+0x118>
    2462:	9a 83       	std	Y+2, r25	; 0x02
    2464:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	DIO_VidSetPinValue(LCD_CMD_PORT,EN,DIO_LOW);
    2466:	81 e0       	ldi	r24, 0x01	; 1
    2468:	67 e0       	ldi	r22, 0x07	; 7
    246a:	40 e0       	ldi	r20, 0x00	; 0
    246c:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <DIO_VidSetPinValue>

}
    2470:	2f 96       	adiw	r28, 0x0f	; 15
    2472:	0f b6       	in	r0, 0x3f	; 63
    2474:	f8 94       	cli
    2476:	de bf       	out	0x3e, r29	; 62
    2478:	0f be       	out	0x3f, r0	; 63
    247a:	cd bf       	out	0x3d, r28	; 61
    247c:	cf 91       	pop	r28
    247e:	df 91       	pop	r29
    2480:	08 95       	ret

00002482 <LCD_VidInt>:

void LCD_VidInt(void)
{
    2482:	df 93       	push	r29
    2484:	cf 93       	push	r28
    2486:	cd b7       	in	r28, 0x3d	; 61
    2488:	de b7       	in	r29, 0x3e	; 62
    248a:	e8 97       	sbiw	r28, 0x38	; 56
    248c:	0f b6       	in	r0, 0x3f	; 63
    248e:	f8 94       	cli
    2490:	de bf       	out	0x3e, r29	; 62
    2492:	0f be       	out	0x3f, r0	; 63
    2494:	cd bf       	out	0x3d, r28	; 61
	DIO_VidSetPortDirection(LCD_DATA_PORT,DIO_OUT);
    2496:	80 e0       	ldi	r24, 0x00	; 0
    2498:	61 e0       	ldi	r22, 0x01	; 1
    249a:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <DIO_VidSetPortDirection>


	DIO_VidSetPinDirection(LCD_CMD_PORT,RS,DIO_OUT);
    249e:	81 e0       	ldi	r24, 0x01	; 1
    24a0:	65 e0       	ldi	r22, 0x05	; 5
    24a2:	41 e0       	ldi	r20, 0x01	; 1
    24a4:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(LCD_CMD_PORT,RW,DIO_OUT);
    24a8:	81 e0       	ldi	r24, 0x01	; 1
    24aa:	66 e0       	ldi	r22, 0x06	; 6
    24ac:	41 e0       	ldi	r20, 0x01	; 1
    24ae:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(LCD_CMD_PORT,EN,DIO_OUT);
    24b2:	81 e0       	ldi	r24, 0x01	; 1
    24b4:	67 e0       	ldi	r22, 0x07	; 7
    24b6:	41 e0       	ldi	r20, 0x01	; 1
    24b8:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <DIO_VidSetPinDirection>
    24bc:	80 e0       	ldi	r24, 0x00	; 0
    24be:	90 e0       	ldi	r25, 0x00	; 0
    24c0:	ac e0       	ldi	r26, 0x0C	; 12
    24c2:	b2 e4       	ldi	r27, 0x42	; 66
    24c4:	8d ab       	std	Y+53, r24	; 0x35
    24c6:	9e ab       	std	Y+54, r25	; 0x36
    24c8:	af ab       	std	Y+55, r26	; 0x37
    24ca:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    24cc:	6d a9       	ldd	r22, Y+53	; 0x35
    24ce:	7e a9       	ldd	r23, Y+54	; 0x36
    24d0:	8f a9       	ldd	r24, Y+55	; 0x37
    24d2:	98 ad       	ldd	r25, Y+56	; 0x38
    24d4:	20 e0       	ldi	r18, 0x00	; 0
    24d6:	30 e0       	ldi	r19, 0x00	; 0
    24d8:	4a ef       	ldi	r20, 0xFA	; 250
    24da:	54 e4       	ldi	r21, 0x44	; 68
    24dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24e0:	dc 01       	movw	r26, r24
    24e2:	cb 01       	movw	r24, r22
    24e4:	89 ab       	std	Y+49, r24	; 0x31
    24e6:	9a ab       	std	Y+50, r25	; 0x32
    24e8:	ab ab       	std	Y+51, r26	; 0x33
    24ea:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    24ec:	69 a9       	ldd	r22, Y+49	; 0x31
    24ee:	7a a9       	ldd	r23, Y+50	; 0x32
    24f0:	8b a9       	ldd	r24, Y+51	; 0x33
    24f2:	9c a9       	ldd	r25, Y+52	; 0x34
    24f4:	20 e0       	ldi	r18, 0x00	; 0
    24f6:	30 e0       	ldi	r19, 0x00	; 0
    24f8:	40 e8       	ldi	r20, 0x80	; 128
    24fa:	5f e3       	ldi	r21, 0x3F	; 63
    24fc:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    2500:	88 23       	and	r24, r24
    2502:	2c f4       	brge	.+10     	; 0x250e <LCD_VidInt+0x8c>
		__ticks = 1;
    2504:	81 e0       	ldi	r24, 0x01	; 1
    2506:	90 e0       	ldi	r25, 0x00	; 0
    2508:	98 ab       	std	Y+48, r25	; 0x30
    250a:	8f a7       	std	Y+47, r24	; 0x2f
    250c:	3f c0       	rjmp	.+126    	; 0x258c <LCD_VidInt+0x10a>
	else if (__tmp > 65535)
    250e:	69 a9       	ldd	r22, Y+49	; 0x31
    2510:	7a a9       	ldd	r23, Y+50	; 0x32
    2512:	8b a9       	ldd	r24, Y+51	; 0x33
    2514:	9c a9       	ldd	r25, Y+52	; 0x34
    2516:	20 e0       	ldi	r18, 0x00	; 0
    2518:	3f ef       	ldi	r19, 0xFF	; 255
    251a:	4f e7       	ldi	r20, 0x7F	; 127
    251c:	57 e4       	ldi	r21, 0x47	; 71
    251e:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    2522:	18 16       	cp	r1, r24
    2524:	4c f5       	brge	.+82     	; 0x2578 <LCD_VidInt+0xf6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2526:	6d a9       	ldd	r22, Y+53	; 0x35
    2528:	7e a9       	ldd	r23, Y+54	; 0x36
    252a:	8f a9       	ldd	r24, Y+55	; 0x37
    252c:	98 ad       	ldd	r25, Y+56	; 0x38
    252e:	20 e0       	ldi	r18, 0x00	; 0
    2530:	30 e0       	ldi	r19, 0x00	; 0
    2532:	40 e2       	ldi	r20, 0x20	; 32
    2534:	51 e4       	ldi	r21, 0x41	; 65
    2536:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    253a:	dc 01       	movw	r26, r24
    253c:	cb 01       	movw	r24, r22
    253e:	bc 01       	movw	r22, r24
    2540:	cd 01       	movw	r24, r26
    2542:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2546:	dc 01       	movw	r26, r24
    2548:	cb 01       	movw	r24, r22
    254a:	98 ab       	std	Y+48, r25	; 0x30
    254c:	8f a7       	std	Y+47, r24	; 0x2f
    254e:	0f c0       	rjmp	.+30     	; 0x256e <LCD_VidInt+0xec>
    2550:	88 ec       	ldi	r24, 0xC8	; 200
    2552:	90 e0       	ldi	r25, 0x00	; 0
    2554:	9e a7       	std	Y+46, r25	; 0x2e
    2556:	8d a7       	std	Y+45, r24	; 0x2d
    2558:	8d a5       	ldd	r24, Y+45	; 0x2d
    255a:	9e a5       	ldd	r25, Y+46	; 0x2e
    255c:	01 97       	sbiw	r24, 0x01	; 1
    255e:	f1 f7       	brne	.-4      	; 0x255c <LCD_VidInt+0xda>
    2560:	9e a7       	std	Y+46, r25	; 0x2e
    2562:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2564:	8f a5       	ldd	r24, Y+47	; 0x2f
    2566:	98 a9       	ldd	r25, Y+48	; 0x30
    2568:	01 97       	sbiw	r24, 0x01	; 1
    256a:	98 ab       	std	Y+48, r25	; 0x30
    256c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    256e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2570:	98 a9       	ldd	r25, Y+48	; 0x30
    2572:	00 97       	sbiw	r24, 0x00	; 0
    2574:	69 f7       	brne	.-38     	; 0x2550 <LCD_VidInt+0xce>
    2576:	14 c0       	rjmp	.+40     	; 0x25a0 <LCD_VidInt+0x11e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2578:	69 a9       	ldd	r22, Y+49	; 0x31
    257a:	7a a9       	ldd	r23, Y+50	; 0x32
    257c:	8b a9       	ldd	r24, Y+51	; 0x33
    257e:	9c a9       	ldd	r25, Y+52	; 0x34
    2580:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2584:	dc 01       	movw	r26, r24
    2586:	cb 01       	movw	r24, r22
    2588:	98 ab       	std	Y+48, r25	; 0x30
    258a:	8f a7       	std	Y+47, r24	; 0x2f
    258c:	8f a5       	ldd	r24, Y+47	; 0x2f
    258e:	98 a9       	ldd	r25, Y+48	; 0x30
    2590:	9c a7       	std	Y+44, r25	; 0x2c
    2592:	8b a7       	std	Y+43, r24	; 0x2b
    2594:	8b a5       	ldd	r24, Y+43	; 0x2b
    2596:	9c a5       	ldd	r25, Y+44	; 0x2c
    2598:	01 97       	sbiw	r24, 0x01	; 1
    259a:	f1 f7       	brne	.-4      	; 0x2598 <LCD_VidInt+0x116>
    259c:	9c a7       	std	Y+44, r25	; 0x2c
    259e:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(35);
	LCD_VidSendCMD(FUN_SET);
    25a0:	88 e3       	ldi	r24, 0x38	; 56
    25a2:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <LCD_VidSendCMD>
    25a6:	80 e0       	ldi	r24, 0x00	; 0
    25a8:	90 e0       	ldi	r25, 0x00	; 0
    25aa:	a0 e8       	ldi	r26, 0x80	; 128
    25ac:	bf e3       	ldi	r27, 0x3F	; 63
    25ae:	8f a3       	std	Y+39, r24	; 0x27
    25b0:	98 a7       	std	Y+40, r25	; 0x28
    25b2:	a9 a7       	std	Y+41, r26	; 0x29
    25b4:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    25b6:	6f a1       	ldd	r22, Y+39	; 0x27
    25b8:	78 a5       	ldd	r23, Y+40	; 0x28
    25ba:	89 a5       	ldd	r24, Y+41	; 0x29
    25bc:	9a a5       	ldd	r25, Y+42	; 0x2a
    25be:	20 e0       	ldi	r18, 0x00	; 0
    25c0:	30 e0       	ldi	r19, 0x00	; 0
    25c2:	4a ef       	ldi	r20, 0xFA	; 250
    25c4:	54 e4       	ldi	r21, 0x44	; 68
    25c6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25ca:	dc 01       	movw	r26, r24
    25cc:	cb 01       	movw	r24, r22
    25ce:	8b a3       	std	Y+35, r24	; 0x23
    25d0:	9c a3       	std	Y+36, r25	; 0x24
    25d2:	ad a3       	std	Y+37, r26	; 0x25
    25d4:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    25d6:	6b a1       	ldd	r22, Y+35	; 0x23
    25d8:	7c a1       	ldd	r23, Y+36	; 0x24
    25da:	8d a1       	ldd	r24, Y+37	; 0x25
    25dc:	9e a1       	ldd	r25, Y+38	; 0x26
    25de:	20 e0       	ldi	r18, 0x00	; 0
    25e0:	30 e0       	ldi	r19, 0x00	; 0
    25e2:	40 e8       	ldi	r20, 0x80	; 128
    25e4:	5f e3       	ldi	r21, 0x3F	; 63
    25e6:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    25ea:	88 23       	and	r24, r24
    25ec:	2c f4       	brge	.+10     	; 0x25f8 <LCD_VidInt+0x176>
		__ticks = 1;
    25ee:	81 e0       	ldi	r24, 0x01	; 1
    25f0:	90 e0       	ldi	r25, 0x00	; 0
    25f2:	9a a3       	std	Y+34, r25	; 0x22
    25f4:	89 a3       	std	Y+33, r24	; 0x21
    25f6:	3f c0       	rjmp	.+126    	; 0x2676 <LCD_VidInt+0x1f4>
	else if (__tmp > 65535)
    25f8:	6b a1       	ldd	r22, Y+35	; 0x23
    25fa:	7c a1       	ldd	r23, Y+36	; 0x24
    25fc:	8d a1       	ldd	r24, Y+37	; 0x25
    25fe:	9e a1       	ldd	r25, Y+38	; 0x26
    2600:	20 e0       	ldi	r18, 0x00	; 0
    2602:	3f ef       	ldi	r19, 0xFF	; 255
    2604:	4f e7       	ldi	r20, 0x7F	; 127
    2606:	57 e4       	ldi	r21, 0x47	; 71
    2608:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    260c:	18 16       	cp	r1, r24
    260e:	4c f5       	brge	.+82     	; 0x2662 <LCD_VidInt+0x1e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2610:	6f a1       	ldd	r22, Y+39	; 0x27
    2612:	78 a5       	ldd	r23, Y+40	; 0x28
    2614:	89 a5       	ldd	r24, Y+41	; 0x29
    2616:	9a a5       	ldd	r25, Y+42	; 0x2a
    2618:	20 e0       	ldi	r18, 0x00	; 0
    261a:	30 e0       	ldi	r19, 0x00	; 0
    261c:	40 e2       	ldi	r20, 0x20	; 32
    261e:	51 e4       	ldi	r21, 0x41	; 65
    2620:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2624:	dc 01       	movw	r26, r24
    2626:	cb 01       	movw	r24, r22
    2628:	bc 01       	movw	r22, r24
    262a:	cd 01       	movw	r24, r26
    262c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2630:	dc 01       	movw	r26, r24
    2632:	cb 01       	movw	r24, r22
    2634:	9a a3       	std	Y+34, r25	; 0x22
    2636:	89 a3       	std	Y+33, r24	; 0x21
    2638:	0f c0       	rjmp	.+30     	; 0x2658 <LCD_VidInt+0x1d6>
    263a:	88 ec       	ldi	r24, 0xC8	; 200
    263c:	90 e0       	ldi	r25, 0x00	; 0
    263e:	98 a3       	std	Y+32, r25	; 0x20
    2640:	8f 8f       	std	Y+31, r24	; 0x1f
    2642:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2644:	98 a1       	ldd	r25, Y+32	; 0x20
    2646:	01 97       	sbiw	r24, 0x01	; 1
    2648:	f1 f7       	brne	.-4      	; 0x2646 <LCD_VidInt+0x1c4>
    264a:	98 a3       	std	Y+32, r25	; 0x20
    264c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    264e:	89 a1       	ldd	r24, Y+33	; 0x21
    2650:	9a a1       	ldd	r25, Y+34	; 0x22
    2652:	01 97       	sbiw	r24, 0x01	; 1
    2654:	9a a3       	std	Y+34, r25	; 0x22
    2656:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2658:	89 a1       	ldd	r24, Y+33	; 0x21
    265a:	9a a1       	ldd	r25, Y+34	; 0x22
    265c:	00 97       	sbiw	r24, 0x00	; 0
    265e:	69 f7       	brne	.-38     	; 0x263a <LCD_VidInt+0x1b8>
    2660:	14 c0       	rjmp	.+40     	; 0x268a <LCD_VidInt+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2662:	6b a1       	ldd	r22, Y+35	; 0x23
    2664:	7c a1       	ldd	r23, Y+36	; 0x24
    2666:	8d a1       	ldd	r24, Y+37	; 0x25
    2668:	9e a1       	ldd	r25, Y+38	; 0x26
    266a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    266e:	dc 01       	movw	r26, r24
    2670:	cb 01       	movw	r24, r22
    2672:	9a a3       	std	Y+34, r25	; 0x22
    2674:	89 a3       	std	Y+33, r24	; 0x21
    2676:	89 a1       	ldd	r24, Y+33	; 0x21
    2678:	9a a1       	ldd	r25, Y+34	; 0x22
    267a:	9e 8f       	std	Y+30, r25	; 0x1e
    267c:	8d 8f       	std	Y+29, r24	; 0x1d
    267e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2680:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2682:	01 97       	sbiw	r24, 0x01	; 1
    2684:	f1 f7       	brne	.-4      	; 0x2682 <LCD_VidInt+0x200>
    2686:	9e 8f       	std	Y+30, r25	; 0x1e
    2688:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	LCD_VidSendCMD(LCD_ON_OFF);
    268a:	8e e0       	ldi	r24, 0x0E	; 14
    268c:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <LCD_VidSendCMD>
    2690:	80 e0       	ldi	r24, 0x00	; 0
    2692:	90 e0       	ldi	r25, 0x00	; 0
    2694:	a0 e8       	ldi	r26, 0x80	; 128
    2696:	bf e3       	ldi	r27, 0x3F	; 63
    2698:	89 8f       	std	Y+25, r24	; 0x19
    269a:	9a 8f       	std	Y+26, r25	; 0x1a
    269c:	ab 8f       	std	Y+27, r26	; 0x1b
    269e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26a0:	69 8d       	ldd	r22, Y+25	; 0x19
    26a2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    26a4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    26a6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    26a8:	20 e0       	ldi	r18, 0x00	; 0
    26aa:	30 e0       	ldi	r19, 0x00	; 0
    26ac:	4a ef       	ldi	r20, 0xFA	; 250
    26ae:	54 e4       	ldi	r21, 0x44	; 68
    26b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26b4:	dc 01       	movw	r26, r24
    26b6:	cb 01       	movw	r24, r22
    26b8:	8d 8b       	std	Y+21, r24	; 0x15
    26ba:	9e 8b       	std	Y+22, r25	; 0x16
    26bc:	af 8b       	std	Y+23, r26	; 0x17
    26be:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    26c0:	6d 89       	ldd	r22, Y+21	; 0x15
    26c2:	7e 89       	ldd	r23, Y+22	; 0x16
    26c4:	8f 89       	ldd	r24, Y+23	; 0x17
    26c6:	98 8d       	ldd	r25, Y+24	; 0x18
    26c8:	20 e0       	ldi	r18, 0x00	; 0
    26ca:	30 e0       	ldi	r19, 0x00	; 0
    26cc:	40 e8       	ldi	r20, 0x80	; 128
    26ce:	5f e3       	ldi	r21, 0x3F	; 63
    26d0:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    26d4:	88 23       	and	r24, r24
    26d6:	2c f4       	brge	.+10     	; 0x26e2 <LCD_VidInt+0x260>
		__ticks = 1;
    26d8:	81 e0       	ldi	r24, 0x01	; 1
    26da:	90 e0       	ldi	r25, 0x00	; 0
    26dc:	9c 8b       	std	Y+20, r25	; 0x14
    26de:	8b 8b       	std	Y+19, r24	; 0x13
    26e0:	3f c0       	rjmp	.+126    	; 0x2760 <LCD_VidInt+0x2de>
	else if (__tmp > 65535)
    26e2:	6d 89       	ldd	r22, Y+21	; 0x15
    26e4:	7e 89       	ldd	r23, Y+22	; 0x16
    26e6:	8f 89       	ldd	r24, Y+23	; 0x17
    26e8:	98 8d       	ldd	r25, Y+24	; 0x18
    26ea:	20 e0       	ldi	r18, 0x00	; 0
    26ec:	3f ef       	ldi	r19, 0xFF	; 255
    26ee:	4f e7       	ldi	r20, 0x7F	; 127
    26f0:	57 e4       	ldi	r21, 0x47	; 71
    26f2:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    26f6:	18 16       	cp	r1, r24
    26f8:	4c f5       	brge	.+82     	; 0x274c <LCD_VidInt+0x2ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26fa:	69 8d       	ldd	r22, Y+25	; 0x19
    26fc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    26fe:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2700:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2702:	20 e0       	ldi	r18, 0x00	; 0
    2704:	30 e0       	ldi	r19, 0x00	; 0
    2706:	40 e2       	ldi	r20, 0x20	; 32
    2708:	51 e4       	ldi	r21, 0x41	; 65
    270a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    270e:	dc 01       	movw	r26, r24
    2710:	cb 01       	movw	r24, r22
    2712:	bc 01       	movw	r22, r24
    2714:	cd 01       	movw	r24, r26
    2716:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    271a:	dc 01       	movw	r26, r24
    271c:	cb 01       	movw	r24, r22
    271e:	9c 8b       	std	Y+20, r25	; 0x14
    2720:	8b 8b       	std	Y+19, r24	; 0x13
    2722:	0f c0       	rjmp	.+30     	; 0x2742 <LCD_VidInt+0x2c0>
    2724:	88 ec       	ldi	r24, 0xC8	; 200
    2726:	90 e0       	ldi	r25, 0x00	; 0
    2728:	9a 8b       	std	Y+18, r25	; 0x12
    272a:	89 8b       	std	Y+17, r24	; 0x11
    272c:	89 89       	ldd	r24, Y+17	; 0x11
    272e:	9a 89       	ldd	r25, Y+18	; 0x12
    2730:	01 97       	sbiw	r24, 0x01	; 1
    2732:	f1 f7       	brne	.-4      	; 0x2730 <LCD_VidInt+0x2ae>
    2734:	9a 8b       	std	Y+18, r25	; 0x12
    2736:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2738:	8b 89       	ldd	r24, Y+19	; 0x13
    273a:	9c 89       	ldd	r25, Y+20	; 0x14
    273c:	01 97       	sbiw	r24, 0x01	; 1
    273e:	9c 8b       	std	Y+20, r25	; 0x14
    2740:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2742:	8b 89       	ldd	r24, Y+19	; 0x13
    2744:	9c 89       	ldd	r25, Y+20	; 0x14
    2746:	00 97       	sbiw	r24, 0x00	; 0
    2748:	69 f7       	brne	.-38     	; 0x2724 <LCD_VidInt+0x2a2>
    274a:	14 c0       	rjmp	.+40     	; 0x2774 <LCD_VidInt+0x2f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    274c:	6d 89       	ldd	r22, Y+21	; 0x15
    274e:	7e 89       	ldd	r23, Y+22	; 0x16
    2750:	8f 89       	ldd	r24, Y+23	; 0x17
    2752:	98 8d       	ldd	r25, Y+24	; 0x18
    2754:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2758:	dc 01       	movw	r26, r24
    275a:	cb 01       	movw	r24, r22
    275c:	9c 8b       	std	Y+20, r25	; 0x14
    275e:	8b 8b       	std	Y+19, r24	; 0x13
    2760:	8b 89       	ldd	r24, Y+19	; 0x13
    2762:	9c 89       	ldd	r25, Y+20	; 0x14
    2764:	98 8b       	std	Y+16, r25	; 0x10
    2766:	8f 87       	std	Y+15, r24	; 0x0f
    2768:	8f 85       	ldd	r24, Y+15	; 0x0f
    276a:	98 89       	ldd	r25, Y+16	; 0x10
    276c:	01 97       	sbiw	r24, 0x01	; 1
    276e:	f1 f7       	brne	.-4      	; 0x276c <LCD_VidInt+0x2ea>
    2770:	98 8b       	std	Y+16, r25	; 0x10
    2772:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	LCD_VidSendCMD(LCD_CLEAR);
    2774:	81 e0       	ldi	r24, 0x01	; 1
    2776:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <LCD_VidSendCMD>
    277a:	80 e0       	ldi	r24, 0x00	; 0
    277c:	90 e0       	ldi	r25, 0x00	; 0
    277e:	a0 e0       	ldi	r26, 0x00	; 0
    2780:	b0 e4       	ldi	r27, 0x40	; 64
    2782:	8b 87       	std	Y+11, r24	; 0x0b
    2784:	9c 87       	std	Y+12, r25	; 0x0c
    2786:	ad 87       	std	Y+13, r26	; 0x0d
    2788:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    278a:	6b 85       	ldd	r22, Y+11	; 0x0b
    278c:	7c 85       	ldd	r23, Y+12	; 0x0c
    278e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2790:	9e 85       	ldd	r25, Y+14	; 0x0e
    2792:	20 e0       	ldi	r18, 0x00	; 0
    2794:	30 e0       	ldi	r19, 0x00	; 0
    2796:	4a ef       	ldi	r20, 0xFA	; 250
    2798:	54 e4       	ldi	r21, 0x44	; 68
    279a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    279e:	dc 01       	movw	r26, r24
    27a0:	cb 01       	movw	r24, r22
    27a2:	8f 83       	std	Y+7, r24	; 0x07
    27a4:	98 87       	std	Y+8, r25	; 0x08
    27a6:	a9 87       	std	Y+9, r26	; 0x09
    27a8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    27aa:	6f 81       	ldd	r22, Y+7	; 0x07
    27ac:	78 85       	ldd	r23, Y+8	; 0x08
    27ae:	89 85       	ldd	r24, Y+9	; 0x09
    27b0:	9a 85       	ldd	r25, Y+10	; 0x0a
    27b2:	20 e0       	ldi	r18, 0x00	; 0
    27b4:	30 e0       	ldi	r19, 0x00	; 0
    27b6:	40 e8       	ldi	r20, 0x80	; 128
    27b8:	5f e3       	ldi	r21, 0x3F	; 63
    27ba:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    27be:	88 23       	and	r24, r24
    27c0:	2c f4       	brge	.+10     	; 0x27cc <LCD_VidInt+0x34a>
		__ticks = 1;
    27c2:	81 e0       	ldi	r24, 0x01	; 1
    27c4:	90 e0       	ldi	r25, 0x00	; 0
    27c6:	9e 83       	std	Y+6, r25	; 0x06
    27c8:	8d 83       	std	Y+5, r24	; 0x05
    27ca:	3f c0       	rjmp	.+126    	; 0x284a <LCD_VidInt+0x3c8>
	else if (__tmp > 65535)
    27cc:	6f 81       	ldd	r22, Y+7	; 0x07
    27ce:	78 85       	ldd	r23, Y+8	; 0x08
    27d0:	89 85       	ldd	r24, Y+9	; 0x09
    27d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    27d4:	20 e0       	ldi	r18, 0x00	; 0
    27d6:	3f ef       	ldi	r19, 0xFF	; 255
    27d8:	4f e7       	ldi	r20, 0x7F	; 127
    27da:	57 e4       	ldi	r21, 0x47	; 71
    27dc:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    27e0:	18 16       	cp	r1, r24
    27e2:	4c f5       	brge	.+82     	; 0x2836 <LCD_VidInt+0x3b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27e4:	6b 85       	ldd	r22, Y+11	; 0x0b
    27e6:	7c 85       	ldd	r23, Y+12	; 0x0c
    27e8:	8d 85       	ldd	r24, Y+13	; 0x0d
    27ea:	9e 85       	ldd	r25, Y+14	; 0x0e
    27ec:	20 e0       	ldi	r18, 0x00	; 0
    27ee:	30 e0       	ldi	r19, 0x00	; 0
    27f0:	40 e2       	ldi	r20, 0x20	; 32
    27f2:	51 e4       	ldi	r21, 0x41	; 65
    27f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27f8:	dc 01       	movw	r26, r24
    27fa:	cb 01       	movw	r24, r22
    27fc:	bc 01       	movw	r22, r24
    27fe:	cd 01       	movw	r24, r26
    2800:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2804:	dc 01       	movw	r26, r24
    2806:	cb 01       	movw	r24, r22
    2808:	9e 83       	std	Y+6, r25	; 0x06
    280a:	8d 83       	std	Y+5, r24	; 0x05
    280c:	0f c0       	rjmp	.+30     	; 0x282c <LCD_VidInt+0x3aa>
    280e:	88 ec       	ldi	r24, 0xC8	; 200
    2810:	90 e0       	ldi	r25, 0x00	; 0
    2812:	9c 83       	std	Y+4, r25	; 0x04
    2814:	8b 83       	std	Y+3, r24	; 0x03
    2816:	8b 81       	ldd	r24, Y+3	; 0x03
    2818:	9c 81       	ldd	r25, Y+4	; 0x04
    281a:	01 97       	sbiw	r24, 0x01	; 1
    281c:	f1 f7       	brne	.-4      	; 0x281a <LCD_VidInt+0x398>
    281e:	9c 83       	std	Y+4, r25	; 0x04
    2820:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2822:	8d 81       	ldd	r24, Y+5	; 0x05
    2824:	9e 81       	ldd	r25, Y+6	; 0x06
    2826:	01 97       	sbiw	r24, 0x01	; 1
    2828:	9e 83       	std	Y+6, r25	; 0x06
    282a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    282c:	8d 81       	ldd	r24, Y+5	; 0x05
    282e:	9e 81       	ldd	r25, Y+6	; 0x06
    2830:	00 97       	sbiw	r24, 0x00	; 0
    2832:	69 f7       	brne	.-38     	; 0x280e <LCD_VidInt+0x38c>
    2834:	14 c0       	rjmp	.+40     	; 0x285e <LCD_VidInt+0x3dc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2836:	6f 81       	ldd	r22, Y+7	; 0x07
    2838:	78 85       	ldd	r23, Y+8	; 0x08
    283a:	89 85       	ldd	r24, Y+9	; 0x09
    283c:	9a 85       	ldd	r25, Y+10	; 0x0a
    283e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2842:	dc 01       	movw	r26, r24
    2844:	cb 01       	movw	r24, r22
    2846:	9e 83       	std	Y+6, r25	; 0x06
    2848:	8d 83       	std	Y+5, r24	; 0x05
    284a:	8d 81       	ldd	r24, Y+5	; 0x05
    284c:	9e 81       	ldd	r25, Y+6	; 0x06
    284e:	9a 83       	std	Y+2, r25	; 0x02
    2850:	89 83       	std	Y+1, r24	; 0x01
    2852:	89 81       	ldd	r24, Y+1	; 0x01
    2854:	9a 81       	ldd	r25, Y+2	; 0x02
    2856:	01 97       	sbiw	r24, 0x01	; 1
    2858:	f1 f7       	brne	.-4      	; 0x2856 <LCD_VidInt+0x3d4>
    285a:	9a 83       	std	Y+2, r25	; 0x02
    285c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
}
    285e:	e8 96       	adiw	r28, 0x38	; 56
    2860:	0f b6       	in	r0, 0x3f	; 63
    2862:	f8 94       	cli
    2864:	de bf       	out	0x3e, r29	; 62
    2866:	0f be       	out	0x3f, r0	; 63
    2868:	cd bf       	out	0x3d, r28	; 61
    286a:	cf 91       	pop	r28
    286c:	df 91       	pop	r29
    286e:	08 95       	ret

00002870 <LCD_VidSendString>:

void LCD_VidSendString(u8 *Copy_u8Ptr)
{
    2870:	df 93       	push	r29
    2872:	cf 93       	push	r28
    2874:	00 d0       	rcall	.+0      	; 0x2876 <LCD_VidSendString+0x6>
    2876:	0f 92       	push	r0
    2878:	cd b7       	in	r28, 0x3d	; 61
    287a:	de b7       	in	r29, 0x3e	; 62
    287c:	9b 83       	std	Y+3, r25	; 0x03
    287e:	8a 83       	std	Y+2, r24	; 0x02
	u8 local=0;
    2880:	19 82       	std	Y+1, r1	; 0x01
    2882:	0e c0       	rjmp	.+28     	; 0x28a0 <LCD_VidSendString+0x30>
	while(Copy_u8Ptr[local] !='\0')
	{
		LCD_VidSendChar(Copy_u8Ptr[local]);
    2884:	89 81       	ldd	r24, Y+1	; 0x01
    2886:	28 2f       	mov	r18, r24
    2888:	30 e0       	ldi	r19, 0x00	; 0
    288a:	8a 81       	ldd	r24, Y+2	; 0x02
    288c:	9b 81       	ldd	r25, Y+3	; 0x03
    288e:	fc 01       	movw	r30, r24
    2890:	e2 0f       	add	r30, r18
    2892:	f3 1f       	adc	r31, r19
    2894:	80 81       	ld	r24, Z
    2896:	0e 94 a3 11 	call	0x2346	; 0x2346 <LCD_VidSendChar>
		local++;
    289a:	89 81       	ldd	r24, Y+1	; 0x01
    289c:	8f 5f       	subi	r24, 0xFF	; 255
    289e:	89 83       	std	Y+1, r24	; 0x01
}

void LCD_VidSendString(u8 *Copy_u8Ptr)
{
	u8 local=0;
	while(Copy_u8Ptr[local] !='\0')
    28a0:	89 81       	ldd	r24, Y+1	; 0x01
    28a2:	28 2f       	mov	r18, r24
    28a4:	30 e0       	ldi	r19, 0x00	; 0
    28a6:	8a 81       	ldd	r24, Y+2	; 0x02
    28a8:	9b 81       	ldd	r25, Y+3	; 0x03
    28aa:	fc 01       	movw	r30, r24
    28ac:	e2 0f       	add	r30, r18
    28ae:	f3 1f       	adc	r31, r19
    28b0:	80 81       	ld	r24, Z
    28b2:	88 23       	and	r24, r24
    28b4:	39 f7       	brne	.-50     	; 0x2884 <LCD_VidSendString+0x14>
	{
		LCD_VidSendChar(Copy_u8Ptr[local]);
		local++;
	}

}
    28b6:	0f 90       	pop	r0
    28b8:	0f 90       	pop	r0
    28ba:	0f 90       	pop	r0
    28bc:	cf 91       	pop	r28
    28be:	df 91       	pop	r29
    28c0:	08 95       	ret

000028c2 <LCD_VidSendLocation>:

void LCD_VidSendLocation(u8 Copy_Line,u8 Copy_Char)
{
    28c2:	df 93       	push	r29
    28c4:	cf 93       	push	r28
    28c6:	00 d0       	rcall	.+0      	; 0x28c8 <LCD_VidSendLocation+0x6>
    28c8:	00 d0       	rcall	.+0      	; 0x28ca <LCD_VidSendLocation+0x8>
    28ca:	cd b7       	in	r28, 0x3d	; 61
    28cc:	de b7       	in	r29, 0x3e	; 62
    28ce:	89 83       	std	Y+1, r24	; 0x01
    28d0:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_Line)
    28d2:	89 81       	ldd	r24, Y+1	; 0x01
    28d4:	28 2f       	mov	r18, r24
    28d6:	30 e0       	ldi	r19, 0x00	; 0
    28d8:	3c 83       	std	Y+4, r19	; 0x04
    28da:	2b 83       	std	Y+3, r18	; 0x03
    28dc:	8b 81       	ldd	r24, Y+3	; 0x03
    28de:	9c 81       	ldd	r25, Y+4	; 0x04
    28e0:	00 97       	sbiw	r24, 0x00	; 0
    28e2:	31 f0       	breq	.+12     	; 0x28f0 <LCD_VidSendLocation+0x2e>
    28e4:	2b 81       	ldd	r18, Y+3	; 0x03
    28e6:	3c 81       	ldd	r19, Y+4	; 0x04
    28e8:	21 30       	cpi	r18, 0x01	; 1
    28ea:	31 05       	cpc	r19, r1
    28ec:	31 f0       	breq	.+12     	; 0x28fa <LCD_VidSendLocation+0x38>
    28ee:	09 c0       	rjmp	.+18     	; 0x2902 <LCD_VidSendLocation+0x40>
	{
		case LINE_1:LCD_VidSendCMD(0x80+Copy_Char);break;
    28f0:	8a 81       	ldd	r24, Y+2	; 0x02
    28f2:	80 58       	subi	r24, 0x80	; 128
    28f4:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <LCD_VidSendCMD>
    28f8:	04 c0       	rjmp	.+8      	; 0x2902 <LCD_VidSendLocation+0x40>
		case LINE_2:LCD_VidSendCMD(0xc0+Copy_Char); break;
    28fa:	8a 81       	ldd	r24, Y+2	; 0x02
    28fc:	80 54       	subi	r24, 0x40	; 64
    28fe:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <LCD_VidSendCMD>
	}
}
    2902:	0f 90       	pop	r0
    2904:	0f 90       	pop	r0
    2906:	0f 90       	pop	r0
    2908:	0f 90       	pop	r0
    290a:	cf 91       	pop	r28
    290c:	df 91       	pop	r29
    290e:	08 95       	ret

00002910 <LCD_VidSpecialChar>:

void LCD_VidSpecialChar(u8 Copy_GCRAMLoc,u8 *Copy_Char)
{
    2910:	df 93       	push	r29
    2912:	cf 93       	push	r28
    2914:	00 d0       	rcall	.+0      	; 0x2916 <LCD_VidSpecialChar+0x6>
    2916:	00 d0       	rcall	.+0      	; 0x2918 <LCD_VidSpecialChar+0x8>
    2918:	cd b7       	in	r28, 0x3d	; 61
    291a:	de b7       	in	r29, 0x3e	; 62
    291c:	8a 83       	std	Y+2, r24	; 0x02
    291e:	7c 83       	std	Y+4, r23	; 0x04
    2920:	6b 83       	std	Y+3, r22	; 0x03
	LCD_VidSendCMD(0x40+8*(Copy_GCRAMLoc));
    2922:	8a 81       	ldd	r24, Y+2	; 0x02
    2924:	88 2f       	mov	r24, r24
    2926:	90 e0       	ldi	r25, 0x00	; 0
    2928:	08 96       	adiw	r24, 0x08	; 8
    292a:	88 0f       	add	r24, r24
    292c:	99 1f       	adc	r25, r25
    292e:	88 0f       	add	r24, r24
    2930:	99 1f       	adc	r25, r25
    2932:	88 0f       	add	r24, r24
    2934:	99 1f       	adc	r25, r25
    2936:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <LCD_VidSendCMD>
	for(u8 count=0;count<8;count++)
    293a:	19 82       	std	Y+1, r1	; 0x01
    293c:	0e c0       	rjmp	.+28     	; 0x295a <LCD_VidSpecialChar+0x4a>
	{
		LCD_VidSendChar(Copy_Char[count]);
    293e:	89 81       	ldd	r24, Y+1	; 0x01
    2940:	28 2f       	mov	r18, r24
    2942:	30 e0       	ldi	r19, 0x00	; 0
    2944:	8b 81       	ldd	r24, Y+3	; 0x03
    2946:	9c 81       	ldd	r25, Y+4	; 0x04
    2948:	fc 01       	movw	r30, r24
    294a:	e2 0f       	add	r30, r18
    294c:	f3 1f       	adc	r31, r19
    294e:	80 81       	ld	r24, Z
    2950:	0e 94 a3 11 	call	0x2346	; 0x2346 <LCD_VidSendChar>
}

void LCD_VidSpecialChar(u8 Copy_GCRAMLoc,u8 *Copy_Char)
{
	LCD_VidSendCMD(0x40+8*(Copy_GCRAMLoc));
	for(u8 count=0;count<8;count++)
    2954:	89 81       	ldd	r24, Y+1	; 0x01
    2956:	8f 5f       	subi	r24, 0xFF	; 255
    2958:	89 83       	std	Y+1, r24	; 0x01
    295a:	89 81       	ldd	r24, Y+1	; 0x01
    295c:	88 30       	cpi	r24, 0x08	; 8
    295e:	78 f3       	brcs	.-34     	; 0x293e <LCD_VidSpecialChar+0x2e>
	{
		LCD_VidSendChar(Copy_Char[count]);
	}
}
    2960:	0f 90       	pop	r0
    2962:	0f 90       	pop	r0
    2964:	0f 90       	pop	r0
    2966:	0f 90       	pop	r0
    2968:	cf 91       	pop	r28
    296a:	df 91       	pop	r29
    296c:	08 95       	ret

0000296e <LCD_VidClear>:

void LCD_VidClear()
{
    296e:	df 93       	push	r29
    2970:	cf 93       	push	r28
    2972:	cd b7       	in	r28, 0x3d	; 61
    2974:	de b7       	in	r29, 0x3e	; 62
    2976:	2e 97       	sbiw	r28, 0x0e	; 14
    2978:	0f b6       	in	r0, 0x3f	; 63
    297a:	f8 94       	cli
    297c:	de bf       	out	0x3e, r29	; 62
    297e:	0f be       	out	0x3f, r0	; 63
    2980:	cd bf       	out	0x3d, r28	; 61
	LCD_VidSendCMD(LCD_CLEAR);
    2982:	81 e0       	ldi	r24, 0x01	; 1
    2984:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <LCD_VidSendCMD>
    2988:	80 e0       	ldi	r24, 0x00	; 0
    298a:	90 e0       	ldi	r25, 0x00	; 0
    298c:	a0 e0       	ldi	r26, 0x00	; 0
    298e:	b0 e4       	ldi	r27, 0x40	; 64
    2990:	8b 87       	std	Y+11, r24	; 0x0b
    2992:	9c 87       	std	Y+12, r25	; 0x0c
    2994:	ad 87       	std	Y+13, r26	; 0x0d
    2996:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2998:	6b 85       	ldd	r22, Y+11	; 0x0b
    299a:	7c 85       	ldd	r23, Y+12	; 0x0c
    299c:	8d 85       	ldd	r24, Y+13	; 0x0d
    299e:	9e 85       	ldd	r25, Y+14	; 0x0e
    29a0:	20 e0       	ldi	r18, 0x00	; 0
    29a2:	30 e0       	ldi	r19, 0x00	; 0
    29a4:	4a ef       	ldi	r20, 0xFA	; 250
    29a6:	54 e4       	ldi	r21, 0x44	; 68
    29a8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29ac:	dc 01       	movw	r26, r24
    29ae:	cb 01       	movw	r24, r22
    29b0:	8f 83       	std	Y+7, r24	; 0x07
    29b2:	98 87       	std	Y+8, r25	; 0x08
    29b4:	a9 87       	std	Y+9, r26	; 0x09
    29b6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    29b8:	6f 81       	ldd	r22, Y+7	; 0x07
    29ba:	78 85       	ldd	r23, Y+8	; 0x08
    29bc:	89 85       	ldd	r24, Y+9	; 0x09
    29be:	9a 85       	ldd	r25, Y+10	; 0x0a
    29c0:	20 e0       	ldi	r18, 0x00	; 0
    29c2:	30 e0       	ldi	r19, 0x00	; 0
    29c4:	40 e8       	ldi	r20, 0x80	; 128
    29c6:	5f e3       	ldi	r21, 0x3F	; 63
    29c8:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    29cc:	88 23       	and	r24, r24
    29ce:	2c f4       	brge	.+10     	; 0x29da <LCD_VidClear+0x6c>
		__ticks = 1;
    29d0:	81 e0       	ldi	r24, 0x01	; 1
    29d2:	90 e0       	ldi	r25, 0x00	; 0
    29d4:	9e 83       	std	Y+6, r25	; 0x06
    29d6:	8d 83       	std	Y+5, r24	; 0x05
    29d8:	3f c0       	rjmp	.+126    	; 0x2a58 <LCD_VidClear+0xea>
	else if (__tmp > 65535)
    29da:	6f 81       	ldd	r22, Y+7	; 0x07
    29dc:	78 85       	ldd	r23, Y+8	; 0x08
    29de:	89 85       	ldd	r24, Y+9	; 0x09
    29e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    29e2:	20 e0       	ldi	r18, 0x00	; 0
    29e4:	3f ef       	ldi	r19, 0xFF	; 255
    29e6:	4f e7       	ldi	r20, 0x7F	; 127
    29e8:	57 e4       	ldi	r21, 0x47	; 71
    29ea:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    29ee:	18 16       	cp	r1, r24
    29f0:	4c f5       	brge	.+82     	; 0x2a44 <LCD_VidClear+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29f2:	6b 85       	ldd	r22, Y+11	; 0x0b
    29f4:	7c 85       	ldd	r23, Y+12	; 0x0c
    29f6:	8d 85       	ldd	r24, Y+13	; 0x0d
    29f8:	9e 85       	ldd	r25, Y+14	; 0x0e
    29fa:	20 e0       	ldi	r18, 0x00	; 0
    29fc:	30 e0       	ldi	r19, 0x00	; 0
    29fe:	40 e2       	ldi	r20, 0x20	; 32
    2a00:	51 e4       	ldi	r21, 0x41	; 65
    2a02:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a06:	dc 01       	movw	r26, r24
    2a08:	cb 01       	movw	r24, r22
    2a0a:	bc 01       	movw	r22, r24
    2a0c:	cd 01       	movw	r24, r26
    2a0e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a12:	dc 01       	movw	r26, r24
    2a14:	cb 01       	movw	r24, r22
    2a16:	9e 83       	std	Y+6, r25	; 0x06
    2a18:	8d 83       	std	Y+5, r24	; 0x05
    2a1a:	0f c0       	rjmp	.+30     	; 0x2a3a <LCD_VidClear+0xcc>
    2a1c:	88 ec       	ldi	r24, 0xC8	; 200
    2a1e:	90 e0       	ldi	r25, 0x00	; 0
    2a20:	9c 83       	std	Y+4, r25	; 0x04
    2a22:	8b 83       	std	Y+3, r24	; 0x03
    2a24:	8b 81       	ldd	r24, Y+3	; 0x03
    2a26:	9c 81       	ldd	r25, Y+4	; 0x04
    2a28:	01 97       	sbiw	r24, 0x01	; 1
    2a2a:	f1 f7       	brne	.-4      	; 0x2a28 <LCD_VidClear+0xba>
    2a2c:	9c 83       	std	Y+4, r25	; 0x04
    2a2e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a30:	8d 81       	ldd	r24, Y+5	; 0x05
    2a32:	9e 81       	ldd	r25, Y+6	; 0x06
    2a34:	01 97       	sbiw	r24, 0x01	; 1
    2a36:	9e 83       	std	Y+6, r25	; 0x06
    2a38:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a3a:	8d 81       	ldd	r24, Y+5	; 0x05
    2a3c:	9e 81       	ldd	r25, Y+6	; 0x06
    2a3e:	00 97       	sbiw	r24, 0x00	; 0
    2a40:	69 f7       	brne	.-38     	; 0x2a1c <LCD_VidClear+0xae>
    2a42:	14 c0       	rjmp	.+40     	; 0x2a6c <LCD_VidClear+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a44:	6f 81       	ldd	r22, Y+7	; 0x07
    2a46:	78 85       	ldd	r23, Y+8	; 0x08
    2a48:	89 85       	ldd	r24, Y+9	; 0x09
    2a4a:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a4c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a50:	dc 01       	movw	r26, r24
    2a52:	cb 01       	movw	r24, r22
    2a54:	9e 83       	std	Y+6, r25	; 0x06
    2a56:	8d 83       	std	Y+5, r24	; 0x05
    2a58:	8d 81       	ldd	r24, Y+5	; 0x05
    2a5a:	9e 81       	ldd	r25, Y+6	; 0x06
    2a5c:	9a 83       	std	Y+2, r25	; 0x02
    2a5e:	89 83       	std	Y+1, r24	; 0x01
    2a60:	89 81       	ldd	r24, Y+1	; 0x01
    2a62:	9a 81       	ldd	r25, Y+2	; 0x02
    2a64:	01 97       	sbiw	r24, 0x01	; 1
    2a66:	f1 f7       	brne	.-4      	; 0x2a64 <LCD_VidClear+0xf6>
    2a68:	9a 83       	std	Y+2, r25	; 0x02
    2a6a:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
}
    2a6c:	2e 96       	adiw	r28, 0x0e	; 14
    2a6e:	0f b6       	in	r0, 0x3f	; 63
    2a70:	f8 94       	cli
    2a72:	de bf       	out	0x3e, r29	; 62
    2a74:	0f be       	out	0x3f, r0	; 63
    2a76:	cd bf       	out	0x3d, r28	; 61
    2a78:	cf 91       	pop	r28
    2a7a:	df 91       	pop	r29
    2a7c:	08 95       	ret

00002a7e <main>:
#include "KeyPad.h"



void main()
{
    2a7e:	ef 92       	push	r14
    2a80:	ff 92       	push	r15
    2a82:	0f 93       	push	r16
    2a84:	1f 93       	push	r17
    2a86:	df 93       	push	r29
    2a88:	cf 93       	push	r28
    2a8a:	cd b7       	in	r28, 0x3d	; 61
    2a8c:	de b7       	in	r29, 0x3e	; 62
    2a8e:	60 97       	sbiw	r28, 0x10	; 16
    2a90:	0f b6       	in	r0, 0x3f	; 63
    2a92:	f8 94       	cli
    2a94:	de bf       	out	0x3e, r29	; 62
    2a96:	0f be       	out	0x3f, r0	; 63
    2a98:	cd bf       	out	0x3d, r28	; 61
	u8 flag=0;
    2a9a:	1c 86       	std	Y+12, r1	; 0x0c
	f32 NUM_1=0;
    2a9c:	80 e0       	ldi	r24, 0x00	; 0
    2a9e:	90 e0       	ldi	r25, 0x00	; 0
    2aa0:	a0 e0       	ldi	r26, 0x00	; 0
    2aa2:	b0 e0       	ldi	r27, 0x00	; 0
    2aa4:	88 87       	std	Y+8, r24	; 0x08
    2aa6:	99 87       	std	Y+9, r25	; 0x09
    2aa8:	aa 87       	std	Y+10, r26	; 0x0a
    2aaa:	bb 87       	std	Y+11, r27	; 0x0b
	f32 NUM_2=0;
    2aac:	80 e0       	ldi	r24, 0x00	; 0
    2aae:	90 e0       	ldi	r25, 0x00	; 0
    2ab0:	a0 e0       	ldi	r26, 0x00	; 0
    2ab2:	b0 e0       	ldi	r27, 0x00	; 0
    2ab4:	8c 83       	std	Y+4, r24	; 0x04
    2ab6:	9d 83       	std	Y+5, r25	; 0x05
    2ab8:	ae 83       	std	Y+6, r26	; 0x06
    2aba:	bf 83       	std	Y+7, r27	; 0x07
	u8 OPP=0;
    2abc:	1b 82       	std	Y+3, r1	; 0x03
	u8 TMP=KPD_CHEK;
    2abe:	8f ef       	ldi	r24, 0xFF	; 255
    2ac0:	8a 83       	std	Y+2, r24	; 0x02
	u8 ANS=0;
    2ac2:	19 82       	std	Y+1, r1	; 0x01




	KPD_VidInt();
    2ac4:	0e 94 cc 0d 	call	0x1b98	; 0x1b98 <KPD_VidInt>
	LCD_VidInt();
    2ac8:	0e 94 41 12 	call	0x2482	; 0x2482 <LCD_VidInt>

	while(1)
	{

		TMP=KPD_u8PressedKey();
    2acc:	0e 94 e9 0d 	call	0x1bd2	; 0x1bd2 <KPD_u8PressedKey>
    2ad0:	8a 83       	std	Y+2, r24	; 0x02
		if(TMP!=KPD_CHEK)
    2ad2:	8a 81       	ldd	r24, Y+2	; 0x02
    2ad4:	8f 3f       	cpi	r24, 0xFF	; 255
    2ad6:	09 f4       	brne	.+2      	; 0x2ada <main+0x5c>
    2ad8:	69 c1       	rjmp	.+722    	; 0x2dac <main+0x32e>
		{
			if(TMP=='c')
    2ada:	8a 81       	ldd	r24, Y+2	; 0x02
    2adc:	83 36       	cpi	r24, 0x63	; 99
    2ade:	a1 f4       	brne	.+40     	; 0x2b08 <main+0x8a>
			{
				LCD_VidClear();
    2ae0:	0e 94 b7 14 	call	0x296e	; 0x296e <LCD_VidClear>
				NUM_1=0;
    2ae4:	80 e0       	ldi	r24, 0x00	; 0
    2ae6:	90 e0       	ldi	r25, 0x00	; 0
    2ae8:	a0 e0       	ldi	r26, 0x00	; 0
    2aea:	b0 e0       	ldi	r27, 0x00	; 0
    2aec:	88 87       	std	Y+8, r24	; 0x08
    2aee:	99 87       	std	Y+9, r25	; 0x09
    2af0:	aa 87       	std	Y+10, r26	; 0x0a
    2af2:	bb 87       	std	Y+11, r27	; 0x0b
				NUM_2=0;
    2af4:	80 e0       	ldi	r24, 0x00	; 0
    2af6:	90 e0       	ldi	r25, 0x00	; 0
    2af8:	a0 e0       	ldi	r26, 0x00	; 0
    2afa:	b0 e0       	ldi	r27, 0x00	; 0
    2afc:	8c 83       	std	Y+4, r24	; 0x04
    2afe:	9d 83       	std	Y+5, r25	; 0x05
    2b00:	ae 83       	std	Y+6, r26	; 0x06
    2b02:	bf 83       	std	Y+7, r27	; 0x07

				flag=0;
    2b04:	1c 86       	std	Y+12, r1	; 0x0c
    2b06:	52 c1       	rjmp	.+676    	; 0x2dac <main+0x32e>
			}
			else if(TMP!='L' && TMP!='S' && TMP!='C' && TMP!='e' && TMP!='T' && TMP!='=')
    2b08:	8a 81       	ldd	r24, Y+2	; 0x02
    2b0a:	8c 34       	cpi	r24, 0x4C	; 76
    2b0c:	09 f4       	brne	.+2      	; 0x2b10 <main+0x92>
    2b0e:	a0 c0       	rjmp	.+320    	; 0x2c50 <main+0x1d2>
    2b10:	8a 81       	ldd	r24, Y+2	; 0x02
    2b12:	83 35       	cpi	r24, 0x53	; 83
    2b14:	09 f4       	brne	.+2      	; 0x2b18 <main+0x9a>
    2b16:	9c c0       	rjmp	.+312    	; 0x2c50 <main+0x1d2>
    2b18:	8a 81       	ldd	r24, Y+2	; 0x02
    2b1a:	83 34       	cpi	r24, 0x43	; 67
    2b1c:	09 f4       	brne	.+2      	; 0x2b20 <main+0xa2>
    2b1e:	98 c0       	rjmp	.+304    	; 0x2c50 <main+0x1d2>
    2b20:	8a 81       	ldd	r24, Y+2	; 0x02
    2b22:	85 36       	cpi	r24, 0x65	; 101
    2b24:	09 f4       	brne	.+2      	; 0x2b28 <main+0xaa>
    2b26:	94 c0       	rjmp	.+296    	; 0x2c50 <main+0x1d2>
    2b28:	8a 81       	ldd	r24, Y+2	; 0x02
    2b2a:	84 35       	cpi	r24, 0x54	; 84
    2b2c:	09 f4       	brne	.+2      	; 0x2b30 <main+0xb2>
    2b2e:	90 c0       	rjmp	.+288    	; 0x2c50 <main+0x1d2>
    2b30:	8a 81       	ldd	r24, Y+2	; 0x02
    2b32:	8d 33       	cpi	r24, 0x3D	; 61
    2b34:	09 f4       	brne	.+2      	; 0x2b38 <main+0xba>
    2b36:	8c c0       	rjmp	.+280    	; 0x2c50 <main+0x1d2>
			{
				 if(flag!=1 && TMP!='-' && TMP!='c' && TMP!='+' && TMP!='*' && TMP!='/')
    2b38:	8c 85       	ldd	r24, Y+12	; 0x0c
    2b3a:	81 30       	cpi	r24, 0x01	; 1
    2b3c:	e1 f1       	breq	.+120    	; 0x2bb6 <main+0x138>
    2b3e:	8a 81       	ldd	r24, Y+2	; 0x02
    2b40:	8d 32       	cpi	r24, 0x2D	; 45
    2b42:	c9 f1       	breq	.+114    	; 0x2bb6 <main+0x138>
    2b44:	8a 81       	ldd	r24, Y+2	; 0x02
    2b46:	83 36       	cpi	r24, 0x63	; 99
    2b48:	b1 f1       	breq	.+108    	; 0x2bb6 <main+0x138>
    2b4a:	8a 81       	ldd	r24, Y+2	; 0x02
    2b4c:	8b 32       	cpi	r24, 0x2B	; 43
    2b4e:	99 f1       	breq	.+102    	; 0x2bb6 <main+0x138>
    2b50:	8a 81       	ldd	r24, Y+2	; 0x02
    2b52:	8a 32       	cpi	r24, 0x2A	; 42
    2b54:	81 f1       	breq	.+96     	; 0x2bb6 <main+0x138>
    2b56:	8a 81       	ldd	r24, Y+2	; 0x02
    2b58:	8f 32       	cpi	r24, 0x2F	; 47
    2b5a:	69 f1       	breq	.+90     	; 0x2bb6 <main+0x138>
				{
					NUM_1=(NUM_1)*10+TMP;
    2b5c:	68 85       	ldd	r22, Y+8	; 0x08
    2b5e:	79 85       	ldd	r23, Y+9	; 0x09
    2b60:	8a 85       	ldd	r24, Y+10	; 0x0a
    2b62:	9b 85       	ldd	r25, Y+11	; 0x0b
    2b64:	20 e0       	ldi	r18, 0x00	; 0
    2b66:	30 e0       	ldi	r19, 0x00	; 0
    2b68:	40 e2       	ldi	r20, 0x20	; 32
    2b6a:	51 e4       	ldi	r21, 0x41	; 65
    2b6c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b70:	dc 01       	movw	r26, r24
    2b72:	cb 01       	movw	r24, r22
    2b74:	7c 01       	movw	r14, r24
    2b76:	8d 01       	movw	r16, r26
    2b78:	8a 81       	ldd	r24, Y+2	; 0x02
    2b7a:	88 2f       	mov	r24, r24
    2b7c:	90 e0       	ldi	r25, 0x00	; 0
    2b7e:	aa 27       	eor	r26, r26
    2b80:	97 fd       	sbrc	r25, 7
    2b82:	a0 95       	com	r26
    2b84:	ba 2f       	mov	r27, r26
    2b86:	bc 01       	movw	r22, r24
    2b88:	cd 01       	movw	r24, r26
    2b8a:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__floatsisf>
    2b8e:	9b 01       	movw	r18, r22
    2b90:	ac 01       	movw	r20, r24
    2b92:	c8 01       	movw	r24, r16
    2b94:	b7 01       	movw	r22, r14
    2b96:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__addsf3>
    2b9a:	dc 01       	movw	r26, r24
    2b9c:	cb 01       	movw	r24, r22
    2b9e:	88 87       	std	Y+8, r24	; 0x08
    2ba0:	99 87       	std	Y+9, r25	; 0x09
    2ba2:	aa 87       	std	Y+10, r26	; 0x0a
    2ba4:	bb 87       	std	Y+11, r27	; 0x0b
					LCD_VidSendNumber(TMP);
    2ba6:	8a 81       	ldd	r24, Y+2	; 0x02
    2ba8:	88 2f       	mov	r24, r24
    2baa:	90 e0       	ldi	r25, 0x00	; 0
    2bac:	0e 94 21 10 	call	0x2042	; 0x2042 <LCD_VidSendNumber>
					TMP=KPD_CHEK;
    2bb0:	8f ef       	ldi	r24, 0xFF	; 255
    2bb2:	8a 83       	std	Y+2, r24	; 0x02
    2bb4:	fb c0       	rjmp	.+502    	; 0x2dac <main+0x32e>
				}
				else if(TMP!='c' &&( TMP=='-' || TMP=='c' || TMP=='+' || TMP=='*' || TMP=='/'))
    2bb6:	8a 81       	ldd	r24, Y+2	; 0x02
    2bb8:	83 36       	cpi	r24, 0x63	; 99
    2bba:	c9 f0       	breq	.+50     	; 0x2bee <main+0x170>
    2bbc:	8a 81       	ldd	r24, Y+2	; 0x02
    2bbe:	8d 32       	cpi	r24, 0x2D	; 45
    2bc0:	61 f0       	breq	.+24     	; 0x2bda <main+0x15c>
    2bc2:	8a 81       	ldd	r24, Y+2	; 0x02
    2bc4:	83 36       	cpi	r24, 0x63	; 99
    2bc6:	49 f0       	breq	.+18     	; 0x2bda <main+0x15c>
    2bc8:	8a 81       	ldd	r24, Y+2	; 0x02
    2bca:	8b 32       	cpi	r24, 0x2B	; 43
    2bcc:	31 f0       	breq	.+12     	; 0x2bda <main+0x15c>
    2bce:	8a 81       	ldd	r24, Y+2	; 0x02
    2bd0:	8a 32       	cpi	r24, 0x2A	; 42
    2bd2:	19 f0       	breq	.+6      	; 0x2bda <main+0x15c>
    2bd4:	8a 81       	ldd	r24, Y+2	; 0x02
    2bd6:	8f 32       	cpi	r24, 0x2F	; 47
    2bd8:	51 f4       	brne	.+20     	; 0x2bee <main+0x170>
				{
					OPP=TMP;
    2bda:	8a 81       	ldd	r24, Y+2	; 0x02
    2bdc:	8b 83       	std	Y+3, r24	; 0x03
					LCD_VidSendChar(OPP);
    2bde:	8b 81       	ldd	r24, Y+3	; 0x03
    2be0:	0e 94 a3 11 	call	0x2346	; 0x2346 <LCD_VidSendChar>
					TMP=KPD_CHEK;
    2be4:	8f ef       	ldi	r24, 0xFF	; 255
    2be6:	8a 83       	std	Y+2, r24	; 0x02
					flag=1;
    2be8:	81 e0       	ldi	r24, 0x01	; 1
    2bea:	8c 87       	std	Y+12, r24	; 0x0c
    2bec:	df c0       	rjmp	.+446    	; 0x2dac <main+0x32e>
				}
				else if(TMP!='=')
    2bee:	8a 81       	ldd	r24, Y+2	; 0x02
    2bf0:	8d 33       	cpi	r24, 0x3D	; 61
    2bf2:	09 f4       	brne	.+2      	; 0x2bf6 <main+0x178>
    2bf4:	db c0       	rjmp	.+438    	; 0x2dac <main+0x32e>
				{
					NUM_2=(NUM_2)*10+TMP;
    2bf6:	6c 81       	ldd	r22, Y+4	; 0x04
    2bf8:	7d 81       	ldd	r23, Y+5	; 0x05
    2bfa:	8e 81       	ldd	r24, Y+6	; 0x06
    2bfc:	9f 81       	ldd	r25, Y+7	; 0x07
    2bfe:	20 e0       	ldi	r18, 0x00	; 0
    2c00:	30 e0       	ldi	r19, 0x00	; 0
    2c02:	40 e2       	ldi	r20, 0x20	; 32
    2c04:	51 e4       	ldi	r21, 0x41	; 65
    2c06:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c0a:	dc 01       	movw	r26, r24
    2c0c:	cb 01       	movw	r24, r22
    2c0e:	7c 01       	movw	r14, r24
    2c10:	8d 01       	movw	r16, r26
    2c12:	8a 81       	ldd	r24, Y+2	; 0x02
    2c14:	88 2f       	mov	r24, r24
    2c16:	90 e0       	ldi	r25, 0x00	; 0
    2c18:	aa 27       	eor	r26, r26
    2c1a:	97 fd       	sbrc	r25, 7
    2c1c:	a0 95       	com	r26
    2c1e:	ba 2f       	mov	r27, r26
    2c20:	bc 01       	movw	r22, r24
    2c22:	cd 01       	movw	r24, r26
    2c24:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__floatsisf>
    2c28:	9b 01       	movw	r18, r22
    2c2a:	ac 01       	movw	r20, r24
    2c2c:	c8 01       	movw	r24, r16
    2c2e:	b7 01       	movw	r22, r14
    2c30:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__addsf3>
    2c34:	dc 01       	movw	r26, r24
    2c36:	cb 01       	movw	r24, r22
    2c38:	8c 83       	std	Y+4, r24	; 0x04
    2c3a:	9d 83       	std	Y+5, r25	; 0x05
    2c3c:	ae 83       	std	Y+6, r26	; 0x06
    2c3e:	bf 83       	std	Y+7, r27	; 0x07
					LCD_VidSendNumber(TMP);
    2c40:	8a 81       	ldd	r24, Y+2	; 0x02
    2c42:	88 2f       	mov	r24, r24
    2c44:	90 e0       	ldi	r25, 0x00	; 0
    2c46:	0e 94 21 10 	call	0x2042	; 0x2042 <LCD_VidSendNumber>
					TMP=KPD_CHEK;
    2c4a:	8f ef       	ldi	r24, 0xFF	; 255
    2c4c:	8a 83       	std	Y+2, r24	; 0x02
    2c4e:	ae c0       	rjmp	.+348    	; 0x2dac <main+0x32e>
				}
			}

			else if(TMP=='L' || TMP=='S' || TMP=='C' || TMP=='e' || TMP=='T')
    2c50:	8a 81       	ldd	r24, Y+2	; 0x02
    2c52:	8c 34       	cpi	r24, 0x4C	; 76
    2c54:	69 f0       	breq	.+26     	; 0x2c70 <main+0x1f2>
    2c56:	8a 81       	ldd	r24, Y+2	; 0x02
    2c58:	83 35       	cpi	r24, 0x53	; 83
    2c5a:	51 f0       	breq	.+20     	; 0x2c70 <main+0x1f2>
    2c5c:	8a 81       	ldd	r24, Y+2	; 0x02
    2c5e:	83 34       	cpi	r24, 0x43	; 67
    2c60:	39 f0       	breq	.+14     	; 0x2c70 <main+0x1f2>
    2c62:	8a 81       	ldd	r24, Y+2	; 0x02
    2c64:	85 36       	cpi	r24, 0x65	; 101
    2c66:	21 f0       	breq	.+8      	; 0x2c70 <main+0x1f2>
    2c68:	8a 81       	ldd	r24, Y+2	; 0x02
    2c6a:	84 35       	cpi	r24, 0x54	; 84
    2c6c:	09 f0       	breq	.+2      	; 0x2c70 <main+0x1f2>
    2c6e:	93 c0       	rjmp	.+294    	; 0x2d96 <main+0x318>
			{
				switch(TMP)
    2c70:	8a 81       	ldd	r24, Y+2	; 0x02
    2c72:	28 2f       	mov	r18, r24
    2c74:	30 e0       	ldi	r19, 0x00	; 0
    2c76:	38 8b       	std	Y+16, r19	; 0x10
    2c78:	2f 87       	std	Y+15, r18	; 0x0f
    2c7a:	8f 85       	ldd	r24, Y+15	; 0x0f
    2c7c:	98 89       	ldd	r25, Y+16	; 0x10
    2c7e:	83 35       	cpi	r24, 0x53	; 83
    2c80:	91 05       	cpc	r25, r1
    2c82:	01 f1       	breq	.+64     	; 0x2cc4 <main+0x246>
    2c84:	2f 85       	ldd	r18, Y+15	; 0x0f
    2c86:	38 89       	ldd	r19, Y+16	; 0x10
    2c88:	24 35       	cpi	r18, 0x54	; 84
    2c8a:	31 05       	cpc	r19, r1
    2c8c:	5c f4       	brge	.+22     	; 0x2ca4 <main+0x226>
    2c8e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2c90:	98 89       	ldd	r25, Y+16	; 0x10
    2c92:	83 34       	cpi	r24, 0x43	; 67
    2c94:	91 05       	cpc	r25, r1
    2c96:	d9 f0       	breq	.+54     	; 0x2cce <main+0x250>
    2c98:	2f 85       	ldd	r18, Y+15	; 0x0f
    2c9a:	38 89       	ldd	r19, Y+16	; 0x10
    2c9c:	2c 34       	cpi	r18, 0x4C	; 76
    2c9e:	31 05       	cpc	r19, r1
    2ca0:	61 f0       	breq	.+24     	; 0x2cba <main+0x23c>
    2ca2:	23 c0       	rjmp	.+70     	; 0x2cea <main+0x26c>
    2ca4:	8f 85       	ldd	r24, Y+15	; 0x0f
    2ca6:	98 89       	ldd	r25, Y+16	; 0x10
    2ca8:	84 35       	cpi	r24, 0x54	; 84
    2caa:	91 05       	cpc	r25, r1
    2cac:	d1 f0       	breq	.+52     	; 0x2ce2 <main+0x264>
    2cae:	2f 85       	ldd	r18, Y+15	; 0x0f
    2cb0:	38 89       	ldd	r19, Y+16	; 0x10
    2cb2:	25 36       	cpi	r18, 0x65	; 101
    2cb4:	31 05       	cpc	r19, r1
    2cb6:	81 f0       	breq	.+32     	; 0x2cd8 <main+0x25a>
    2cb8:	18 c0       	rjmp	.+48     	; 0x2cea <main+0x26c>
				{
				case 'L':
					LCD_VidSendString("ln(");
    2cba:	80 e6       	ldi	r24, 0x60	; 96
    2cbc:	90 e0       	ldi	r25, 0x00	; 0
    2cbe:	0e 94 38 14 	call	0x2870	; 0x2870 <LCD_VidSendString>
    2cc2:	13 c0       	rjmp	.+38     	; 0x2cea <main+0x26c>
					break;
				case 'S':
					LCD_VidSendString("sin(");
    2cc4:	84 e6       	ldi	r24, 0x64	; 100
    2cc6:	90 e0       	ldi	r25, 0x00	; 0
    2cc8:	0e 94 38 14 	call	0x2870	; 0x2870 <LCD_VidSendString>
    2ccc:	0e c0       	rjmp	.+28     	; 0x2cea <main+0x26c>
					break;
				case 'C':
					LCD_VidSendString("cos(");
    2cce:	89 e6       	ldi	r24, 0x69	; 105
    2cd0:	90 e0       	ldi	r25, 0x00	; 0
    2cd2:	0e 94 38 14 	call	0x2870	; 0x2870 <LCD_VidSendString>
    2cd6:	09 c0       	rjmp	.+18     	; 0x2cea <main+0x26c>
					break;
				case 'e':
					LCD_VidSendString("e(");
    2cd8:	8e e6       	ldi	r24, 0x6E	; 110
    2cda:	90 e0       	ldi	r25, 0x00	; 0
    2cdc:	0e 94 38 14 	call	0x2870	; 0x2870 <LCD_VidSendString>
    2ce0:	04 c0       	rjmp	.+8      	; 0x2cea <main+0x26c>
					break;
				case 'T':
					LCD_VidSendString("tan(");
    2ce2:	81 e7       	ldi	r24, 0x71	; 113
    2ce4:	90 e0       	ldi	r25, 0x00	; 0
    2ce6:	0e 94 38 14 	call	0x2870	; 0x2870 <LCD_VidSendString>
					break;
				}

				OPP=TMP;
    2cea:	8a 81       	ldd	r24, Y+2	; 0x02
    2cec:	8b 83       	std	Y+3, r24	; 0x03
				while(1)
				{
					TMP=KPD_u8PressedKey();
    2cee:	0e 94 e9 0d 	call	0x1bd2	; 0x1bd2 <KPD_u8PressedKey>
    2cf2:	8a 83       	std	Y+2, r24	; 0x02
					if(TMP!=KPD_CHEK)
    2cf4:	8a 81       	ldd	r24, Y+2	; 0x02
    2cf6:	8f 3f       	cpi	r24, 0xFF	; 255
    2cf8:	09 f4       	brne	.+2      	; 0x2cfc <main+0x27e>
    2cfa:	3e c0       	rjmp	.+124    	; 0x2d78 <main+0x2fa>
					{
						if(TMP!='-' && TMP!='c' && TMP!='+' && TMP!='*' && TMP!='/' && TMP!='=')
    2cfc:	8a 81       	ldd	r24, Y+2	; 0x02
    2cfe:	8d 32       	cpi	r24, 0x2D	; 45
    2d00:	d9 f1       	breq	.+118    	; 0x2d78 <main+0x2fa>
    2d02:	8a 81       	ldd	r24, Y+2	; 0x02
    2d04:	83 36       	cpi	r24, 0x63	; 99
    2d06:	c1 f1       	breq	.+112    	; 0x2d78 <main+0x2fa>
    2d08:	8a 81       	ldd	r24, Y+2	; 0x02
    2d0a:	8b 32       	cpi	r24, 0x2B	; 43
    2d0c:	a9 f1       	breq	.+106    	; 0x2d78 <main+0x2fa>
    2d0e:	8a 81       	ldd	r24, Y+2	; 0x02
    2d10:	8a 32       	cpi	r24, 0x2A	; 42
    2d12:	91 f1       	breq	.+100    	; 0x2d78 <main+0x2fa>
    2d14:	8a 81       	ldd	r24, Y+2	; 0x02
    2d16:	8f 32       	cpi	r24, 0x2F	; 47
    2d18:	79 f1       	breq	.+94     	; 0x2d78 <main+0x2fa>
    2d1a:	8a 81       	ldd	r24, Y+2	; 0x02
    2d1c:	8d 33       	cpi	r24, 0x3D	; 61
    2d1e:	61 f1       	breq	.+88     	; 0x2d78 <main+0x2fa>
						{
							NUM_1=(NUM_1)*10+TMP;
    2d20:	68 85       	ldd	r22, Y+8	; 0x08
    2d22:	79 85       	ldd	r23, Y+9	; 0x09
    2d24:	8a 85       	ldd	r24, Y+10	; 0x0a
    2d26:	9b 85       	ldd	r25, Y+11	; 0x0b
    2d28:	20 e0       	ldi	r18, 0x00	; 0
    2d2a:	30 e0       	ldi	r19, 0x00	; 0
    2d2c:	40 e2       	ldi	r20, 0x20	; 32
    2d2e:	51 e4       	ldi	r21, 0x41	; 65
    2d30:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d34:	dc 01       	movw	r26, r24
    2d36:	cb 01       	movw	r24, r22
    2d38:	7c 01       	movw	r14, r24
    2d3a:	8d 01       	movw	r16, r26
    2d3c:	8a 81       	ldd	r24, Y+2	; 0x02
    2d3e:	88 2f       	mov	r24, r24
    2d40:	90 e0       	ldi	r25, 0x00	; 0
    2d42:	aa 27       	eor	r26, r26
    2d44:	97 fd       	sbrc	r25, 7
    2d46:	a0 95       	com	r26
    2d48:	ba 2f       	mov	r27, r26
    2d4a:	bc 01       	movw	r22, r24
    2d4c:	cd 01       	movw	r24, r26
    2d4e:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__floatsisf>
    2d52:	9b 01       	movw	r18, r22
    2d54:	ac 01       	movw	r20, r24
    2d56:	c8 01       	movw	r24, r16
    2d58:	b7 01       	movw	r22, r14
    2d5a:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__addsf3>
    2d5e:	dc 01       	movw	r26, r24
    2d60:	cb 01       	movw	r24, r22
    2d62:	88 87       	std	Y+8, r24	; 0x08
    2d64:	99 87       	std	Y+9, r25	; 0x09
    2d66:	aa 87       	std	Y+10, r26	; 0x0a
    2d68:	bb 87       	std	Y+11, r27	; 0x0b
							LCD_VidSendNumber(TMP);
    2d6a:	8a 81       	ldd	r24, Y+2	; 0x02
    2d6c:	88 2f       	mov	r24, r24
    2d6e:	90 e0       	ldi	r25, 0x00	; 0
    2d70:	0e 94 21 10 	call	0x2042	; 0x2042 <LCD_VidSendNumber>
							TMP=KPD_CHEK;
    2d74:	8f ef       	ldi	r24, 0xFF	; 255
    2d76:	8a 83       	std	Y+2, r24	; 0x02
						}
					}
					if(TMP=='=')
    2d78:	8a 81       	ldd	r24, Y+2	; 0x02
    2d7a:	8d 33       	cpi	r24, 0x3D	; 61
    2d7c:	09 f0       	breq	.+2      	; 0x2d80 <main+0x302>
    2d7e:	b7 cf       	rjmp	.-146    	; 0x2cee <main+0x270>
					{
						ANS=TMP;
    2d80:	8a 81       	ldd	r24, Y+2	; 0x02
    2d82:	89 83       	std	Y+1, r24	; 0x01
						LCD_VidSendChar(')');
    2d84:	89 e2       	ldi	r24, 0x29	; 41
    2d86:	0e 94 a3 11 	call	0x2346	; 0x2346 <LCD_VidSendChar>
						LCD_VidSendChar(ANS);
    2d8a:	89 81       	ldd	r24, Y+1	; 0x01
    2d8c:	0e 94 a3 11 	call	0x2346	; 0x2346 <LCD_VidSendChar>
						TMP=KPD_CHEK;
    2d90:	8f ef       	ldi	r24, 0xFF	; 255
    2d92:	8a 83       	std	Y+2, r24	; 0x02
    2d94:	0b c0       	rjmp	.+22     	; 0x2dac <main+0x32e>
						break;
					}
				}
			}

			else if(TMP=='=')
    2d96:	8a 81       	ldd	r24, Y+2	; 0x02
    2d98:	8d 33       	cpi	r24, 0x3D	; 61
    2d9a:	41 f4       	brne	.+16     	; 0x2dac <main+0x32e>
			{
				ANS=TMP;
    2d9c:	8a 81       	ldd	r24, Y+2	; 0x02
    2d9e:	89 83       	std	Y+1, r24	; 0x01
				LCD_VidSendChar(ANS);
    2da0:	89 81       	ldd	r24, Y+1	; 0x01
    2da2:	0e 94 a3 11 	call	0x2346	; 0x2346 <LCD_VidSendChar>
				TMP=KPD_CHEK;
    2da6:	8f ef       	ldi	r24, 0xFF	; 255
    2da8:	8a 83       	std	Y+2, r24	; 0x02
				flag=0;
    2daa:	1c 86       	std	Y+12, r1	; 0x0c
			}
		}

		if(ANS=='=')
    2dac:	89 81       	ldd	r24, Y+1	; 0x01
    2dae:	8d 33       	cpi	r24, 0x3D	; 61
    2db0:	09 f0       	breq	.+2      	; 0x2db4 <main+0x336>
    2db2:	49 c1       	rjmp	.+658    	; 0x3046 <main+0x5c8>
			switch(OPP)
    2db4:	8b 81       	ldd	r24, Y+3	; 0x03
    2db6:	28 2f       	mov	r18, r24
    2db8:	30 e0       	ldi	r19, 0x00	; 0
    2dba:	3e 87       	std	Y+14, r19	; 0x0e
    2dbc:	2d 87       	std	Y+13, r18	; 0x0d
    2dbe:	8d 85       	ldd	r24, Y+13	; 0x0d
    2dc0:	9e 85       	ldd	r25, Y+14	; 0x0e
    2dc2:	8c 34       	cpi	r24, 0x4C	; 76
    2dc4:	91 05       	cpc	r25, r1
    2dc6:	09 f4       	brne	.+2      	; 0x2dca <main+0x34c>
    2dc8:	cc c0       	rjmp	.+408    	; 0x2f62 <main+0x4e4>
    2dca:	2d 85       	ldd	r18, Y+13	; 0x0d
    2dcc:	3e 85       	ldd	r19, Y+14	; 0x0e
    2dce:	2d 34       	cpi	r18, 0x4D	; 77
    2dd0:	31 05       	cpc	r19, r1
    2dd2:	24 f5       	brge	.+72     	; 0x2e1c <main+0x39e>
    2dd4:	8d 85       	ldd	r24, Y+13	; 0x0d
    2dd6:	9e 85       	ldd	r25, Y+14	; 0x0e
    2dd8:	8d 32       	cpi	r24, 0x2D	; 45
    2dda:	91 05       	cpc	r25, r1
    2ddc:	09 f4       	brne	.+2      	; 0x2de0 <main+0x362>
    2dde:	56 c0       	rjmp	.+172    	; 0x2e8c <main+0x40e>
    2de0:	2d 85       	ldd	r18, Y+13	; 0x0d
    2de2:	3e 85       	ldd	r19, Y+14	; 0x0e
    2de4:	2e 32       	cpi	r18, 0x2E	; 46
    2de6:	31 05       	cpc	r19, r1
    2de8:	64 f4       	brge	.+24     	; 0x2e02 <main+0x384>
    2dea:	8d 85       	ldd	r24, Y+13	; 0x0d
    2dec:	9e 85       	ldd	r25, Y+14	; 0x0e
    2dee:	8a 32       	cpi	r24, 0x2A	; 42
    2df0:	91 05       	cpc	r25, r1
    2df2:	09 f4       	brne	.+2      	; 0x2df6 <main+0x378>
    2df4:	91 c0       	rjmp	.+290    	; 0x2f18 <main+0x49a>
    2df6:	2d 85       	ldd	r18, Y+13	; 0x0d
    2df8:	3e 85       	ldd	r19, Y+14	; 0x0e
    2dfa:	2b 32       	cpi	r18, 0x2B	; 43
    2dfc:	31 05       	cpc	r19, r1
    2dfe:	09 f1       	breq	.+66     	; 0x2e42 <main+0x3c4>
    2e00:	22 c1       	rjmp	.+580    	; 0x3046 <main+0x5c8>
    2e02:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e04:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e06:	8f 32       	cpi	r24, 0x2F	; 47
    2e08:	91 05       	cpc	r25, r1
    2e0a:	09 f4       	brne	.+2      	; 0x2e0e <main+0x390>
    2e0c:	64 c0       	rjmp	.+200    	; 0x2ed6 <main+0x458>
    2e0e:	2d 85       	ldd	r18, Y+13	; 0x0d
    2e10:	3e 85       	ldd	r19, Y+14	; 0x0e
    2e12:	23 34       	cpi	r18, 0x43	; 67
    2e14:	31 05       	cpc	r19, r1
    2e16:	09 f4       	brne	.+2      	; 0x2e1a <main+0x39c>
    2e18:	d2 c0       	rjmp	.+420    	; 0x2fbe <main+0x540>
    2e1a:	15 c1       	rjmp	.+554    	; 0x3046 <main+0x5c8>
    2e1c:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e1e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e20:	84 35       	cpi	r24, 0x54	; 84
    2e22:	91 05       	cpc	r25, r1
    2e24:	09 f4       	brne	.+2      	; 0x2e28 <main+0x3aa>
    2e26:	f9 c0       	rjmp	.+498    	; 0x301a <main+0x59c>
    2e28:	2d 85       	ldd	r18, Y+13	; 0x0d
    2e2a:	3e 85       	ldd	r19, Y+14	; 0x0e
    2e2c:	25 36       	cpi	r18, 0x65	; 101
    2e2e:	31 05       	cpc	r19, r1
    2e30:	09 f4       	brne	.+2      	; 0x2e34 <main+0x3b6>
    2e32:	dc c0       	rjmp	.+440    	; 0x2fec <main+0x56e>
    2e34:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e36:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e38:	83 35       	cpi	r24, 0x53	; 83
    2e3a:	91 05       	cpc	r25, r1
    2e3c:	09 f4       	brne	.+2      	; 0x2e40 <main+0x3c2>
    2e3e:	a8 c0       	rjmp	.+336    	; 0x2f90 <main+0x512>
    2e40:	02 c1       	rjmp	.+516    	; 0x3046 <main+0x5c8>
			{
				case '+':
					LCD_VidSendNumber(NUM_1+NUM_2);
    2e42:	68 85       	ldd	r22, Y+8	; 0x08
    2e44:	79 85       	ldd	r23, Y+9	; 0x09
    2e46:	8a 85       	ldd	r24, Y+10	; 0x0a
    2e48:	9b 85       	ldd	r25, Y+11	; 0x0b
    2e4a:	2c 81       	ldd	r18, Y+4	; 0x04
    2e4c:	3d 81       	ldd	r19, Y+5	; 0x05
    2e4e:	4e 81       	ldd	r20, Y+6	; 0x06
    2e50:	5f 81       	ldd	r21, Y+7	; 0x07
    2e52:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__addsf3>
    2e56:	dc 01       	movw	r26, r24
    2e58:	cb 01       	movw	r24, r22
    2e5a:	bc 01       	movw	r22, r24
    2e5c:	cd 01       	movw	r24, r26
    2e5e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e62:	dc 01       	movw	r26, r24
    2e64:	cb 01       	movw	r24, r22
    2e66:	0e 94 21 10 	call	0x2042	; 0x2042 <LCD_VidSendNumber>
					NUM_1=0;
    2e6a:	80 e0       	ldi	r24, 0x00	; 0
    2e6c:	90 e0       	ldi	r25, 0x00	; 0
    2e6e:	a0 e0       	ldi	r26, 0x00	; 0
    2e70:	b0 e0       	ldi	r27, 0x00	; 0
    2e72:	88 87       	std	Y+8, r24	; 0x08
    2e74:	99 87       	std	Y+9, r25	; 0x09
    2e76:	aa 87       	std	Y+10, r26	; 0x0a
    2e78:	bb 87       	std	Y+11, r27	; 0x0b
					NUM_2=0;
    2e7a:	80 e0       	ldi	r24, 0x00	; 0
    2e7c:	90 e0       	ldi	r25, 0x00	; 0
    2e7e:	a0 e0       	ldi	r26, 0x00	; 0
    2e80:	b0 e0       	ldi	r27, 0x00	; 0
    2e82:	8c 83       	std	Y+4, r24	; 0x04
    2e84:	9d 83       	std	Y+5, r25	; 0x05
    2e86:	ae 83       	std	Y+6, r26	; 0x06
    2e88:	bf 83       	std	Y+7, r27	; 0x07
    2e8a:	dd c0       	rjmp	.+442    	; 0x3046 <main+0x5c8>
					break;
				case '-':
					LCD_VidSendNumber(NUM_1-NUM_2);
    2e8c:	68 85       	ldd	r22, Y+8	; 0x08
    2e8e:	79 85       	ldd	r23, Y+9	; 0x09
    2e90:	8a 85       	ldd	r24, Y+10	; 0x0a
    2e92:	9b 85       	ldd	r25, Y+11	; 0x0b
    2e94:	2c 81       	ldd	r18, Y+4	; 0x04
    2e96:	3d 81       	ldd	r19, Y+5	; 0x05
    2e98:	4e 81       	ldd	r20, Y+6	; 0x06
    2e9a:	5f 81       	ldd	r21, Y+7	; 0x07
    2e9c:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
    2ea0:	dc 01       	movw	r26, r24
    2ea2:	cb 01       	movw	r24, r22
    2ea4:	bc 01       	movw	r22, r24
    2ea6:	cd 01       	movw	r24, r26
    2ea8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2eac:	dc 01       	movw	r26, r24
    2eae:	cb 01       	movw	r24, r22
    2eb0:	0e 94 21 10 	call	0x2042	; 0x2042 <LCD_VidSendNumber>
					NUM_1=0;
    2eb4:	80 e0       	ldi	r24, 0x00	; 0
    2eb6:	90 e0       	ldi	r25, 0x00	; 0
    2eb8:	a0 e0       	ldi	r26, 0x00	; 0
    2eba:	b0 e0       	ldi	r27, 0x00	; 0
    2ebc:	88 87       	std	Y+8, r24	; 0x08
    2ebe:	99 87       	std	Y+9, r25	; 0x09
    2ec0:	aa 87       	std	Y+10, r26	; 0x0a
    2ec2:	bb 87       	std	Y+11, r27	; 0x0b
					NUM_2=0;
    2ec4:	80 e0       	ldi	r24, 0x00	; 0
    2ec6:	90 e0       	ldi	r25, 0x00	; 0
    2ec8:	a0 e0       	ldi	r26, 0x00	; 0
    2eca:	b0 e0       	ldi	r27, 0x00	; 0
    2ecc:	8c 83       	std	Y+4, r24	; 0x04
    2ece:	9d 83       	std	Y+5, r25	; 0x05
    2ed0:	ae 83       	std	Y+6, r26	; 0x06
    2ed2:	bf 83       	std	Y+7, r27	; 0x07
    2ed4:	b8 c0       	rjmp	.+368    	; 0x3046 <main+0x5c8>
					break;
				case '/':
					LCD_VidSendNumberFloat(NUM_1/NUM_2);
    2ed6:	68 85       	ldd	r22, Y+8	; 0x08
    2ed8:	79 85       	ldd	r23, Y+9	; 0x09
    2eda:	8a 85       	ldd	r24, Y+10	; 0x0a
    2edc:	9b 85       	ldd	r25, Y+11	; 0x0b
    2ede:	2c 81       	ldd	r18, Y+4	; 0x04
    2ee0:	3d 81       	ldd	r19, Y+5	; 0x05
    2ee2:	4e 81       	ldd	r20, Y+6	; 0x06
    2ee4:	5f 81       	ldd	r21, Y+7	; 0x07
    2ee6:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2eea:	dc 01       	movw	r26, r24
    2eec:	cb 01       	movw	r24, r22
    2eee:	bc 01       	movw	r22, r24
    2ef0:	cd 01       	movw	r24, r26
    2ef2:	0e 94 8e 10 	call	0x211c	; 0x211c <LCD_VidSendNumberFloat>
					NUM_1=0;
    2ef6:	80 e0       	ldi	r24, 0x00	; 0
    2ef8:	90 e0       	ldi	r25, 0x00	; 0
    2efa:	a0 e0       	ldi	r26, 0x00	; 0
    2efc:	b0 e0       	ldi	r27, 0x00	; 0
    2efe:	88 87       	std	Y+8, r24	; 0x08
    2f00:	99 87       	std	Y+9, r25	; 0x09
    2f02:	aa 87       	std	Y+10, r26	; 0x0a
    2f04:	bb 87       	std	Y+11, r27	; 0x0b
					NUM_2=0;
    2f06:	80 e0       	ldi	r24, 0x00	; 0
    2f08:	90 e0       	ldi	r25, 0x00	; 0
    2f0a:	a0 e0       	ldi	r26, 0x00	; 0
    2f0c:	b0 e0       	ldi	r27, 0x00	; 0
    2f0e:	8c 83       	std	Y+4, r24	; 0x04
    2f10:	9d 83       	std	Y+5, r25	; 0x05
    2f12:	ae 83       	std	Y+6, r26	; 0x06
    2f14:	bf 83       	std	Y+7, r27	; 0x07
    2f16:	97 c0       	rjmp	.+302    	; 0x3046 <main+0x5c8>
					break;
				case '*':
					LCD_VidSendNumber(NUM_1*NUM_2);
    2f18:	68 85       	ldd	r22, Y+8	; 0x08
    2f1a:	79 85       	ldd	r23, Y+9	; 0x09
    2f1c:	8a 85       	ldd	r24, Y+10	; 0x0a
    2f1e:	9b 85       	ldd	r25, Y+11	; 0x0b
    2f20:	2c 81       	ldd	r18, Y+4	; 0x04
    2f22:	3d 81       	ldd	r19, Y+5	; 0x05
    2f24:	4e 81       	ldd	r20, Y+6	; 0x06
    2f26:	5f 81       	ldd	r21, Y+7	; 0x07
    2f28:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f2c:	dc 01       	movw	r26, r24
    2f2e:	cb 01       	movw	r24, r22
    2f30:	bc 01       	movw	r22, r24
    2f32:	cd 01       	movw	r24, r26
    2f34:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f38:	dc 01       	movw	r26, r24
    2f3a:	cb 01       	movw	r24, r22
    2f3c:	0e 94 21 10 	call	0x2042	; 0x2042 <LCD_VidSendNumber>
					NUM_1=0;
    2f40:	80 e0       	ldi	r24, 0x00	; 0
    2f42:	90 e0       	ldi	r25, 0x00	; 0
    2f44:	a0 e0       	ldi	r26, 0x00	; 0
    2f46:	b0 e0       	ldi	r27, 0x00	; 0
    2f48:	88 87       	std	Y+8, r24	; 0x08
    2f4a:	99 87       	std	Y+9, r25	; 0x09
    2f4c:	aa 87       	std	Y+10, r26	; 0x0a
    2f4e:	bb 87       	std	Y+11, r27	; 0x0b
					NUM_2=0;
    2f50:	80 e0       	ldi	r24, 0x00	; 0
    2f52:	90 e0       	ldi	r25, 0x00	; 0
    2f54:	a0 e0       	ldi	r26, 0x00	; 0
    2f56:	b0 e0       	ldi	r27, 0x00	; 0
    2f58:	8c 83       	std	Y+4, r24	; 0x04
    2f5a:	9d 83       	std	Y+5, r25	; 0x05
    2f5c:	ae 83       	std	Y+6, r26	; 0x06
    2f5e:	bf 83       	std	Y+7, r27	; 0x07
    2f60:	72 c0       	rjmp	.+228    	; 0x3046 <main+0x5c8>
					break;
				case 'L':
					LCD_VidSendNumberFloat(Ln(NUM_1));
    2f62:	88 85       	ldd	r24, Y+8	; 0x08
    2f64:	99 85       	ldd	r25, Y+9	; 0x09
    2f66:	aa 85       	ldd	r26, Y+10	; 0x0a
    2f68:	bb 85       	ldd	r27, Y+11	; 0x0b
    2f6a:	bc 01       	movw	r22, r24
    2f6c:	cd 01       	movw	r24, r26
    2f6e:	0e 94 10 08 	call	0x1020	; 0x1020 <Ln>
    2f72:	dc 01       	movw	r26, r24
    2f74:	cb 01       	movw	r24, r22
    2f76:	bc 01       	movw	r22, r24
    2f78:	cd 01       	movw	r24, r26
    2f7a:	0e 94 8e 10 	call	0x211c	; 0x211c <LCD_VidSendNumberFloat>
					NUM_1=0;
    2f7e:	80 e0       	ldi	r24, 0x00	; 0
    2f80:	90 e0       	ldi	r25, 0x00	; 0
    2f82:	a0 e0       	ldi	r26, 0x00	; 0
    2f84:	b0 e0       	ldi	r27, 0x00	; 0
    2f86:	88 87       	std	Y+8, r24	; 0x08
    2f88:	99 87       	std	Y+9, r25	; 0x09
    2f8a:	aa 87       	std	Y+10, r26	; 0x0a
    2f8c:	bb 87       	std	Y+11, r27	; 0x0b
    2f8e:	5b c0       	rjmp	.+182    	; 0x3046 <main+0x5c8>
					break;
				case 'S':
					LCD_VidSendNumberFloat(Sin(NUM_1));
    2f90:	88 85       	ldd	r24, Y+8	; 0x08
    2f92:	99 85       	ldd	r25, Y+9	; 0x09
    2f94:	aa 85       	ldd	r26, Y+10	; 0x0a
    2f96:	bb 85       	ldd	r27, Y+11	; 0x0b
    2f98:	bc 01       	movw	r22, r24
    2f9a:	cd 01       	movw	r24, r26
    2f9c:	0e 94 75 09 	call	0x12ea	; 0x12ea <Sin>
    2fa0:	dc 01       	movw	r26, r24
    2fa2:	cb 01       	movw	r24, r22
    2fa4:	bc 01       	movw	r22, r24
    2fa6:	cd 01       	movw	r24, r26
    2fa8:	0e 94 8e 10 	call	0x211c	; 0x211c <LCD_VidSendNumberFloat>
					NUM_1=0;
    2fac:	80 e0       	ldi	r24, 0x00	; 0
    2fae:	90 e0       	ldi	r25, 0x00	; 0
    2fb0:	a0 e0       	ldi	r26, 0x00	; 0
    2fb2:	b0 e0       	ldi	r27, 0x00	; 0
    2fb4:	88 87       	std	Y+8, r24	; 0x08
    2fb6:	99 87       	std	Y+9, r25	; 0x09
    2fb8:	aa 87       	std	Y+10, r26	; 0x0a
    2fba:	bb 87       	std	Y+11, r27	; 0x0b
    2fbc:	44 c0       	rjmp	.+136    	; 0x3046 <main+0x5c8>
					break;
				case 'C':
					LCD_VidSendNumberFloat(Cos(NUM_1));
    2fbe:	88 85       	ldd	r24, Y+8	; 0x08
    2fc0:	99 85       	ldd	r25, Y+9	; 0x09
    2fc2:	aa 85       	ldd	r26, Y+10	; 0x0a
    2fc4:	bb 85       	ldd	r27, Y+11	; 0x0b
    2fc6:	bc 01       	movw	r22, r24
    2fc8:	cd 01       	movw	r24, r26
    2fca:	0e 94 cc 08 	call	0x1198	; 0x1198 <Cos>
    2fce:	dc 01       	movw	r26, r24
    2fd0:	cb 01       	movw	r24, r22
    2fd2:	bc 01       	movw	r22, r24
    2fd4:	cd 01       	movw	r24, r26
    2fd6:	0e 94 8e 10 	call	0x211c	; 0x211c <LCD_VidSendNumberFloat>
					NUM_1=0;
    2fda:	80 e0       	ldi	r24, 0x00	; 0
    2fdc:	90 e0       	ldi	r25, 0x00	; 0
    2fde:	a0 e0       	ldi	r26, 0x00	; 0
    2fe0:	b0 e0       	ldi	r27, 0x00	; 0
    2fe2:	88 87       	std	Y+8, r24	; 0x08
    2fe4:	99 87       	std	Y+9, r25	; 0x09
    2fe6:	aa 87       	std	Y+10, r26	; 0x0a
    2fe8:	bb 87       	std	Y+11, r27	; 0x0b
    2fea:	2d c0       	rjmp	.+90     	; 0x3046 <main+0x5c8>
					break;
				case 'e':
					LCD_VidSendNumberFloat(Exp(NUM_1));
    2fec:	88 85       	ldd	r24, Y+8	; 0x08
    2fee:	99 85       	ldd	r25, Y+9	; 0x09
    2ff0:	aa 85       	ldd	r26, Y+10	; 0x0a
    2ff2:	bb 85       	ldd	r27, Y+11	; 0x0b
    2ff4:	bc 01       	movw	r22, r24
    2ff6:	cd 01       	movw	r24, r26
    2ff8:	0e 94 9d 07 	call	0xf3a	; 0xf3a <Exp>
    2ffc:	dc 01       	movw	r26, r24
    2ffe:	cb 01       	movw	r24, r22
    3000:	bc 01       	movw	r22, r24
    3002:	cd 01       	movw	r24, r26
    3004:	0e 94 8e 10 	call	0x211c	; 0x211c <LCD_VidSendNumberFloat>
					NUM_1=0;
    3008:	80 e0       	ldi	r24, 0x00	; 0
    300a:	90 e0       	ldi	r25, 0x00	; 0
    300c:	a0 e0       	ldi	r26, 0x00	; 0
    300e:	b0 e0       	ldi	r27, 0x00	; 0
    3010:	88 87       	std	Y+8, r24	; 0x08
    3012:	99 87       	std	Y+9, r25	; 0x09
    3014:	aa 87       	std	Y+10, r26	; 0x0a
    3016:	bb 87       	std	Y+11, r27	; 0x0b
    3018:	16 c0       	rjmp	.+44     	; 0x3046 <main+0x5c8>
					break;
				case 'T':
					LCD_VidSendNumberFloat(Tan(NUM_1));
    301a:	88 85       	ldd	r24, Y+8	; 0x08
    301c:	99 85       	ldd	r25, Y+9	; 0x09
    301e:	aa 85       	ldd	r26, Y+10	; 0x0a
    3020:	bb 85       	ldd	r27, Y+11	; 0x0b
    3022:	bc 01       	movw	r22, r24
    3024:	cd 01       	movw	r24, r26
    3026:	0e 94 1f 0a 	call	0x143e	; 0x143e <Tan>
    302a:	dc 01       	movw	r26, r24
    302c:	cb 01       	movw	r24, r22
    302e:	bc 01       	movw	r22, r24
    3030:	cd 01       	movw	r24, r26
    3032:	0e 94 8e 10 	call	0x211c	; 0x211c <LCD_VidSendNumberFloat>
					NUM_1=0;
    3036:	80 e0       	ldi	r24, 0x00	; 0
    3038:	90 e0       	ldi	r25, 0x00	; 0
    303a:	a0 e0       	ldi	r26, 0x00	; 0
    303c:	b0 e0       	ldi	r27, 0x00	; 0
    303e:	88 87       	std	Y+8, r24	; 0x08
    3040:	99 87       	std	Y+9, r25	; 0x09
    3042:	aa 87       	std	Y+10, r26	; 0x0a
    3044:	bb 87       	std	Y+11, r27	; 0x0b
					break;
			}
		ANS=KPD_CHEK;
    3046:	8f ef       	ldi	r24, 0xFF	; 255
    3048:	89 83       	std	Y+1, r24	; 0x01
    304a:	40 cd       	rjmp	.-1408   	; 0x2acc <main+0x4e>

0000304c <__udivmodhi4>:
    304c:	aa 1b       	sub	r26, r26
    304e:	bb 1b       	sub	r27, r27
    3050:	51 e1       	ldi	r21, 0x11	; 17
    3052:	07 c0       	rjmp	.+14     	; 0x3062 <__udivmodhi4_ep>

00003054 <__udivmodhi4_loop>:
    3054:	aa 1f       	adc	r26, r26
    3056:	bb 1f       	adc	r27, r27
    3058:	a6 17       	cp	r26, r22
    305a:	b7 07       	cpc	r27, r23
    305c:	10 f0       	brcs	.+4      	; 0x3062 <__udivmodhi4_ep>
    305e:	a6 1b       	sub	r26, r22
    3060:	b7 0b       	sbc	r27, r23

00003062 <__udivmodhi4_ep>:
    3062:	88 1f       	adc	r24, r24
    3064:	99 1f       	adc	r25, r25
    3066:	5a 95       	dec	r21
    3068:	a9 f7       	brne	.-22     	; 0x3054 <__udivmodhi4_loop>
    306a:	80 95       	com	r24
    306c:	90 95       	com	r25
    306e:	bc 01       	movw	r22, r24
    3070:	cd 01       	movw	r24, r26
    3072:	08 95       	ret

00003074 <__prologue_saves__>:
    3074:	2f 92       	push	r2
    3076:	3f 92       	push	r3
    3078:	4f 92       	push	r4
    307a:	5f 92       	push	r5
    307c:	6f 92       	push	r6
    307e:	7f 92       	push	r7
    3080:	8f 92       	push	r8
    3082:	9f 92       	push	r9
    3084:	af 92       	push	r10
    3086:	bf 92       	push	r11
    3088:	cf 92       	push	r12
    308a:	df 92       	push	r13
    308c:	ef 92       	push	r14
    308e:	ff 92       	push	r15
    3090:	0f 93       	push	r16
    3092:	1f 93       	push	r17
    3094:	cf 93       	push	r28
    3096:	df 93       	push	r29
    3098:	cd b7       	in	r28, 0x3d	; 61
    309a:	de b7       	in	r29, 0x3e	; 62
    309c:	ca 1b       	sub	r28, r26
    309e:	db 0b       	sbc	r29, r27
    30a0:	0f b6       	in	r0, 0x3f	; 63
    30a2:	f8 94       	cli
    30a4:	de bf       	out	0x3e, r29	; 62
    30a6:	0f be       	out	0x3f, r0	; 63
    30a8:	cd bf       	out	0x3d, r28	; 61
    30aa:	09 94       	ijmp

000030ac <__epilogue_restores__>:
    30ac:	2a 88       	ldd	r2, Y+18	; 0x12
    30ae:	39 88       	ldd	r3, Y+17	; 0x11
    30b0:	48 88       	ldd	r4, Y+16	; 0x10
    30b2:	5f 84       	ldd	r5, Y+15	; 0x0f
    30b4:	6e 84       	ldd	r6, Y+14	; 0x0e
    30b6:	7d 84       	ldd	r7, Y+13	; 0x0d
    30b8:	8c 84       	ldd	r8, Y+12	; 0x0c
    30ba:	9b 84       	ldd	r9, Y+11	; 0x0b
    30bc:	aa 84       	ldd	r10, Y+10	; 0x0a
    30be:	b9 84       	ldd	r11, Y+9	; 0x09
    30c0:	c8 84       	ldd	r12, Y+8	; 0x08
    30c2:	df 80       	ldd	r13, Y+7	; 0x07
    30c4:	ee 80       	ldd	r14, Y+6	; 0x06
    30c6:	fd 80       	ldd	r15, Y+5	; 0x05
    30c8:	0c 81       	ldd	r16, Y+4	; 0x04
    30ca:	1b 81       	ldd	r17, Y+3	; 0x03
    30cc:	aa 81       	ldd	r26, Y+2	; 0x02
    30ce:	b9 81       	ldd	r27, Y+1	; 0x01
    30d0:	ce 0f       	add	r28, r30
    30d2:	d1 1d       	adc	r29, r1
    30d4:	0f b6       	in	r0, 0x3f	; 63
    30d6:	f8 94       	cli
    30d8:	de bf       	out	0x3e, r29	; 62
    30da:	0f be       	out	0x3f, r0	; 63
    30dc:	cd bf       	out	0x3d, r28	; 61
    30de:	ed 01       	movw	r28, r26
    30e0:	08 95       	ret

000030e2 <_exit>:
    30e2:	f8 94       	cli

000030e4 <__stop_program>:
    30e4:	ff cf       	rjmp	.-2      	; 0x30e4 <__stop_program>
