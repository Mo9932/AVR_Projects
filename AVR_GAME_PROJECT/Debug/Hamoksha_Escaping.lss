
Hamoksha_Escaping.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000024ae  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000154  00800060  000024ae  00002542  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  008001b4  008001b4  00002696  2**0
                  ALLOC
  3 .stab         00001d40  00000000  00000000  00002698  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000fb5  00000000  00000000  000043d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  0000538d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001f1  00000000  00000000  0000552d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000228e  00000000  00000000  0000571e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000012ca  00000000  00000000  000079ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000010d4  00000000  00000000  00008c76  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001c0  00000000  00000000  00009d4c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002c9  00000000  00000000  00009f0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000008ea  00000000  00000000  0000a1d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000aabf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 bd 11 	jmp	0x237a	; 0x237a <__vector_10>
      2c:	0c 94 77 11 	jmp	0x22ee	; 0x22ee <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee ea       	ldi	r30, 0xAE	; 174
      68:	f4 e2       	ldi	r31, 0x24	; 36
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a4 3b       	cpi	r26, 0xB4	; 180
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a4 eb       	ldi	r26, 0xB4	; 180
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ac 3b       	cpi	r26, 0xBC	; 188
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 ff 11 	call	0x23fe	; 0x23fe <main>
      8a:	0c 94 55 12 	jmp	0x24aa	; 0x24aa <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 1e 12 	jmp	0x243c	; 0x243c <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 3a 12 	jmp	0x2474	; 0x2474 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 2a 12 	jmp	0x2454	; 0x2454 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 ca 05 	call	0xb94	; 0xb94 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 ca 05 	call	0xb94	; 0xb94 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 46 12 	jmp	0x248c	; 0x248c <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 2a 12 	jmp	0x2454	; 0x2454 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 ca 05 	call	0xb94	; 0xb94 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 ca 05 	call	0xb94	; 0xb94 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 46 12 	jmp	0x248c	; 0x248c <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 1e 12 	jmp	0x243c	; 0x243c <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 ca 05 	call	0xb94	; 0xb94 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 ca 05 	call	0xb94	; 0xb94 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 3a 12 	jmp	0x2474	; 0x2474 <__epilogue_restores__>

00000632 <__eqsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 2a 12 	jmp	0x2454	; 0x2454 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 ca 05 	call	0xb94	; 0xb94 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 ca 05 	call	0xb94	; 0xb94 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__eqsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__eqsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 42 06 	call	0xc84	; 0xc84 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__eqsf2+0x58>
     688:	81 e0       	ldi	r24, 0x01	; 1
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 46 12 	jmp	0x248c	; 0x248c <__epilogue_restores__+0x18>

00000692 <__gtsf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 2a 12 	jmp	0x2454	; 0x2454 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 ca 05 	call	0xb94	; 0xb94 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 ca 05 	call	0xb94	; 0xb94 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gtsf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gtsf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 42 06 	call	0xc84	; 0xc84 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gtsf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 46 12 	jmp	0x248c	; 0x248c <__epilogue_restores__+0x18>

000006f2 <__gesf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 2a 12 	jmp	0x2454	; 0x2454 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 ca 05 	call	0xb94	; 0xb94 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 ca 05 	call	0xb94	; 0xb94 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__gesf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__gesf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 42 06 	call	0xc84	; 0xc84 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__gesf2+0x58>
     748:	8f ef       	ldi	r24, 0xFF	; 255
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 46 12 	jmp	0x248c	; 0x248c <__epilogue_restores__+0x18>

00000752 <__ltsf2>:
     752:	a8 e1       	ldi	r26, 0x18	; 24
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 2a 12 	jmp	0x2454	; 0x2454 <__prologue_saves__+0x18>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	2d 83       	std	Y+5, r18	; 0x05
     768:	3e 83       	std	Y+6, r19	; 0x06
     76a:	4f 83       	std	Y+7, r20	; 0x07
     76c:	58 87       	std	Y+8, r21	; 0x08
     76e:	89 e0       	ldi	r24, 0x09	; 9
     770:	e8 2e       	mov	r14, r24
     772:	f1 2c       	mov	r15, r1
     774:	ec 0e       	add	r14, r28
     776:	fd 1e       	adc	r15, r29
     778:	ce 01       	movw	r24, r28
     77a:	01 96       	adiw	r24, 0x01	; 1
     77c:	b7 01       	movw	r22, r14
     77e:	0e 94 ca 05 	call	0xb94	; 0xb94 <__unpack_f>
     782:	8e 01       	movw	r16, r28
     784:	0f 5e       	subi	r16, 0xEF	; 239
     786:	1f 4f       	sbci	r17, 0xFF	; 255
     788:	ce 01       	movw	r24, r28
     78a:	05 96       	adiw	r24, 0x05	; 5
     78c:	b8 01       	movw	r22, r16
     78e:	0e 94 ca 05 	call	0xb94	; 0xb94 <__unpack_f>
     792:	89 85       	ldd	r24, Y+9	; 0x09
     794:	82 30       	cpi	r24, 0x02	; 2
     796:	40 f0       	brcs	.+16     	; 0x7a8 <__ltsf2+0x56>
     798:	89 89       	ldd	r24, Y+17	; 0x11
     79a:	82 30       	cpi	r24, 0x02	; 2
     79c:	28 f0       	brcs	.+10     	; 0x7a8 <__ltsf2+0x56>
     79e:	c7 01       	movw	r24, r14
     7a0:	b8 01       	movw	r22, r16
     7a2:	0e 94 42 06 	call	0xc84	; 0xc84 <__fpcmp_parts_f>
     7a6:	01 c0       	rjmp	.+2      	; 0x7aa <__ltsf2+0x58>
     7a8:	81 e0       	ldi	r24, 0x01	; 1
     7aa:	68 96       	adiw	r28, 0x18	; 24
     7ac:	e6 e0       	ldi	r30, 0x06	; 6
     7ae:	0c 94 46 12 	jmp	0x248c	; 0x248c <__epilogue_restores__+0x18>

000007b2 <__fixsfsi>:
     7b2:	ac e0       	ldi	r26, 0x0C	; 12
     7b4:	b0 e0       	ldi	r27, 0x00	; 0
     7b6:	ef ed       	ldi	r30, 0xDF	; 223
     7b8:	f3 e0       	ldi	r31, 0x03	; 3
     7ba:	0c 94 2e 12 	jmp	0x245c	; 0x245c <__prologue_saves__+0x20>
     7be:	69 83       	std	Y+1, r22	; 0x01
     7c0:	7a 83       	std	Y+2, r23	; 0x02
     7c2:	8b 83       	std	Y+3, r24	; 0x03
     7c4:	9c 83       	std	Y+4, r25	; 0x04
     7c6:	ce 01       	movw	r24, r28
     7c8:	01 96       	adiw	r24, 0x01	; 1
     7ca:	be 01       	movw	r22, r28
     7cc:	6b 5f       	subi	r22, 0xFB	; 251
     7ce:	7f 4f       	sbci	r23, 0xFF	; 255
     7d0:	0e 94 ca 05 	call	0xb94	; 0xb94 <__unpack_f>
     7d4:	8d 81       	ldd	r24, Y+5	; 0x05
     7d6:	82 30       	cpi	r24, 0x02	; 2
     7d8:	61 f1       	breq	.+88     	; 0x832 <__fixsfsi+0x80>
     7da:	82 30       	cpi	r24, 0x02	; 2
     7dc:	50 f1       	brcs	.+84     	; 0x832 <__fixsfsi+0x80>
     7de:	84 30       	cpi	r24, 0x04	; 4
     7e0:	21 f4       	brne	.+8      	; 0x7ea <__fixsfsi+0x38>
     7e2:	8e 81       	ldd	r24, Y+6	; 0x06
     7e4:	88 23       	and	r24, r24
     7e6:	51 f1       	breq	.+84     	; 0x83c <__fixsfsi+0x8a>
     7e8:	2e c0       	rjmp	.+92     	; 0x846 <__fixsfsi+0x94>
     7ea:	2f 81       	ldd	r18, Y+7	; 0x07
     7ec:	38 85       	ldd	r19, Y+8	; 0x08
     7ee:	37 fd       	sbrc	r19, 7
     7f0:	20 c0       	rjmp	.+64     	; 0x832 <__fixsfsi+0x80>
     7f2:	6e 81       	ldd	r22, Y+6	; 0x06
     7f4:	2f 31       	cpi	r18, 0x1F	; 31
     7f6:	31 05       	cpc	r19, r1
     7f8:	1c f0       	brlt	.+6      	; 0x800 <__fixsfsi+0x4e>
     7fa:	66 23       	and	r22, r22
     7fc:	f9 f0       	breq	.+62     	; 0x83c <__fixsfsi+0x8a>
     7fe:	23 c0       	rjmp	.+70     	; 0x846 <__fixsfsi+0x94>
     800:	8e e1       	ldi	r24, 0x1E	; 30
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	82 1b       	sub	r24, r18
     806:	93 0b       	sbc	r25, r19
     808:	29 85       	ldd	r18, Y+9	; 0x09
     80a:	3a 85       	ldd	r19, Y+10	; 0x0a
     80c:	4b 85       	ldd	r20, Y+11	; 0x0b
     80e:	5c 85       	ldd	r21, Y+12	; 0x0c
     810:	04 c0       	rjmp	.+8      	; 0x81a <__fixsfsi+0x68>
     812:	56 95       	lsr	r21
     814:	47 95       	ror	r20
     816:	37 95       	ror	r19
     818:	27 95       	ror	r18
     81a:	8a 95       	dec	r24
     81c:	d2 f7       	brpl	.-12     	; 0x812 <__fixsfsi+0x60>
     81e:	66 23       	and	r22, r22
     820:	b1 f0       	breq	.+44     	; 0x84e <__fixsfsi+0x9c>
     822:	50 95       	com	r21
     824:	40 95       	com	r20
     826:	30 95       	com	r19
     828:	21 95       	neg	r18
     82a:	3f 4f       	sbci	r19, 0xFF	; 255
     82c:	4f 4f       	sbci	r20, 0xFF	; 255
     82e:	5f 4f       	sbci	r21, 0xFF	; 255
     830:	0e c0       	rjmp	.+28     	; 0x84e <__fixsfsi+0x9c>
     832:	20 e0       	ldi	r18, 0x00	; 0
     834:	30 e0       	ldi	r19, 0x00	; 0
     836:	40 e0       	ldi	r20, 0x00	; 0
     838:	50 e0       	ldi	r21, 0x00	; 0
     83a:	09 c0       	rjmp	.+18     	; 0x84e <__fixsfsi+0x9c>
     83c:	2f ef       	ldi	r18, 0xFF	; 255
     83e:	3f ef       	ldi	r19, 0xFF	; 255
     840:	4f ef       	ldi	r20, 0xFF	; 255
     842:	5f e7       	ldi	r21, 0x7F	; 127
     844:	04 c0       	rjmp	.+8      	; 0x84e <__fixsfsi+0x9c>
     846:	20 e0       	ldi	r18, 0x00	; 0
     848:	30 e0       	ldi	r19, 0x00	; 0
     84a:	40 e0       	ldi	r20, 0x00	; 0
     84c:	50 e8       	ldi	r21, 0x80	; 128
     84e:	b9 01       	movw	r22, r18
     850:	ca 01       	movw	r24, r20
     852:	2c 96       	adiw	r28, 0x0c	; 12
     854:	e2 e0       	ldi	r30, 0x02	; 2
     856:	0c 94 4a 12 	jmp	0x2494	; 0x2494 <__epilogue_restores__+0x20>

0000085a <__floatunsisf>:
     85a:	a8 e0       	ldi	r26, 0x08	; 8
     85c:	b0 e0       	ldi	r27, 0x00	; 0
     85e:	e3 e3       	ldi	r30, 0x33	; 51
     860:	f4 e0       	ldi	r31, 0x04	; 4
     862:	0c 94 26 12 	jmp	0x244c	; 0x244c <__prologue_saves__+0x10>
     866:	7b 01       	movw	r14, r22
     868:	8c 01       	movw	r16, r24
     86a:	61 15       	cp	r22, r1
     86c:	71 05       	cpc	r23, r1
     86e:	81 05       	cpc	r24, r1
     870:	91 05       	cpc	r25, r1
     872:	19 f4       	brne	.+6      	; 0x87a <__stack+0x1b>
     874:	82 e0       	ldi	r24, 0x02	; 2
     876:	89 83       	std	Y+1, r24	; 0x01
     878:	60 c0       	rjmp	.+192    	; 0x93a <__stack+0xdb>
     87a:	83 e0       	ldi	r24, 0x03	; 3
     87c:	89 83       	std	Y+1, r24	; 0x01
     87e:	8e e1       	ldi	r24, 0x1E	; 30
     880:	c8 2e       	mov	r12, r24
     882:	d1 2c       	mov	r13, r1
     884:	dc 82       	std	Y+4, r13	; 0x04
     886:	cb 82       	std	Y+3, r12	; 0x03
     888:	ed 82       	std	Y+5, r14	; 0x05
     88a:	fe 82       	std	Y+6, r15	; 0x06
     88c:	0f 83       	std	Y+7, r16	; 0x07
     88e:	18 87       	std	Y+8, r17	; 0x08
     890:	c8 01       	movw	r24, r16
     892:	b7 01       	movw	r22, r14
     894:	0e 94 a6 04 	call	0x94c	; 0x94c <__clzsi2>
     898:	fc 01       	movw	r30, r24
     89a:	31 97       	sbiw	r30, 0x01	; 1
     89c:	f7 ff       	sbrs	r31, 7
     89e:	3b c0       	rjmp	.+118    	; 0x916 <__stack+0xb7>
     8a0:	22 27       	eor	r18, r18
     8a2:	33 27       	eor	r19, r19
     8a4:	2e 1b       	sub	r18, r30
     8a6:	3f 0b       	sbc	r19, r31
     8a8:	57 01       	movw	r10, r14
     8aa:	68 01       	movw	r12, r16
     8ac:	02 2e       	mov	r0, r18
     8ae:	04 c0       	rjmp	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	d6 94       	lsr	r13
     8b2:	c7 94       	ror	r12
     8b4:	b7 94       	ror	r11
     8b6:	a7 94       	ror	r10
     8b8:	0a 94       	dec	r0
     8ba:	d2 f7       	brpl	.-12     	; 0x8b0 <__stack+0x51>
     8bc:	40 e0       	ldi	r20, 0x00	; 0
     8be:	50 e0       	ldi	r21, 0x00	; 0
     8c0:	60 e0       	ldi	r22, 0x00	; 0
     8c2:	70 e0       	ldi	r23, 0x00	; 0
     8c4:	81 e0       	ldi	r24, 0x01	; 1
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	a0 e0       	ldi	r26, 0x00	; 0
     8ca:	b0 e0       	ldi	r27, 0x00	; 0
     8cc:	04 c0       	rjmp	.+8      	; 0x8d6 <__stack+0x77>
     8ce:	88 0f       	add	r24, r24
     8d0:	99 1f       	adc	r25, r25
     8d2:	aa 1f       	adc	r26, r26
     8d4:	bb 1f       	adc	r27, r27
     8d6:	2a 95       	dec	r18
     8d8:	d2 f7       	brpl	.-12     	; 0x8ce <__stack+0x6f>
     8da:	01 97       	sbiw	r24, 0x01	; 1
     8dc:	a1 09       	sbc	r26, r1
     8de:	b1 09       	sbc	r27, r1
     8e0:	8e 21       	and	r24, r14
     8e2:	9f 21       	and	r25, r15
     8e4:	a0 23       	and	r26, r16
     8e6:	b1 23       	and	r27, r17
     8e8:	00 97       	sbiw	r24, 0x00	; 0
     8ea:	a1 05       	cpc	r26, r1
     8ec:	b1 05       	cpc	r27, r1
     8ee:	21 f0       	breq	.+8      	; 0x8f8 <__stack+0x99>
     8f0:	41 e0       	ldi	r20, 0x01	; 1
     8f2:	50 e0       	ldi	r21, 0x00	; 0
     8f4:	60 e0       	ldi	r22, 0x00	; 0
     8f6:	70 e0       	ldi	r23, 0x00	; 0
     8f8:	4a 29       	or	r20, r10
     8fa:	5b 29       	or	r21, r11
     8fc:	6c 29       	or	r22, r12
     8fe:	7d 29       	or	r23, r13
     900:	4d 83       	std	Y+5, r20	; 0x05
     902:	5e 83       	std	Y+6, r21	; 0x06
     904:	6f 83       	std	Y+7, r22	; 0x07
     906:	78 87       	std	Y+8, r23	; 0x08
     908:	8e e1       	ldi	r24, 0x1E	; 30
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	8e 1b       	sub	r24, r30
     90e:	9f 0b       	sbc	r25, r31
     910:	9c 83       	std	Y+4, r25	; 0x04
     912:	8b 83       	std	Y+3, r24	; 0x03
     914:	12 c0       	rjmp	.+36     	; 0x93a <__stack+0xdb>
     916:	30 97       	sbiw	r30, 0x00	; 0
     918:	81 f0       	breq	.+32     	; 0x93a <__stack+0xdb>
     91a:	0e 2e       	mov	r0, r30
     91c:	04 c0       	rjmp	.+8      	; 0x926 <__stack+0xc7>
     91e:	ee 0c       	add	r14, r14
     920:	ff 1c       	adc	r15, r15
     922:	00 1f       	adc	r16, r16
     924:	11 1f       	adc	r17, r17
     926:	0a 94       	dec	r0
     928:	d2 f7       	brpl	.-12     	; 0x91e <__stack+0xbf>
     92a:	ed 82       	std	Y+5, r14	; 0x05
     92c:	fe 82       	std	Y+6, r15	; 0x06
     92e:	0f 83       	std	Y+7, r16	; 0x07
     930:	18 87       	std	Y+8, r17	; 0x08
     932:	ce 1a       	sub	r12, r30
     934:	df 0a       	sbc	r13, r31
     936:	dc 82       	std	Y+4, r13	; 0x04
     938:	cb 82       	std	Y+3, r12	; 0x03
     93a:	1a 82       	std	Y+2, r1	; 0x02
     93c:	ce 01       	movw	r24, r28
     93e:	01 96       	adiw	r24, 0x01	; 1
     940:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__pack_f>
     944:	28 96       	adiw	r28, 0x08	; 8
     946:	ea e0       	ldi	r30, 0x0A	; 10
     948:	0c 94 42 12 	jmp	0x2484	; 0x2484 <__epilogue_restores__+0x10>

0000094c <__clzsi2>:
     94c:	ef 92       	push	r14
     94e:	ff 92       	push	r15
     950:	0f 93       	push	r16
     952:	1f 93       	push	r17
     954:	7b 01       	movw	r14, r22
     956:	8c 01       	movw	r16, r24
     958:	80 e0       	ldi	r24, 0x00	; 0
     95a:	e8 16       	cp	r14, r24
     95c:	80 e0       	ldi	r24, 0x00	; 0
     95e:	f8 06       	cpc	r15, r24
     960:	81 e0       	ldi	r24, 0x01	; 1
     962:	08 07       	cpc	r16, r24
     964:	80 e0       	ldi	r24, 0x00	; 0
     966:	18 07       	cpc	r17, r24
     968:	88 f4       	brcc	.+34     	; 0x98c <__clzsi2+0x40>
     96a:	8f ef       	ldi	r24, 0xFF	; 255
     96c:	e8 16       	cp	r14, r24
     96e:	f1 04       	cpc	r15, r1
     970:	01 05       	cpc	r16, r1
     972:	11 05       	cpc	r17, r1
     974:	31 f0       	breq	.+12     	; 0x982 <__clzsi2+0x36>
     976:	28 f0       	brcs	.+10     	; 0x982 <__clzsi2+0x36>
     978:	88 e0       	ldi	r24, 0x08	; 8
     97a:	90 e0       	ldi	r25, 0x00	; 0
     97c:	a0 e0       	ldi	r26, 0x00	; 0
     97e:	b0 e0       	ldi	r27, 0x00	; 0
     980:	17 c0       	rjmp	.+46     	; 0x9b0 <__clzsi2+0x64>
     982:	80 e0       	ldi	r24, 0x00	; 0
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	a0 e0       	ldi	r26, 0x00	; 0
     988:	b0 e0       	ldi	r27, 0x00	; 0
     98a:	12 c0       	rjmp	.+36     	; 0x9b0 <__clzsi2+0x64>
     98c:	80 e0       	ldi	r24, 0x00	; 0
     98e:	e8 16       	cp	r14, r24
     990:	80 e0       	ldi	r24, 0x00	; 0
     992:	f8 06       	cpc	r15, r24
     994:	80 e0       	ldi	r24, 0x00	; 0
     996:	08 07       	cpc	r16, r24
     998:	81 e0       	ldi	r24, 0x01	; 1
     99a:	18 07       	cpc	r17, r24
     99c:	28 f0       	brcs	.+10     	; 0x9a8 <__clzsi2+0x5c>
     99e:	88 e1       	ldi	r24, 0x18	; 24
     9a0:	90 e0       	ldi	r25, 0x00	; 0
     9a2:	a0 e0       	ldi	r26, 0x00	; 0
     9a4:	b0 e0       	ldi	r27, 0x00	; 0
     9a6:	04 c0       	rjmp	.+8      	; 0x9b0 <__clzsi2+0x64>
     9a8:	80 e1       	ldi	r24, 0x10	; 16
     9aa:	90 e0       	ldi	r25, 0x00	; 0
     9ac:	a0 e0       	ldi	r26, 0x00	; 0
     9ae:	b0 e0       	ldi	r27, 0x00	; 0
     9b0:	20 e2       	ldi	r18, 0x20	; 32
     9b2:	30 e0       	ldi	r19, 0x00	; 0
     9b4:	40 e0       	ldi	r20, 0x00	; 0
     9b6:	50 e0       	ldi	r21, 0x00	; 0
     9b8:	28 1b       	sub	r18, r24
     9ba:	39 0b       	sbc	r19, r25
     9bc:	4a 0b       	sbc	r20, r26
     9be:	5b 0b       	sbc	r21, r27
     9c0:	04 c0       	rjmp	.+8      	; 0x9ca <__clzsi2+0x7e>
     9c2:	16 95       	lsr	r17
     9c4:	07 95       	ror	r16
     9c6:	f7 94       	ror	r15
     9c8:	e7 94       	ror	r14
     9ca:	8a 95       	dec	r24
     9cc:	d2 f7       	brpl	.-12     	; 0x9c2 <__clzsi2+0x76>
     9ce:	f7 01       	movw	r30, r14
     9d0:	e8 59       	subi	r30, 0x98	; 152
     9d2:	ff 4f       	sbci	r31, 0xFF	; 255
     9d4:	80 81       	ld	r24, Z
     9d6:	28 1b       	sub	r18, r24
     9d8:	31 09       	sbc	r19, r1
     9da:	41 09       	sbc	r20, r1
     9dc:	51 09       	sbc	r21, r1
     9de:	c9 01       	movw	r24, r18
     9e0:	1f 91       	pop	r17
     9e2:	0f 91       	pop	r16
     9e4:	ff 90       	pop	r15
     9e6:	ef 90       	pop	r14
     9e8:	08 95       	ret

000009ea <__pack_f>:
     9ea:	df 92       	push	r13
     9ec:	ef 92       	push	r14
     9ee:	ff 92       	push	r15
     9f0:	0f 93       	push	r16
     9f2:	1f 93       	push	r17
     9f4:	fc 01       	movw	r30, r24
     9f6:	e4 80       	ldd	r14, Z+4	; 0x04
     9f8:	f5 80       	ldd	r15, Z+5	; 0x05
     9fa:	06 81       	ldd	r16, Z+6	; 0x06
     9fc:	17 81       	ldd	r17, Z+7	; 0x07
     9fe:	d1 80       	ldd	r13, Z+1	; 0x01
     a00:	80 81       	ld	r24, Z
     a02:	82 30       	cpi	r24, 0x02	; 2
     a04:	48 f4       	brcc	.+18     	; 0xa18 <__pack_f+0x2e>
     a06:	80 e0       	ldi	r24, 0x00	; 0
     a08:	90 e0       	ldi	r25, 0x00	; 0
     a0a:	a0 e1       	ldi	r26, 0x10	; 16
     a0c:	b0 e0       	ldi	r27, 0x00	; 0
     a0e:	e8 2a       	or	r14, r24
     a10:	f9 2a       	or	r15, r25
     a12:	0a 2b       	or	r16, r26
     a14:	1b 2b       	or	r17, r27
     a16:	a5 c0       	rjmp	.+330    	; 0xb62 <__pack_f+0x178>
     a18:	84 30       	cpi	r24, 0x04	; 4
     a1a:	09 f4       	brne	.+2      	; 0xa1e <__pack_f+0x34>
     a1c:	9f c0       	rjmp	.+318    	; 0xb5c <__pack_f+0x172>
     a1e:	82 30       	cpi	r24, 0x02	; 2
     a20:	21 f4       	brne	.+8      	; 0xa2a <__pack_f+0x40>
     a22:	ee 24       	eor	r14, r14
     a24:	ff 24       	eor	r15, r15
     a26:	87 01       	movw	r16, r14
     a28:	05 c0       	rjmp	.+10     	; 0xa34 <__pack_f+0x4a>
     a2a:	e1 14       	cp	r14, r1
     a2c:	f1 04       	cpc	r15, r1
     a2e:	01 05       	cpc	r16, r1
     a30:	11 05       	cpc	r17, r1
     a32:	19 f4       	brne	.+6      	; 0xa3a <__pack_f+0x50>
     a34:	e0 e0       	ldi	r30, 0x00	; 0
     a36:	f0 e0       	ldi	r31, 0x00	; 0
     a38:	96 c0       	rjmp	.+300    	; 0xb66 <__pack_f+0x17c>
     a3a:	62 81       	ldd	r22, Z+2	; 0x02
     a3c:	73 81       	ldd	r23, Z+3	; 0x03
     a3e:	9f ef       	ldi	r25, 0xFF	; 255
     a40:	62 38       	cpi	r22, 0x82	; 130
     a42:	79 07       	cpc	r23, r25
     a44:	0c f0       	brlt	.+2      	; 0xa48 <__pack_f+0x5e>
     a46:	5b c0       	rjmp	.+182    	; 0xafe <__pack_f+0x114>
     a48:	22 e8       	ldi	r18, 0x82	; 130
     a4a:	3f ef       	ldi	r19, 0xFF	; 255
     a4c:	26 1b       	sub	r18, r22
     a4e:	37 0b       	sbc	r19, r23
     a50:	2a 31       	cpi	r18, 0x1A	; 26
     a52:	31 05       	cpc	r19, r1
     a54:	2c f0       	brlt	.+10     	; 0xa60 <__pack_f+0x76>
     a56:	20 e0       	ldi	r18, 0x00	; 0
     a58:	30 e0       	ldi	r19, 0x00	; 0
     a5a:	40 e0       	ldi	r20, 0x00	; 0
     a5c:	50 e0       	ldi	r21, 0x00	; 0
     a5e:	2a c0       	rjmp	.+84     	; 0xab4 <__pack_f+0xca>
     a60:	b8 01       	movw	r22, r16
     a62:	a7 01       	movw	r20, r14
     a64:	02 2e       	mov	r0, r18
     a66:	04 c0       	rjmp	.+8      	; 0xa70 <__pack_f+0x86>
     a68:	76 95       	lsr	r23
     a6a:	67 95       	ror	r22
     a6c:	57 95       	ror	r21
     a6e:	47 95       	ror	r20
     a70:	0a 94       	dec	r0
     a72:	d2 f7       	brpl	.-12     	; 0xa68 <__pack_f+0x7e>
     a74:	81 e0       	ldi	r24, 0x01	; 1
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	a0 e0       	ldi	r26, 0x00	; 0
     a7a:	b0 e0       	ldi	r27, 0x00	; 0
     a7c:	04 c0       	rjmp	.+8      	; 0xa86 <__pack_f+0x9c>
     a7e:	88 0f       	add	r24, r24
     a80:	99 1f       	adc	r25, r25
     a82:	aa 1f       	adc	r26, r26
     a84:	bb 1f       	adc	r27, r27
     a86:	2a 95       	dec	r18
     a88:	d2 f7       	brpl	.-12     	; 0xa7e <__pack_f+0x94>
     a8a:	01 97       	sbiw	r24, 0x01	; 1
     a8c:	a1 09       	sbc	r26, r1
     a8e:	b1 09       	sbc	r27, r1
     a90:	8e 21       	and	r24, r14
     a92:	9f 21       	and	r25, r15
     a94:	a0 23       	and	r26, r16
     a96:	b1 23       	and	r27, r17
     a98:	00 97       	sbiw	r24, 0x00	; 0
     a9a:	a1 05       	cpc	r26, r1
     a9c:	b1 05       	cpc	r27, r1
     a9e:	21 f0       	breq	.+8      	; 0xaa8 <__pack_f+0xbe>
     aa0:	81 e0       	ldi	r24, 0x01	; 1
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	a0 e0       	ldi	r26, 0x00	; 0
     aa6:	b0 e0       	ldi	r27, 0x00	; 0
     aa8:	9a 01       	movw	r18, r20
     aaa:	ab 01       	movw	r20, r22
     aac:	28 2b       	or	r18, r24
     aae:	39 2b       	or	r19, r25
     ab0:	4a 2b       	or	r20, r26
     ab2:	5b 2b       	or	r21, r27
     ab4:	da 01       	movw	r26, r20
     ab6:	c9 01       	movw	r24, r18
     ab8:	8f 77       	andi	r24, 0x7F	; 127
     aba:	90 70       	andi	r25, 0x00	; 0
     abc:	a0 70       	andi	r26, 0x00	; 0
     abe:	b0 70       	andi	r27, 0x00	; 0
     ac0:	80 34       	cpi	r24, 0x40	; 64
     ac2:	91 05       	cpc	r25, r1
     ac4:	a1 05       	cpc	r26, r1
     ac6:	b1 05       	cpc	r27, r1
     ac8:	39 f4       	brne	.+14     	; 0xad8 <__pack_f+0xee>
     aca:	27 ff       	sbrs	r18, 7
     acc:	09 c0       	rjmp	.+18     	; 0xae0 <__pack_f+0xf6>
     ace:	20 5c       	subi	r18, 0xC0	; 192
     ad0:	3f 4f       	sbci	r19, 0xFF	; 255
     ad2:	4f 4f       	sbci	r20, 0xFF	; 255
     ad4:	5f 4f       	sbci	r21, 0xFF	; 255
     ad6:	04 c0       	rjmp	.+8      	; 0xae0 <__pack_f+0xf6>
     ad8:	21 5c       	subi	r18, 0xC1	; 193
     ada:	3f 4f       	sbci	r19, 0xFF	; 255
     adc:	4f 4f       	sbci	r20, 0xFF	; 255
     ade:	5f 4f       	sbci	r21, 0xFF	; 255
     ae0:	e0 e0       	ldi	r30, 0x00	; 0
     ae2:	f0 e0       	ldi	r31, 0x00	; 0
     ae4:	20 30       	cpi	r18, 0x00	; 0
     ae6:	a0 e0       	ldi	r26, 0x00	; 0
     ae8:	3a 07       	cpc	r19, r26
     aea:	a0 e0       	ldi	r26, 0x00	; 0
     aec:	4a 07       	cpc	r20, r26
     aee:	a0 e4       	ldi	r26, 0x40	; 64
     af0:	5a 07       	cpc	r21, r26
     af2:	10 f0       	brcs	.+4      	; 0xaf8 <__pack_f+0x10e>
     af4:	e1 e0       	ldi	r30, 0x01	; 1
     af6:	f0 e0       	ldi	r31, 0x00	; 0
     af8:	79 01       	movw	r14, r18
     afa:	8a 01       	movw	r16, r20
     afc:	27 c0       	rjmp	.+78     	; 0xb4c <__pack_f+0x162>
     afe:	60 38       	cpi	r22, 0x80	; 128
     b00:	71 05       	cpc	r23, r1
     b02:	64 f5       	brge	.+88     	; 0xb5c <__pack_f+0x172>
     b04:	fb 01       	movw	r30, r22
     b06:	e1 58       	subi	r30, 0x81	; 129
     b08:	ff 4f       	sbci	r31, 0xFF	; 255
     b0a:	d8 01       	movw	r26, r16
     b0c:	c7 01       	movw	r24, r14
     b0e:	8f 77       	andi	r24, 0x7F	; 127
     b10:	90 70       	andi	r25, 0x00	; 0
     b12:	a0 70       	andi	r26, 0x00	; 0
     b14:	b0 70       	andi	r27, 0x00	; 0
     b16:	80 34       	cpi	r24, 0x40	; 64
     b18:	91 05       	cpc	r25, r1
     b1a:	a1 05       	cpc	r26, r1
     b1c:	b1 05       	cpc	r27, r1
     b1e:	39 f4       	brne	.+14     	; 0xb2e <__pack_f+0x144>
     b20:	e7 fe       	sbrs	r14, 7
     b22:	0d c0       	rjmp	.+26     	; 0xb3e <__pack_f+0x154>
     b24:	80 e4       	ldi	r24, 0x40	; 64
     b26:	90 e0       	ldi	r25, 0x00	; 0
     b28:	a0 e0       	ldi	r26, 0x00	; 0
     b2a:	b0 e0       	ldi	r27, 0x00	; 0
     b2c:	04 c0       	rjmp	.+8      	; 0xb36 <__pack_f+0x14c>
     b2e:	8f e3       	ldi	r24, 0x3F	; 63
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	a0 e0       	ldi	r26, 0x00	; 0
     b34:	b0 e0       	ldi	r27, 0x00	; 0
     b36:	e8 0e       	add	r14, r24
     b38:	f9 1e       	adc	r15, r25
     b3a:	0a 1f       	adc	r16, r26
     b3c:	1b 1f       	adc	r17, r27
     b3e:	17 ff       	sbrs	r17, 7
     b40:	05 c0       	rjmp	.+10     	; 0xb4c <__pack_f+0x162>
     b42:	16 95       	lsr	r17
     b44:	07 95       	ror	r16
     b46:	f7 94       	ror	r15
     b48:	e7 94       	ror	r14
     b4a:	31 96       	adiw	r30, 0x01	; 1
     b4c:	87 e0       	ldi	r24, 0x07	; 7
     b4e:	16 95       	lsr	r17
     b50:	07 95       	ror	r16
     b52:	f7 94       	ror	r15
     b54:	e7 94       	ror	r14
     b56:	8a 95       	dec	r24
     b58:	d1 f7       	brne	.-12     	; 0xb4e <__pack_f+0x164>
     b5a:	05 c0       	rjmp	.+10     	; 0xb66 <__pack_f+0x17c>
     b5c:	ee 24       	eor	r14, r14
     b5e:	ff 24       	eor	r15, r15
     b60:	87 01       	movw	r16, r14
     b62:	ef ef       	ldi	r30, 0xFF	; 255
     b64:	f0 e0       	ldi	r31, 0x00	; 0
     b66:	6e 2f       	mov	r22, r30
     b68:	67 95       	ror	r22
     b6a:	66 27       	eor	r22, r22
     b6c:	67 95       	ror	r22
     b6e:	90 2f       	mov	r25, r16
     b70:	9f 77       	andi	r25, 0x7F	; 127
     b72:	d7 94       	ror	r13
     b74:	dd 24       	eor	r13, r13
     b76:	d7 94       	ror	r13
     b78:	8e 2f       	mov	r24, r30
     b7a:	86 95       	lsr	r24
     b7c:	49 2f       	mov	r20, r25
     b7e:	46 2b       	or	r20, r22
     b80:	58 2f       	mov	r21, r24
     b82:	5d 29       	or	r21, r13
     b84:	b7 01       	movw	r22, r14
     b86:	ca 01       	movw	r24, r20
     b88:	1f 91       	pop	r17
     b8a:	0f 91       	pop	r16
     b8c:	ff 90       	pop	r15
     b8e:	ef 90       	pop	r14
     b90:	df 90       	pop	r13
     b92:	08 95       	ret

00000b94 <__unpack_f>:
     b94:	fc 01       	movw	r30, r24
     b96:	db 01       	movw	r26, r22
     b98:	40 81       	ld	r20, Z
     b9a:	51 81       	ldd	r21, Z+1	; 0x01
     b9c:	22 81       	ldd	r18, Z+2	; 0x02
     b9e:	62 2f       	mov	r22, r18
     ba0:	6f 77       	andi	r22, 0x7F	; 127
     ba2:	70 e0       	ldi	r23, 0x00	; 0
     ba4:	22 1f       	adc	r18, r18
     ba6:	22 27       	eor	r18, r18
     ba8:	22 1f       	adc	r18, r18
     baa:	93 81       	ldd	r25, Z+3	; 0x03
     bac:	89 2f       	mov	r24, r25
     bae:	88 0f       	add	r24, r24
     bb0:	82 2b       	or	r24, r18
     bb2:	28 2f       	mov	r18, r24
     bb4:	30 e0       	ldi	r19, 0x00	; 0
     bb6:	99 1f       	adc	r25, r25
     bb8:	99 27       	eor	r25, r25
     bba:	99 1f       	adc	r25, r25
     bbc:	11 96       	adiw	r26, 0x01	; 1
     bbe:	9c 93       	st	X, r25
     bc0:	11 97       	sbiw	r26, 0x01	; 1
     bc2:	21 15       	cp	r18, r1
     bc4:	31 05       	cpc	r19, r1
     bc6:	a9 f5       	brne	.+106    	; 0xc32 <__unpack_f+0x9e>
     bc8:	41 15       	cp	r20, r1
     bca:	51 05       	cpc	r21, r1
     bcc:	61 05       	cpc	r22, r1
     bce:	71 05       	cpc	r23, r1
     bd0:	11 f4       	brne	.+4      	; 0xbd6 <__unpack_f+0x42>
     bd2:	82 e0       	ldi	r24, 0x02	; 2
     bd4:	37 c0       	rjmp	.+110    	; 0xc44 <__unpack_f+0xb0>
     bd6:	82 e8       	ldi	r24, 0x82	; 130
     bd8:	9f ef       	ldi	r25, 0xFF	; 255
     bda:	13 96       	adiw	r26, 0x03	; 3
     bdc:	9c 93       	st	X, r25
     bde:	8e 93       	st	-X, r24
     be0:	12 97       	sbiw	r26, 0x02	; 2
     be2:	9a 01       	movw	r18, r20
     be4:	ab 01       	movw	r20, r22
     be6:	67 e0       	ldi	r22, 0x07	; 7
     be8:	22 0f       	add	r18, r18
     bea:	33 1f       	adc	r19, r19
     bec:	44 1f       	adc	r20, r20
     bee:	55 1f       	adc	r21, r21
     bf0:	6a 95       	dec	r22
     bf2:	d1 f7       	brne	.-12     	; 0xbe8 <__unpack_f+0x54>
     bf4:	83 e0       	ldi	r24, 0x03	; 3
     bf6:	8c 93       	st	X, r24
     bf8:	0d c0       	rjmp	.+26     	; 0xc14 <__unpack_f+0x80>
     bfa:	22 0f       	add	r18, r18
     bfc:	33 1f       	adc	r19, r19
     bfe:	44 1f       	adc	r20, r20
     c00:	55 1f       	adc	r21, r21
     c02:	12 96       	adiw	r26, 0x02	; 2
     c04:	8d 91       	ld	r24, X+
     c06:	9c 91       	ld	r25, X
     c08:	13 97       	sbiw	r26, 0x03	; 3
     c0a:	01 97       	sbiw	r24, 0x01	; 1
     c0c:	13 96       	adiw	r26, 0x03	; 3
     c0e:	9c 93       	st	X, r25
     c10:	8e 93       	st	-X, r24
     c12:	12 97       	sbiw	r26, 0x02	; 2
     c14:	20 30       	cpi	r18, 0x00	; 0
     c16:	80 e0       	ldi	r24, 0x00	; 0
     c18:	38 07       	cpc	r19, r24
     c1a:	80 e0       	ldi	r24, 0x00	; 0
     c1c:	48 07       	cpc	r20, r24
     c1e:	80 e4       	ldi	r24, 0x40	; 64
     c20:	58 07       	cpc	r21, r24
     c22:	58 f3       	brcs	.-42     	; 0xbfa <__unpack_f+0x66>
     c24:	14 96       	adiw	r26, 0x04	; 4
     c26:	2d 93       	st	X+, r18
     c28:	3d 93       	st	X+, r19
     c2a:	4d 93       	st	X+, r20
     c2c:	5c 93       	st	X, r21
     c2e:	17 97       	sbiw	r26, 0x07	; 7
     c30:	08 95       	ret
     c32:	2f 3f       	cpi	r18, 0xFF	; 255
     c34:	31 05       	cpc	r19, r1
     c36:	79 f4       	brne	.+30     	; 0xc56 <__unpack_f+0xc2>
     c38:	41 15       	cp	r20, r1
     c3a:	51 05       	cpc	r21, r1
     c3c:	61 05       	cpc	r22, r1
     c3e:	71 05       	cpc	r23, r1
     c40:	19 f4       	brne	.+6      	; 0xc48 <__unpack_f+0xb4>
     c42:	84 e0       	ldi	r24, 0x04	; 4
     c44:	8c 93       	st	X, r24
     c46:	08 95       	ret
     c48:	64 ff       	sbrs	r22, 4
     c4a:	03 c0       	rjmp	.+6      	; 0xc52 <__unpack_f+0xbe>
     c4c:	81 e0       	ldi	r24, 0x01	; 1
     c4e:	8c 93       	st	X, r24
     c50:	12 c0       	rjmp	.+36     	; 0xc76 <__unpack_f+0xe2>
     c52:	1c 92       	st	X, r1
     c54:	10 c0       	rjmp	.+32     	; 0xc76 <__unpack_f+0xe2>
     c56:	2f 57       	subi	r18, 0x7F	; 127
     c58:	30 40       	sbci	r19, 0x00	; 0
     c5a:	13 96       	adiw	r26, 0x03	; 3
     c5c:	3c 93       	st	X, r19
     c5e:	2e 93       	st	-X, r18
     c60:	12 97       	sbiw	r26, 0x02	; 2
     c62:	83 e0       	ldi	r24, 0x03	; 3
     c64:	8c 93       	st	X, r24
     c66:	87 e0       	ldi	r24, 0x07	; 7
     c68:	44 0f       	add	r20, r20
     c6a:	55 1f       	adc	r21, r21
     c6c:	66 1f       	adc	r22, r22
     c6e:	77 1f       	adc	r23, r23
     c70:	8a 95       	dec	r24
     c72:	d1 f7       	brne	.-12     	; 0xc68 <__unpack_f+0xd4>
     c74:	70 64       	ori	r23, 0x40	; 64
     c76:	14 96       	adiw	r26, 0x04	; 4
     c78:	4d 93       	st	X+, r20
     c7a:	5d 93       	st	X+, r21
     c7c:	6d 93       	st	X+, r22
     c7e:	7c 93       	st	X, r23
     c80:	17 97       	sbiw	r26, 0x07	; 7
     c82:	08 95       	ret

00000c84 <__fpcmp_parts_f>:
     c84:	1f 93       	push	r17
     c86:	dc 01       	movw	r26, r24
     c88:	fb 01       	movw	r30, r22
     c8a:	9c 91       	ld	r25, X
     c8c:	92 30       	cpi	r25, 0x02	; 2
     c8e:	08 f4       	brcc	.+2      	; 0xc92 <__fpcmp_parts_f+0xe>
     c90:	47 c0       	rjmp	.+142    	; 0xd20 <__fpcmp_parts_f+0x9c>
     c92:	80 81       	ld	r24, Z
     c94:	82 30       	cpi	r24, 0x02	; 2
     c96:	08 f4       	brcc	.+2      	; 0xc9a <__fpcmp_parts_f+0x16>
     c98:	43 c0       	rjmp	.+134    	; 0xd20 <__fpcmp_parts_f+0x9c>
     c9a:	94 30       	cpi	r25, 0x04	; 4
     c9c:	51 f4       	brne	.+20     	; 0xcb2 <__fpcmp_parts_f+0x2e>
     c9e:	11 96       	adiw	r26, 0x01	; 1
     ca0:	1c 91       	ld	r17, X
     ca2:	84 30       	cpi	r24, 0x04	; 4
     ca4:	99 f5       	brne	.+102    	; 0xd0c <__fpcmp_parts_f+0x88>
     ca6:	81 81       	ldd	r24, Z+1	; 0x01
     ca8:	68 2f       	mov	r22, r24
     caa:	70 e0       	ldi	r23, 0x00	; 0
     cac:	61 1b       	sub	r22, r17
     cae:	71 09       	sbc	r23, r1
     cb0:	3f c0       	rjmp	.+126    	; 0xd30 <__fpcmp_parts_f+0xac>
     cb2:	84 30       	cpi	r24, 0x04	; 4
     cb4:	21 f0       	breq	.+8      	; 0xcbe <__fpcmp_parts_f+0x3a>
     cb6:	92 30       	cpi	r25, 0x02	; 2
     cb8:	31 f4       	brne	.+12     	; 0xcc6 <__fpcmp_parts_f+0x42>
     cba:	82 30       	cpi	r24, 0x02	; 2
     cbc:	b9 f1       	breq	.+110    	; 0xd2c <__fpcmp_parts_f+0xa8>
     cbe:	81 81       	ldd	r24, Z+1	; 0x01
     cc0:	88 23       	and	r24, r24
     cc2:	89 f1       	breq	.+98     	; 0xd26 <__fpcmp_parts_f+0xa2>
     cc4:	2d c0       	rjmp	.+90     	; 0xd20 <__fpcmp_parts_f+0x9c>
     cc6:	11 96       	adiw	r26, 0x01	; 1
     cc8:	1c 91       	ld	r17, X
     cca:	11 97       	sbiw	r26, 0x01	; 1
     ccc:	82 30       	cpi	r24, 0x02	; 2
     cce:	f1 f0       	breq	.+60     	; 0xd0c <__fpcmp_parts_f+0x88>
     cd0:	81 81       	ldd	r24, Z+1	; 0x01
     cd2:	18 17       	cp	r17, r24
     cd4:	d9 f4       	brne	.+54     	; 0xd0c <__fpcmp_parts_f+0x88>
     cd6:	12 96       	adiw	r26, 0x02	; 2
     cd8:	2d 91       	ld	r18, X+
     cda:	3c 91       	ld	r19, X
     cdc:	13 97       	sbiw	r26, 0x03	; 3
     cde:	82 81       	ldd	r24, Z+2	; 0x02
     ce0:	93 81       	ldd	r25, Z+3	; 0x03
     ce2:	82 17       	cp	r24, r18
     ce4:	93 07       	cpc	r25, r19
     ce6:	94 f0       	brlt	.+36     	; 0xd0c <__fpcmp_parts_f+0x88>
     ce8:	28 17       	cp	r18, r24
     cea:	39 07       	cpc	r19, r25
     cec:	bc f0       	brlt	.+46     	; 0xd1c <__fpcmp_parts_f+0x98>
     cee:	14 96       	adiw	r26, 0x04	; 4
     cf0:	8d 91       	ld	r24, X+
     cf2:	9d 91       	ld	r25, X+
     cf4:	0d 90       	ld	r0, X+
     cf6:	bc 91       	ld	r27, X
     cf8:	a0 2d       	mov	r26, r0
     cfa:	24 81       	ldd	r18, Z+4	; 0x04
     cfc:	35 81       	ldd	r19, Z+5	; 0x05
     cfe:	46 81       	ldd	r20, Z+6	; 0x06
     d00:	57 81       	ldd	r21, Z+7	; 0x07
     d02:	28 17       	cp	r18, r24
     d04:	39 07       	cpc	r19, r25
     d06:	4a 07       	cpc	r20, r26
     d08:	5b 07       	cpc	r21, r27
     d0a:	18 f4       	brcc	.+6      	; 0xd12 <__fpcmp_parts_f+0x8e>
     d0c:	11 23       	and	r17, r17
     d0e:	41 f0       	breq	.+16     	; 0xd20 <__fpcmp_parts_f+0x9c>
     d10:	0a c0       	rjmp	.+20     	; 0xd26 <__fpcmp_parts_f+0xa2>
     d12:	82 17       	cp	r24, r18
     d14:	93 07       	cpc	r25, r19
     d16:	a4 07       	cpc	r26, r20
     d18:	b5 07       	cpc	r27, r21
     d1a:	40 f4       	brcc	.+16     	; 0xd2c <__fpcmp_parts_f+0xa8>
     d1c:	11 23       	and	r17, r17
     d1e:	19 f0       	breq	.+6      	; 0xd26 <__fpcmp_parts_f+0xa2>
     d20:	61 e0       	ldi	r22, 0x01	; 1
     d22:	70 e0       	ldi	r23, 0x00	; 0
     d24:	05 c0       	rjmp	.+10     	; 0xd30 <__fpcmp_parts_f+0xac>
     d26:	6f ef       	ldi	r22, 0xFF	; 255
     d28:	7f ef       	ldi	r23, 0xFF	; 255
     d2a:	02 c0       	rjmp	.+4      	; 0xd30 <__fpcmp_parts_f+0xac>
     d2c:	60 e0       	ldi	r22, 0x00	; 0
     d2e:	70 e0       	ldi	r23, 0x00	; 0
     d30:	cb 01       	movw	r24, r22
     d32:	1f 91       	pop	r17
     d34:	08 95       	ret

00000d36 <DIO_VidSetPinDirection>:
#include "BIT_MATH.h"
#include "DIO.h"


void DIO_VidSetPinDirection(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8Direction)
{
     d36:	df 93       	push	r29
     d38:	cf 93       	push	r28
     d3a:	cd b7       	in	r28, 0x3d	; 61
     d3c:	de b7       	in	r29, 0x3e	; 62
     d3e:	27 97       	sbiw	r28, 0x07	; 7
     d40:	0f b6       	in	r0, 0x3f	; 63
     d42:	f8 94       	cli
     d44:	de bf       	out	0x3e, r29	; 62
     d46:	0f be       	out	0x3f, r0	; 63
     d48:	cd bf       	out	0x3d, r28	; 61
     d4a:	89 83       	std	Y+1, r24	; 0x01
     d4c:	6a 83       	std	Y+2, r22	; 0x02
     d4e:	4b 83       	std	Y+3, r20	; 0x03
	if(Copy_u8Direction==1)
     d50:	8b 81       	ldd	r24, Y+3	; 0x03
     d52:	81 30       	cpi	r24, 0x01	; 1
     d54:	09 f0       	breq	.+2      	; 0xd58 <DIO_VidSetPinDirection+0x22>
     d56:	6f c0       	rjmp	.+222    	; 0xe36 <DIO_VidSetPinDirection+0x100>
	{
		switch(Copy_u8Port)
     d58:	89 81       	ldd	r24, Y+1	; 0x01
     d5a:	28 2f       	mov	r18, r24
     d5c:	30 e0       	ldi	r19, 0x00	; 0
     d5e:	3f 83       	std	Y+7, r19	; 0x07
     d60:	2e 83       	std	Y+6, r18	; 0x06
     d62:	8e 81       	ldd	r24, Y+6	; 0x06
     d64:	9f 81       	ldd	r25, Y+7	; 0x07
     d66:	81 30       	cpi	r24, 0x01	; 1
     d68:	91 05       	cpc	r25, r1
     d6a:	49 f1       	breq	.+82     	; 0xdbe <DIO_VidSetPinDirection+0x88>
     d6c:	2e 81       	ldd	r18, Y+6	; 0x06
     d6e:	3f 81       	ldd	r19, Y+7	; 0x07
     d70:	22 30       	cpi	r18, 0x02	; 2
     d72:	31 05       	cpc	r19, r1
     d74:	2c f4       	brge	.+10     	; 0xd80 <DIO_VidSetPinDirection+0x4a>
     d76:	8e 81       	ldd	r24, Y+6	; 0x06
     d78:	9f 81       	ldd	r25, Y+7	; 0x07
     d7a:	00 97       	sbiw	r24, 0x00	; 0
     d7c:	61 f0       	breq	.+24     	; 0xd96 <DIO_VidSetPinDirection+0x60>
     d7e:	d2 c0       	rjmp	.+420    	; 0xf24 <DIO_VidSetPinDirection+0x1ee>
     d80:	2e 81       	ldd	r18, Y+6	; 0x06
     d82:	3f 81       	ldd	r19, Y+7	; 0x07
     d84:	22 30       	cpi	r18, 0x02	; 2
     d86:	31 05       	cpc	r19, r1
     d88:	71 f1       	breq	.+92     	; 0xde6 <DIO_VidSetPinDirection+0xb0>
     d8a:	8e 81       	ldd	r24, Y+6	; 0x06
     d8c:	9f 81       	ldd	r25, Y+7	; 0x07
     d8e:	83 30       	cpi	r24, 0x03	; 3
     d90:	91 05       	cpc	r25, r1
     d92:	e9 f1       	breq	.+122    	; 0xe0e <DIO_VidSetPinDirection+0xd8>
     d94:	c7 c0       	rjmp	.+398    	; 0xf24 <DIO_VidSetPinDirection+0x1ee>
		{
			case 0: SET_BIT(DDRA,Copy_u8Pin);break;
     d96:	aa e3       	ldi	r26, 0x3A	; 58
     d98:	b0 e0       	ldi	r27, 0x00	; 0
     d9a:	ea e3       	ldi	r30, 0x3A	; 58
     d9c:	f0 e0       	ldi	r31, 0x00	; 0
     d9e:	80 81       	ld	r24, Z
     da0:	48 2f       	mov	r20, r24
     da2:	8a 81       	ldd	r24, Y+2	; 0x02
     da4:	28 2f       	mov	r18, r24
     da6:	30 e0       	ldi	r19, 0x00	; 0
     da8:	81 e0       	ldi	r24, 0x01	; 1
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	02 2e       	mov	r0, r18
     dae:	02 c0       	rjmp	.+4      	; 0xdb4 <DIO_VidSetPinDirection+0x7e>
     db0:	88 0f       	add	r24, r24
     db2:	99 1f       	adc	r25, r25
     db4:	0a 94       	dec	r0
     db6:	e2 f7       	brpl	.-8      	; 0xdb0 <DIO_VidSetPinDirection+0x7a>
     db8:	84 2b       	or	r24, r20
     dba:	8c 93       	st	X, r24
     dbc:	b3 c0       	rjmp	.+358    	; 0xf24 <DIO_VidSetPinDirection+0x1ee>
			case 1: SET_BIT(DDRB,Copy_u8Pin);break;
     dbe:	a7 e3       	ldi	r26, 0x37	; 55
     dc0:	b0 e0       	ldi	r27, 0x00	; 0
     dc2:	e7 e3       	ldi	r30, 0x37	; 55
     dc4:	f0 e0       	ldi	r31, 0x00	; 0
     dc6:	80 81       	ld	r24, Z
     dc8:	48 2f       	mov	r20, r24
     dca:	8a 81       	ldd	r24, Y+2	; 0x02
     dcc:	28 2f       	mov	r18, r24
     dce:	30 e0       	ldi	r19, 0x00	; 0
     dd0:	81 e0       	ldi	r24, 0x01	; 1
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	02 2e       	mov	r0, r18
     dd6:	02 c0       	rjmp	.+4      	; 0xddc <DIO_VidSetPinDirection+0xa6>
     dd8:	88 0f       	add	r24, r24
     dda:	99 1f       	adc	r25, r25
     ddc:	0a 94       	dec	r0
     dde:	e2 f7       	brpl	.-8      	; 0xdd8 <DIO_VidSetPinDirection+0xa2>
     de0:	84 2b       	or	r24, r20
     de2:	8c 93       	st	X, r24
     de4:	9f c0       	rjmp	.+318    	; 0xf24 <DIO_VidSetPinDirection+0x1ee>
			case 2: SET_BIT(DDRC,Copy_u8Pin);break;
     de6:	a4 e3       	ldi	r26, 0x34	; 52
     de8:	b0 e0       	ldi	r27, 0x00	; 0
     dea:	e4 e3       	ldi	r30, 0x34	; 52
     dec:	f0 e0       	ldi	r31, 0x00	; 0
     dee:	80 81       	ld	r24, Z
     df0:	48 2f       	mov	r20, r24
     df2:	8a 81       	ldd	r24, Y+2	; 0x02
     df4:	28 2f       	mov	r18, r24
     df6:	30 e0       	ldi	r19, 0x00	; 0
     df8:	81 e0       	ldi	r24, 0x01	; 1
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	02 2e       	mov	r0, r18
     dfe:	02 c0       	rjmp	.+4      	; 0xe04 <DIO_VidSetPinDirection+0xce>
     e00:	88 0f       	add	r24, r24
     e02:	99 1f       	adc	r25, r25
     e04:	0a 94       	dec	r0
     e06:	e2 f7       	brpl	.-8      	; 0xe00 <DIO_VidSetPinDirection+0xca>
     e08:	84 2b       	or	r24, r20
     e0a:	8c 93       	st	X, r24
     e0c:	8b c0       	rjmp	.+278    	; 0xf24 <DIO_VidSetPinDirection+0x1ee>
			case 3: SET_BIT(DDRD,Copy_u8Pin);break;
     e0e:	a1 e3       	ldi	r26, 0x31	; 49
     e10:	b0 e0       	ldi	r27, 0x00	; 0
     e12:	e1 e3       	ldi	r30, 0x31	; 49
     e14:	f0 e0       	ldi	r31, 0x00	; 0
     e16:	80 81       	ld	r24, Z
     e18:	48 2f       	mov	r20, r24
     e1a:	8a 81       	ldd	r24, Y+2	; 0x02
     e1c:	28 2f       	mov	r18, r24
     e1e:	30 e0       	ldi	r19, 0x00	; 0
     e20:	81 e0       	ldi	r24, 0x01	; 1
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	02 2e       	mov	r0, r18
     e26:	02 c0       	rjmp	.+4      	; 0xe2c <DIO_VidSetPinDirection+0xf6>
     e28:	88 0f       	add	r24, r24
     e2a:	99 1f       	adc	r25, r25
     e2c:	0a 94       	dec	r0
     e2e:	e2 f7       	brpl	.-8      	; 0xe28 <DIO_VidSetPinDirection+0xf2>
     e30:	84 2b       	or	r24, r20
     e32:	8c 93       	st	X, r24
     e34:	77 c0       	rjmp	.+238    	; 0xf24 <DIO_VidSetPinDirection+0x1ee>
		}
	}
	else if(Copy_u8Direction==0)
     e36:	8b 81       	ldd	r24, Y+3	; 0x03
     e38:	88 23       	and	r24, r24
     e3a:	09 f0       	breq	.+2      	; 0xe3e <DIO_VidSetPinDirection+0x108>
     e3c:	73 c0       	rjmp	.+230    	; 0xf24 <DIO_VidSetPinDirection+0x1ee>
	{
		switch(Copy_u8Port)
     e3e:	89 81       	ldd	r24, Y+1	; 0x01
     e40:	28 2f       	mov	r18, r24
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	3d 83       	std	Y+5, r19	; 0x05
     e46:	2c 83       	std	Y+4, r18	; 0x04
     e48:	8c 81       	ldd	r24, Y+4	; 0x04
     e4a:	9d 81       	ldd	r25, Y+5	; 0x05
     e4c:	81 30       	cpi	r24, 0x01	; 1
     e4e:	91 05       	cpc	r25, r1
     e50:	59 f1       	breq	.+86     	; 0xea8 <DIO_VidSetPinDirection+0x172>
     e52:	2c 81       	ldd	r18, Y+4	; 0x04
     e54:	3d 81       	ldd	r19, Y+5	; 0x05
     e56:	22 30       	cpi	r18, 0x02	; 2
     e58:	31 05       	cpc	r19, r1
     e5a:	2c f4       	brge	.+10     	; 0xe66 <DIO_VidSetPinDirection+0x130>
     e5c:	8c 81       	ldd	r24, Y+4	; 0x04
     e5e:	9d 81       	ldd	r25, Y+5	; 0x05
     e60:	00 97       	sbiw	r24, 0x00	; 0
     e62:	69 f0       	breq	.+26     	; 0xe7e <DIO_VidSetPinDirection+0x148>
     e64:	5f c0       	rjmp	.+190    	; 0xf24 <DIO_VidSetPinDirection+0x1ee>
     e66:	2c 81       	ldd	r18, Y+4	; 0x04
     e68:	3d 81       	ldd	r19, Y+5	; 0x05
     e6a:	22 30       	cpi	r18, 0x02	; 2
     e6c:	31 05       	cpc	r19, r1
     e6e:	89 f1       	breq	.+98     	; 0xed2 <DIO_VidSetPinDirection+0x19c>
     e70:	8c 81       	ldd	r24, Y+4	; 0x04
     e72:	9d 81       	ldd	r25, Y+5	; 0x05
     e74:	83 30       	cpi	r24, 0x03	; 3
     e76:	91 05       	cpc	r25, r1
     e78:	09 f4       	brne	.+2      	; 0xe7c <DIO_VidSetPinDirection+0x146>
     e7a:	40 c0       	rjmp	.+128    	; 0xefc <DIO_VidSetPinDirection+0x1c6>
     e7c:	53 c0       	rjmp	.+166    	; 0xf24 <DIO_VidSetPinDirection+0x1ee>
		{
			case 0: CLEAR_BIT(DDRA,Copy_u8Pin);break;
     e7e:	aa e3       	ldi	r26, 0x3A	; 58
     e80:	b0 e0       	ldi	r27, 0x00	; 0
     e82:	ea e3       	ldi	r30, 0x3A	; 58
     e84:	f0 e0       	ldi	r31, 0x00	; 0
     e86:	80 81       	ld	r24, Z
     e88:	48 2f       	mov	r20, r24
     e8a:	8a 81       	ldd	r24, Y+2	; 0x02
     e8c:	28 2f       	mov	r18, r24
     e8e:	30 e0       	ldi	r19, 0x00	; 0
     e90:	81 e0       	ldi	r24, 0x01	; 1
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	02 2e       	mov	r0, r18
     e96:	02 c0       	rjmp	.+4      	; 0xe9c <DIO_VidSetPinDirection+0x166>
     e98:	88 0f       	add	r24, r24
     e9a:	99 1f       	adc	r25, r25
     e9c:	0a 94       	dec	r0
     e9e:	e2 f7       	brpl	.-8      	; 0xe98 <DIO_VidSetPinDirection+0x162>
     ea0:	80 95       	com	r24
     ea2:	84 23       	and	r24, r20
     ea4:	8c 93       	st	X, r24
     ea6:	3e c0       	rjmp	.+124    	; 0xf24 <DIO_VidSetPinDirection+0x1ee>
			case 1: CLEAR_BIT(DDRB,Copy_u8Pin);break;
     ea8:	a7 e3       	ldi	r26, 0x37	; 55
     eaa:	b0 e0       	ldi	r27, 0x00	; 0
     eac:	e7 e3       	ldi	r30, 0x37	; 55
     eae:	f0 e0       	ldi	r31, 0x00	; 0
     eb0:	80 81       	ld	r24, Z
     eb2:	48 2f       	mov	r20, r24
     eb4:	8a 81       	ldd	r24, Y+2	; 0x02
     eb6:	28 2f       	mov	r18, r24
     eb8:	30 e0       	ldi	r19, 0x00	; 0
     eba:	81 e0       	ldi	r24, 0x01	; 1
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	02 2e       	mov	r0, r18
     ec0:	02 c0       	rjmp	.+4      	; 0xec6 <DIO_VidSetPinDirection+0x190>
     ec2:	88 0f       	add	r24, r24
     ec4:	99 1f       	adc	r25, r25
     ec6:	0a 94       	dec	r0
     ec8:	e2 f7       	brpl	.-8      	; 0xec2 <DIO_VidSetPinDirection+0x18c>
     eca:	80 95       	com	r24
     ecc:	84 23       	and	r24, r20
     ece:	8c 93       	st	X, r24
     ed0:	29 c0       	rjmp	.+82     	; 0xf24 <DIO_VidSetPinDirection+0x1ee>
			case 2: CLEAR_BIT(DDRC,Copy_u8Pin);break;
     ed2:	a4 e3       	ldi	r26, 0x34	; 52
     ed4:	b0 e0       	ldi	r27, 0x00	; 0
     ed6:	e4 e3       	ldi	r30, 0x34	; 52
     ed8:	f0 e0       	ldi	r31, 0x00	; 0
     eda:	80 81       	ld	r24, Z
     edc:	48 2f       	mov	r20, r24
     ede:	8a 81       	ldd	r24, Y+2	; 0x02
     ee0:	28 2f       	mov	r18, r24
     ee2:	30 e0       	ldi	r19, 0x00	; 0
     ee4:	81 e0       	ldi	r24, 0x01	; 1
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	02 2e       	mov	r0, r18
     eea:	02 c0       	rjmp	.+4      	; 0xef0 <DIO_VidSetPinDirection+0x1ba>
     eec:	88 0f       	add	r24, r24
     eee:	99 1f       	adc	r25, r25
     ef0:	0a 94       	dec	r0
     ef2:	e2 f7       	brpl	.-8      	; 0xeec <DIO_VidSetPinDirection+0x1b6>
     ef4:	80 95       	com	r24
     ef6:	84 23       	and	r24, r20
     ef8:	8c 93       	st	X, r24
     efa:	14 c0       	rjmp	.+40     	; 0xf24 <DIO_VidSetPinDirection+0x1ee>
			case 3: CLEAR_BIT(DDRD,Copy_u8Pin);break;
     efc:	a1 e3       	ldi	r26, 0x31	; 49
     efe:	b0 e0       	ldi	r27, 0x00	; 0
     f00:	e1 e3       	ldi	r30, 0x31	; 49
     f02:	f0 e0       	ldi	r31, 0x00	; 0
     f04:	80 81       	ld	r24, Z
     f06:	48 2f       	mov	r20, r24
     f08:	8a 81       	ldd	r24, Y+2	; 0x02
     f0a:	28 2f       	mov	r18, r24
     f0c:	30 e0       	ldi	r19, 0x00	; 0
     f0e:	81 e0       	ldi	r24, 0x01	; 1
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	02 2e       	mov	r0, r18
     f14:	02 c0       	rjmp	.+4      	; 0xf1a <DIO_VidSetPinDirection+0x1e4>
     f16:	88 0f       	add	r24, r24
     f18:	99 1f       	adc	r25, r25
     f1a:	0a 94       	dec	r0
     f1c:	e2 f7       	brpl	.-8      	; 0xf16 <DIO_VidSetPinDirection+0x1e0>
     f1e:	80 95       	com	r24
     f20:	84 23       	and	r24, r20
     f22:	8c 93       	st	X, r24
		}
	}
}
     f24:	27 96       	adiw	r28, 0x07	; 7
     f26:	0f b6       	in	r0, 0x3f	; 63
     f28:	f8 94       	cli
     f2a:	de bf       	out	0x3e, r29	; 62
     f2c:	0f be       	out	0x3f, r0	; 63
     f2e:	cd bf       	out	0x3d, r28	; 61
     f30:	cf 91       	pop	r28
     f32:	df 91       	pop	r29
     f34:	08 95       	ret

00000f36 <DIO_VidSetPinValue>:

void DIO_VidSetPinValue(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8Value)
{
     f36:	df 93       	push	r29
     f38:	cf 93       	push	r28
     f3a:	cd b7       	in	r28, 0x3d	; 61
     f3c:	de b7       	in	r29, 0x3e	; 62
     f3e:	27 97       	sbiw	r28, 0x07	; 7
     f40:	0f b6       	in	r0, 0x3f	; 63
     f42:	f8 94       	cli
     f44:	de bf       	out	0x3e, r29	; 62
     f46:	0f be       	out	0x3f, r0	; 63
     f48:	cd bf       	out	0x3d, r28	; 61
     f4a:	89 83       	std	Y+1, r24	; 0x01
     f4c:	6a 83       	std	Y+2, r22	; 0x02
     f4e:	4b 83       	std	Y+3, r20	; 0x03
	if(Copy_u8Value==1)
     f50:	8b 81       	ldd	r24, Y+3	; 0x03
     f52:	81 30       	cpi	r24, 0x01	; 1
     f54:	09 f0       	breq	.+2      	; 0xf58 <DIO_VidSetPinValue+0x22>
     f56:	6f c0       	rjmp	.+222    	; 0x1036 <DIO_VidSetPinValue+0x100>
	{
		switch(Copy_u8Port)
     f58:	89 81       	ldd	r24, Y+1	; 0x01
     f5a:	28 2f       	mov	r18, r24
     f5c:	30 e0       	ldi	r19, 0x00	; 0
     f5e:	3f 83       	std	Y+7, r19	; 0x07
     f60:	2e 83       	std	Y+6, r18	; 0x06
     f62:	8e 81       	ldd	r24, Y+6	; 0x06
     f64:	9f 81       	ldd	r25, Y+7	; 0x07
     f66:	81 30       	cpi	r24, 0x01	; 1
     f68:	91 05       	cpc	r25, r1
     f6a:	49 f1       	breq	.+82     	; 0xfbe <DIO_VidSetPinValue+0x88>
     f6c:	2e 81       	ldd	r18, Y+6	; 0x06
     f6e:	3f 81       	ldd	r19, Y+7	; 0x07
     f70:	22 30       	cpi	r18, 0x02	; 2
     f72:	31 05       	cpc	r19, r1
     f74:	2c f4       	brge	.+10     	; 0xf80 <DIO_VidSetPinValue+0x4a>
     f76:	8e 81       	ldd	r24, Y+6	; 0x06
     f78:	9f 81       	ldd	r25, Y+7	; 0x07
     f7a:	00 97       	sbiw	r24, 0x00	; 0
     f7c:	61 f0       	breq	.+24     	; 0xf96 <DIO_VidSetPinValue+0x60>
     f7e:	d2 c0       	rjmp	.+420    	; 0x1124 <DIO_VidSetPinValue+0x1ee>
     f80:	2e 81       	ldd	r18, Y+6	; 0x06
     f82:	3f 81       	ldd	r19, Y+7	; 0x07
     f84:	22 30       	cpi	r18, 0x02	; 2
     f86:	31 05       	cpc	r19, r1
     f88:	71 f1       	breq	.+92     	; 0xfe6 <DIO_VidSetPinValue+0xb0>
     f8a:	8e 81       	ldd	r24, Y+6	; 0x06
     f8c:	9f 81       	ldd	r25, Y+7	; 0x07
     f8e:	83 30       	cpi	r24, 0x03	; 3
     f90:	91 05       	cpc	r25, r1
     f92:	e9 f1       	breq	.+122    	; 0x100e <DIO_VidSetPinValue+0xd8>
     f94:	c7 c0       	rjmp	.+398    	; 0x1124 <DIO_VidSetPinValue+0x1ee>
		{
			case 0: SET_BIT(PORTA,Copy_u8Pin);break;
     f96:	ab e3       	ldi	r26, 0x3B	; 59
     f98:	b0 e0       	ldi	r27, 0x00	; 0
     f9a:	eb e3       	ldi	r30, 0x3B	; 59
     f9c:	f0 e0       	ldi	r31, 0x00	; 0
     f9e:	80 81       	ld	r24, Z
     fa0:	48 2f       	mov	r20, r24
     fa2:	8a 81       	ldd	r24, Y+2	; 0x02
     fa4:	28 2f       	mov	r18, r24
     fa6:	30 e0       	ldi	r19, 0x00	; 0
     fa8:	81 e0       	ldi	r24, 0x01	; 1
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	02 2e       	mov	r0, r18
     fae:	02 c0       	rjmp	.+4      	; 0xfb4 <DIO_VidSetPinValue+0x7e>
     fb0:	88 0f       	add	r24, r24
     fb2:	99 1f       	adc	r25, r25
     fb4:	0a 94       	dec	r0
     fb6:	e2 f7       	brpl	.-8      	; 0xfb0 <DIO_VidSetPinValue+0x7a>
     fb8:	84 2b       	or	r24, r20
     fba:	8c 93       	st	X, r24
     fbc:	b3 c0       	rjmp	.+358    	; 0x1124 <DIO_VidSetPinValue+0x1ee>
			case 1: SET_BIT(PORTB,Copy_u8Pin);break;
     fbe:	a8 e3       	ldi	r26, 0x38	; 56
     fc0:	b0 e0       	ldi	r27, 0x00	; 0
     fc2:	e8 e3       	ldi	r30, 0x38	; 56
     fc4:	f0 e0       	ldi	r31, 0x00	; 0
     fc6:	80 81       	ld	r24, Z
     fc8:	48 2f       	mov	r20, r24
     fca:	8a 81       	ldd	r24, Y+2	; 0x02
     fcc:	28 2f       	mov	r18, r24
     fce:	30 e0       	ldi	r19, 0x00	; 0
     fd0:	81 e0       	ldi	r24, 0x01	; 1
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	02 2e       	mov	r0, r18
     fd6:	02 c0       	rjmp	.+4      	; 0xfdc <DIO_VidSetPinValue+0xa6>
     fd8:	88 0f       	add	r24, r24
     fda:	99 1f       	adc	r25, r25
     fdc:	0a 94       	dec	r0
     fde:	e2 f7       	brpl	.-8      	; 0xfd8 <DIO_VidSetPinValue+0xa2>
     fe0:	84 2b       	or	r24, r20
     fe2:	8c 93       	st	X, r24
     fe4:	9f c0       	rjmp	.+318    	; 0x1124 <DIO_VidSetPinValue+0x1ee>
			case 2: SET_BIT(PORTC,Copy_u8Pin);break;
     fe6:	a5 e3       	ldi	r26, 0x35	; 53
     fe8:	b0 e0       	ldi	r27, 0x00	; 0
     fea:	e5 e3       	ldi	r30, 0x35	; 53
     fec:	f0 e0       	ldi	r31, 0x00	; 0
     fee:	80 81       	ld	r24, Z
     ff0:	48 2f       	mov	r20, r24
     ff2:	8a 81       	ldd	r24, Y+2	; 0x02
     ff4:	28 2f       	mov	r18, r24
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	81 e0       	ldi	r24, 0x01	; 1
     ffa:	90 e0       	ldi	r25, 0x00	; 0
     ffc:	02 2e       	mov	r0, r18
     ffe:	02 c0       	rjmp	.+4      	; 0x1004 <DIO_VidSetPinValue+0xce>
    1000:	88 0f       	add	r24, r24
    1002:	99 1f       	adc	r25, r25
    1004:	0a 94       	dec	r0
    1006:	e2 f7       	brpl	.-8      	; 0x1000 <DIO_VidSetPinValue+0xca>
    1008:	84 2b       	or	r24, r20
    100a:	8c 93       	st	X, r24
    100c:	8b c0       	rjmp	.+278    	; 0x1124 <DIO_VidSetPinValue+0x1ee>
			case 3: SET_BIT(PORTD,Copy_u8Pin);break;
    100e:	a2 e3       	ldi	r26, 0x32	; 50
    1010:	b0 e0       	ldi	r27, 0x00	; 0
    1012:	e2 e3       	ldi	r30, 0x32	; 50
    1014:	f0 e0       	ldi	r31, 0x00	; 0
    1016:	80 81       	ld	r24, Z
    1018:	48 2f       	mov	r20, r24
    101a:	8a 81       	ldd	r24, Y+2	; 0x02
    101c:	28 2f       	mov	r18, r24
    101e:	30 e0       	ldi	r19, 0x00	; 0
    1020:	81 e0       	ldi	r24, 0x01	; 1
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	02 2e       	mov	r0, r18
    1026:	02 c0       	rjmp	.+4      	; 0x102c <DIO_VidSetPinValue+0xf6>
    1028:	88 0f       	add	r24, r24
    102a:	99 1f       	adc	r25, r25
    102c:	0a 94       	dec	r0
    102e:	e2 f7       	brpl	.-8      	; 0x1028 <DIO_VidSetPinValue+0xf2>
    1030:	84 2b       	or	r24, r20
    1032:	8c 93       	st	X, r24
    1034:	77 c0       	rjmp	.+238    	; 0x1124 <DIO_VidSetPinValue+0x1ee>
		}
	}
	else if(Copy_u8Value==0)
    1036:	8b 81       	ldd	r24, Y+3	; 0x03
    1038:	88 23       	and	r24, r24
    103a:	09 f0       	breq	.+2      	; 0x103e <DIO_VidSetPinValue+0x108>
    103c:	73 c0       	rjmp	.+230    	; 0x1124 <DIO_VidSetPinValue+0x1ee>
	{
		switch(Copy_u8Port)
    103e:	89 81       	ldd	r24, Y+1	; 0x01
    1040:	28 2f       	mov	r18, r24
    1042:	30 e0       	ldi	r19, 0x00	; 0
    1044:	3d 83       	std	Y+5, r19	; 0x05
    1046:	2c 83       	std	Y+4, r18	; 0x04
    1048:	8c 81       	ldd	r24, Y+4	; 0x04
    104a:	9d 81       	ldd	r25, Y+5	; 0x05
    104c:	81 30       	cpi	r24, 0x01	; 1
    104e:	91 05       	cpc	r25, r1
    1050:	59 f1       	breq	.+86     	; 0x10a8 <DIO_VidSetPinValue+0x172>
    1052:	2c 81       	ldd	r18, Y+4	; 0x04
    1054:	3d 81       	ldd	r19, Y+5	; 0x05
    1056:	22 30       	cpi	r18, 0x02	; 2
    1058:	31 05       	cpc	r19, r1
    105a:	2c f4       	brge	.+10     	; 0x1066 <DIO_VidSetPinValue+0x130>
    105c:	8c 81       	ldd	r24, Y+4	; 0x04
    105e:	9d 81       	ldd	r25, Y+5	; 0x05
    1060:	00 97       	sbiw	r24, 0x00	; 0
    1062:	69 f0       	breq	.+26     	; 0x107e <DIO_VidSetPinValue+0x148>
    1064:	5f c0       	rjmp	.+190    	; 0x1124 <DIO_VidSetPinValue+0x1ee>
    1066:	2c 81       	ldd	r18, Y+4	; 0x04
    1068:	3d 81       	ldd	r19, Y+5	; 0x05
    106a:	22 30       	cpi	r18, 0x02	; 2
    106c:	31 05       	cpc	r19, r1
    106e:	89 f1       	breq	.+98     	; 0x10d2 <DIO_VidSetPinValue+0x19c>
    1070:	8c 81       	ldd	r24, Y+4	; 0x04
    1072:	9d 81       	ldd	r25, Y+5	; 0x05
    1074:	83 30       	cpi	r24, 0x03	; 3
    1076:	91 05       	cpc	r25, r1
    1078:	09 f4       	brne	.+2      	; 0x107c <DIO_VidSetPinValue+0x146>
    107a:	40 c0       	rjmp	.+128    	; 0x10fc <DIO_VidSetPinValue+0x1c6>
    107c:	53 c0       	rjmp	.+166    	; 0x1124 <DIO_VidSetPinValue+0x1ee>
		{
			case 0: CLEAR_BIT(PORTA,Copy_u8Pin);break;
    107e:	ab e3       	ldi	r26, 0x3B	; 59
    1080:	b0 e0       	ldi	r27, 0x00	; 0
    1082:	eb e3       	ldi	r30, 0x3B	; 59
    1084:	f0 e0       	ldi	r31, 0x00	; 0
    1086:	80 81       	ld	r24, Z
    1088:	48 2f       	mov	r20, r24
    108a:	8a 81       	ldd	r24, Y+2	; 0x02
    108c:	28 2f       	mov	r18, r24
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	81 e0       	ldi	r24, 0x01	; 1
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	02 2e       	mov	r0, r18
    1096:	02 c0       	rjmp	.+4      	; 0x109c <DIO_VidSetPinValue+0x166>
    1098:	88 0f       	add	r24, r24
    109a:	99 1f       	adc	r25, r25
    109c:	0a 94       	dec	r0
    109e:	e2 f7       	brpl	.-8      	; 0x1098 <DIO_VidSetPinValue+0x162>
    10a0:	80 95       	com	r24
    10a2:	84 23       	and	r24, r20
    10a4:	8c 93       	st	X, r24
    10a6:	3e c0       	rjmp	.+124    	; 0x1124 <DIO_VidSetPinValue+0x1ee>
			case 1: CLEAR_BIT(PORTB,Copy_u8Pin);break;
    10a8:	a8 e3       	ldi	r26, 0x38	; 56
    10aa:	b0 e0       	ldi	r27, 0x00	; 0
    10ac:	e8 e3       	ldi	r30, 0x38	; 56
    10ae:	f0 e0       	ldi	r31, 0x00	; 0
    10b0:	80 81       	ld	r24, Z
    10b2:	48 2f       	mov	r20, r24
    10b4:	8a 81       	ldd	r24, Y+2	; 0x02
    10b6:	28 2f       	mov	r18, r24
    10b8:	30 e0       	ldi	r19, 0x00	; 0
    10ba:	81 e0       	ldi	r24, 0x01	; 1
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	02 2e       	mov	r0, r18
    10c0:	02 c0       	rjmp	.+4      	; 0x10c6 <DIO_VidSetPinValue+0x190>
    10c2:	88 0f       	add	r24, r24
    10c4:	99 1f       	adc	r25, r25
    10c6:	0a 94       	dec	r0
    10c8:	e2 f7       	brpl	.-8      	; 0x10c2 <DIO_VidSetPinValue+0x18c>
    10ca:	80 95       	com	r24
    10cc:	84 23       	and	r24, r20
    10ce:	8c 93       	st	X, r24
    10d0:	29 c0       	rjmp	.+82     	; 0x1124 <DIO_VidSetPinValue+0x1ee>
			case 2: CLEAR_BIT(PORTC,Copy_u8Pin);break;
    10d2:	a5 e3       	ldi	r26, 0x35	; 53
    10d4:	b0 e0       	ldi	r27, 0x00	; 0
    10d6:	e5 e3       	ldi	r30, 0x35	; 53
    10d8:	f0 e0       	ldi	r31, 0x00	; 0
    10da:	80 81       	ld	r24, Z
    10dc:	48 2f       	mov	r20, r24
    10de:	8a 81       	ldd	r24, Y+2	; 0x02
    10e0:	28 2f       	mov	r18, r24
    10e2:	30 e0       	ldi	r19, 0x00	; 0
    10e4:	81 e0       	ldi	r24, 0x01	; 1
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	02 2e       	mov	r0, r18
    10ea:	02 c0       	rjmp	.+4      	; 0x10f0 <DIO_VidSetPinValue+0x1ba>
    10ec:	88 0f       	add	r24, r24
    10ee:	99 1f       	adc	r25, r25
    10f0:	0a 94       	dec	r0
    10f2:	e2 f7       	brpl	.-8      	; 0x10ec <DIO_VidSetPinValue+0x1b6>
    10f4:	80 95       	com	r24
    10f6:	84 23       	and	r24, r20
    10f8:	8c 93       	st	X, r24
    10fa:	14 c0       	rjmp	.+40     	; 0x1124 <DIO_VidSetPinValue+0x1ee>
			case 3: CLEAR_BIT(PORTD,Copy_u8Pin);break;
    10fc:	a2 e3       	ldi	r26, 0x32	; 50
    10fe:	b0 e0       	ldi	r27, 0x00	; 0
    1100:	e2 e3       	ldi	r30, 0x32	; 50
    1102:	f0 e0       	ldi	r31, 0x00	; 0
    1104:	80 81       	ld	r24, Z
    1106:	48 2f       	mov	r20, r24
    1108:	8a 81       	ldd	r24, Y+2	; 0x02
    110a:	28 2f       	mov	r18, r24
    110c:	30 e0       	ldi	r19, 0x00	; 0
    110e:	81 e0       	ldi	r24, 0x01	; 1
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	02 2e       	mov	r0, r18
    1114:	02 c0       	rjmp	.+4      	; 0x111a <DIO_VidSetPinValue+0x1e4>
    1116:	88 0f       	add	r24, r24
    1118:	99 1f       	adc	r25, r25
    111a:	0a 94       	dec	r0
    111c:	e2 f7       	brpl	.-8      	; 0x1116 <DIO_VidSetPinValue+0x1e0>
    111e:	80 95       	com	r24
    1120:	84 23       	and	r24, r20
    1122:	8c 93       	st	X, r24
		}
	}
}
    1124:	27 96       	adiw	r28, 0x07	; 7
    1126:	0f b6       	in	r0, 0x3f	; 63
    1128:	f8 94       	cli
    112a:	de bf       	out	0x3e, r29	; 62
    112c:	0f be       	out	0x3f, r0	; 63
    112e:	cd bf       	out	0x3d, r28	; 61
    1130:	cf 91       	pop	r28
    1132:	df 91       	pop	r29
    1134:	08 95       	ret

00001136 <DIO_VidSetPortDirection>:

void DIO_VidSetPortDirection(u8 Copy_u8Port,u8 Copy_u8Direction)
{
    1136:	df 93       	push	r29
    1138:	cf 93       	push	r28
    113a:	00 d0       	rcall	.+0      	; 0x113c <DIO_VidSetPortDirection+0x6>
    113c:	00 d0       	rcall	.+0      	; 0x113e <DIO_VidSetPortDirection+0x8>
    113e:	cd b7       	in	r28, 0x3d	; 61
    1140:	de b7       	in	r29, 0x3e	; 62
    1142:	89 83       	std	Y+1, r24	; 0x01
    1144:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8Port)
    1146:	89 81       	ldd	r24, Y+1	; 0x01
    1148:	28 2f       	mov	r18, r24
    114a:	30 e0       	ldi	r19, 0x00	; 0
    114c:	3c 83       	std	Y+4, r19	; 0x04
    114e:	2b 83       	std	Y+3, r18	; 0x03
    1150:	8b 81       	ldd	r24, Y+3	; 0x03
    1152:	9c 81       	ldd	r25, Y+4	; 0x04
    1154:	81 30       	cpi	r24, 0x01	; 1
    1156:	91 05       	cpc	r25, r1
    1158:	d1 f0       	breq	.+52     	; 0x118e <DIO_VidSetPortDirection+0x58>
    115a:	2b 81       	ldd	r18, Y+3	; 0x03
    115c:	3c 81       	ldd	r19, Y+4	; 0x04
    115e:	22 30       	cpi	r18, 0x02	; 2
    1160:	31 05       	cpc	r19, r1
    1162:	2c f4       	brge	.+10     	; 0x116e <DIO_VidSetPortDirection+0x38>
    1164:	8b 81       	ldd	r24, Y+3	; 0x03
    1166:	9c 81       	ldd	r25, Y+4	; 0x04
    1168:	00 97       	sbiw	r24, 0x00	; 0
    116a:	61 f0       	breq	.+24     	; 0x1184 <DIO_VidSetPortDirection+0x4e>
    116c:	1e c0       	rjmp	.+60     	; 0x11aa <DIO_VidSetPortDirection+0x74>
    116e:	2b 81       	ldd	r18, Y+3	; 0x03
    1170:	3c 81       	ldd	r19, Y+4	; 0x04
    1172:	22 30       	cpi	r18, 0x02	; 2
    1174:	31 05       	cpc	r19, r1
    1176:	81 f0       	breq	.+32     	; 0x1198 <DIO_VidSetPortDirection+0x62>
    1178:	8b 81       	ldd	r24, Y+3	; 0x03
    117a:	9c 81       	ldd	r25, Y+4	; 0x04
    117c:	83 30       	cpi	r24, 0x03	; 3
    117e:	91 05       	cpc	r25, r1
    1180:	81 f0       	breq	.+32     	; 0x11a2 <DIO_VidSetPortDirection+0x6c>
    1182:	13 c0       	rjmp	.+38     	; 0x11aa <DIO_VidSetPortDirection+0x74>
	{
		case 0: DDRA=Copy_u8Direction;break;
    1184:	ea e3       	ldi	r30, 0x3A	; 58
    1186:	f0 e0       	ldi	r31, 0x00	; 0
    1188:	8a 81       	ldd	r24, Y+2	; 0x02
    118a:	80 83       	st	Z, r24
    118c:	0e c0       	rjmp	.+28     	; 0x11aa <DIO_VidSetPortDirection+0x74>
		case 1: DDRB=Copy_u8Direction;break;
    118e:	e7 e3       	ldi	r30, 0x37	; 55
    1190:	f0 e0       	ldi	r31, 0x00	; 0
    1192:	8a 81       	ldd	r24, Y+2	; 0x02
    1194:	80 83       	st	Z, r24
    1196:	09 c0       	rjmp	.+18     	; 0x11aa <DIO_VidSetPortDirection+0x74>
		case 2: DDRC=Copy_u8Direction;break;
    1198:	e4 e3       	ldi	r30, 0x34	; 52
    119a:	f0 e0       	ldi	r31, 0x00	; 0
    119c:	8a 81       	ldd	r24, Y+2	; 0x02
    119e:	80 83       	st	Z, r24
    11a0:	04 c0       	rjmp	.+8      	; 0x11aa <DIO_VidSetPortDirection+0x74>
		case 3: DDRD=Copy_u8Direction;break;
    11a2:	e1 e3       	ldi	r30, 0x31	; 49
    11a4:	f0 e0       	ldi	r31, 0x00	; 0
    11a6:	8a 81       	ldd	r24, Y+2	; 0x02
    11a8:	80 83       	st	Z, r24
	}
}
    11aa:	0f 90       	pop	r0
    11ac:	0f 90       	pop	r0
    11ae:	0f 90       	pop	r0
    11b0:	0f 90       	pop	r0
    11b2:	cf 91       	pop	r28
    11b4:	df 91       	pop	r29
    11b6:	08 95       	ret

000011b8 <DIO_VidSetPortValue>:

void DIO_VidSetPortValue(u8 Copy_u8Port,u8 Copy_u8Value)
{
    11b8:	df 93       	push	r29
    11ba:	cf 93       	push	r28
    11bc:	00 d0       	rcall	.+0      	; 0x11be <DIO_VidSetPortValue+0x6>
    11be:	00 d0       	rcall	.+0      	; 0x11c0 <DIO_VidSetPortValue+0x8>
    11c0:	cd b7       	in	r28, 0x3d	; 61
    11c2:	de b7       	in	r29, 0x3e	; 62
    11c4:	89 83       	std	Y+1, r24	; 0x01
    11c6:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8Port)
    11c8:	89 81       	ldd	r24, Y+1	; 0x01
    11ca:	28 2f       	mov	r18, r24
    11cc:	30 e0       	ldi	r19, 0x00	; 0
    11ce:	3c 83       	std	Y+4, r19	; 0x04
    11d0:	2b 83       	std	Y+3, r18	; 0x03
    11d2:	8b 81       	ldd	r24, Y+3	; 0x03
    11d4:	9c 81       	ldd	r25, Y+4	; 0x04
    11d6:	81 30       	cpi	r24, 0x01	; 1
    11d8:	91 05       	cpc	r25, r1
    11da:	d1 f0       	breq	.+52     	; 0x1210 <DIO_VidSetPortValue+0x58>
    11dc:	2b 81       	ldd	r18, Y+3	; 0x03
    11de:	3c 81       	ldd	r19, Y+4	; 0x04
    11e0:	22 30       	cpi	r18, 0x02	; 2
    11e2:	31 05       	cpc	r19, r1
    11e4:	2c f4       	brge	.+10     	; 0x11f0 <DIO_VidSetPortValue+0x38>
    11e6:	8b 81       	ldd	r24, Y+3	; 0x03
    11e8:	9c 81       	ldd	r25, Y+4	; 0x04
    11ea:	00 97       	sbiw	r24, 0x00	; 0
    11ec:	61 f0       	breq	.+24     	; 0x1206 <DIO_VidSetPortValue+0x4e>
    11ee:	1e c0       	rjmp	.+60     	; 0x122c <DIO_VidSetPortValue+0x74>
    11f0:	2b 81       	ldd	r18, Y+3	; 0x03
    11f2:	3c 81       	ldd	r19, Y+4	; 0x04
    11f4:	22 30       	cpi	r18, 0x02	; 2
    11f6:	31 05       	cpc	r19, r1
    11f8:	81 f0       	breq	.+32     	; 0x121a <DIO_VidSetPortValue+0x62>
    11fa:	8b 81       	ldd	r24, Y+3	; 0x03
    11fc:	9c 81       	ldd	r25, Y+4	; 0x04
    11fe:	83 30       	cpi	r24, 0x03	; 3
    1200:	91 05       	cpc	r25, r1
    1202:	81 f0       	breq	.+32     	; 0x1224 <DIO_VidSetPortValue+0x6c>
    1204:	13 c0       	rjmp	.+38     	; 0x122c <DIO_VidSetPortValue+0x74>
	{
		case 0: PORTA=Copy_u8Value;break;
    1206:	eb e3       	ldi	r30, 0x3B	; 59
    1208:	f0 e0       	ldi	r31, 0x00	; 0
    120a:	8a 81       	ldd	r24, Y+2	; 0x02
    120c:	80 83       	st	Z, r24
    120e:	0e c0       	rjmp	.+28     	; 0x122c <DIO_VidSetPortValue+0x74>
		case 1: PORTB=Copy_u8Value;break;
    1210:	e8 e3       	ldi	r30, 0x38	; 56
    1212:	f0 e0       	ldi	r31, 0x00	; 0
    1214:	8a 81       	ldd	r24, Y+2	; 0x02
    1216:	80 83       	st	Z, r24
    1218:	09 c0       	rjmp	.+18     	; 0x122c <DIO_VidSetPortValue+0x74>
		case 2: PORTC=Copy_u8Value;break;
    121a:	e5 e3       	ldi	r30, 0x35	; 53
    121c:	f0 e0       	ldi	r31, 0x00	; 0
    121e:	8a 81       	ldd	r24, Y+2	; 0x02
    1220:	80 83       	st	Z, r24
    1222:	04 c0       	rjmp	.+8      	; 0x122c <DIO_VidSetPortValue+0x74>
		case 3: PORTD=Copy_u8Value;break;
    1224:	e2 e3       	ldi	r30, 0x32	; 50
    1226:	f0 e0       	ldi	r31, 0x00	; 0
    1228:	8a 81       	ldd	r24, Y+2	; 0x02
    122a:	80 83       	st	Z, r24
	}
}
    122c:	0f 90       	pop	r0
    122e:	0f 90       	pop	r0
    1230:	0f 90       	pop	r0
    1232:	0f 90       	pop	r0
    1234:	cf 91       	pop	r28
    1236:	df 91       	pop	r29
    1238:	08 95       	ret

0000123a <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 Copy_u8Port,u8 Copy_u8Pin)
{
    123a:	df 93       	push	r29
    123c:	cf 93       	push	r28
    123e:	00 d0       	rcall	.+0      	; 0x1240 <DIO_u8GetPinValue+0x6>
    1240:	00 d0       	rcall	.+0      	; 0x1242 <DIO_u8GetPinValue+0x8>
    1242:	0f 92       	push	r0
    1244:	cd b7       	in	r28, 0x3d	; 61
    1246:	de b7       	in	r29, 0x3e	; 62
    1248:	8a 83       	std	Y+2, r24	; 0x02
    124a:	6b 83       	std	Y+3, r22	; 0x03
	u8 tmp;
	
	switch(Copy_u8Port)
    124c:	8a 81       	ldd	r24, Y+2	; 0x02
    124e:	28 2f       	mov	r18, r24
    1250:	30 e0       	ldi	r19, 0x00	; 0
    1252:	3d 83       	std	Y+5, r19	; 0x05
    1254:	2c 83       	std	Y+4, r18	; 0x04
    1256:	4c 81       	ldd	r20, Y+4	; 0x04
    1258:	5d 81       	ldd	r21, Y+5	; 0x05
    125a:	41 30       	cpi	r20, 0x01	; 1
    125c:	51 05       	cpc	r21, r1
    125e:	41 f1       	breq	.+80     	; 0x12b0 <DIO_u8GetPinValue+0x76>
    1260:	8c 81       	ldd	r24, Y+4	; 0x04
    1262:	9d 81       	ldd	r25, Y+5	; 0x05
    1264:	82 30       	cpi	r24, 0x02	; 2
    1266:	91 05       	cpc	r25, r1
    1268:	34 f4       	brge	.+12     	; 0x1276 <DIO_u8GetPinValue+0x3c>
    126a:	2c 81       	ldd	r18, Y+4	; 0x04
    126c:	3d 81       	ldd	r19, Y+5	; 0x05
    126e:	21 15       	cp	r18, r1
    1270:	31 05       	cpc	r19, r1
    1272:	61 f0       	breq	.+24     	; 0x128c <DIO_u8GetPinValue+0x52>
    1274:	52 c0       	rjmp	.+164    	; 0x131a <DIO_u8GetPinValue+0xe0>
    1276:	4c 81       	ldd	r20, Y+4	; 0x04
    1278:	5d 81       	ldd	r21, Y+5	; 0x05
    127a:	42 30       	cpi	r20, 0x02	; 2
    127c:	51 05       	cpc	r21, r1
    127e:	51 f1       	breq	.+84     	; 0x12d4 <DIO_u8GetPinValue+0x9a>
    1280:	8c 81       	ldd	r24, Y+4	; 0x04
    1282:	9d 81       	ldd	r25, Y+5	; 0x05
    1284:	83 30       	cpi	r24, 0x03	; 3
    1286:	91 05       	cpc	r25, r1
    1288:	b9 f1       	breq	.+110    	; 0x12f8 <DIO_u8GetPinValue+0xbe>
    128a:	47 c0       	rjmp	.+142    	; 0x131a <DIO_u8GetPinValue+0xe0>
	{
		case 0: tmp = GET_BIT(PINA,Copy_u8Pin);break;
    128c:	e9 e3       	ldi	r30, 0x39	; 57
    128e:	f0 e0       	ldi	r31, 0x00	; 0
    1290:	80 81       	ld	r24, Z
    1292:	28 2f       	mov	r18, r24
    1294:	30 e0       	ldi	r19, 0x00	; 0
    1296:	8b 81       	ldd	r24, Y+3	; 0x03
    1298:	88 2f       	mov	r24, r24
    129a:	90 e0       	ldi	r25, 0x00	; 0
    129c:	a9 01       	movw	r20, r18
    129e:	02 c0       	rjmp	.+4      	; 0x12a4 <DIO_u8GetPinValue+0x6a>
    12a0:	55 95       	asr	r21
    12a2:	47 95       	ror	r20
    12a4:	8a 95       	dec	r24
    12a6:	e2 f7       	brpl	.-8      	; 0x12a0 <DIO_u8GetPinValue+0x66>
    12a8:	ca 01       	movw	r24, r20
    12aa:	81 70       	andi	r24, 0x01	; 1
    12ac:	89 83       	std	Y+1, r24	; 0x01
    12ae:	35 c0       	rjmp	.+106    	; 0x131a <DIO_u8GetPinValue+0xe0>
		case 1: tmp = GET_BIT(PINB,Copy_u8Pin);break;
    12b0:	e6 e3       	ldi	r30, 0x36	; 54
    12b2:	f0 e0       	ldi	r31, 0x00	; 0
    12b4:	80 81       	ld	r24, Z
    12b6:	28 2f       	mov	r18, r24
    12b8:	30 e0       	ldi	r19, 0x00	; 0
    12ba:	8b 81       	ldd	r24, Y+3	; 0x03
    12bc:	88 2f       	mov	r24, r24
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	a9 01       	movw	r20, r18
    12c2:	02 c0       	rjmp	.+4      	; 0x12c8 <DIO_u8GetPinValue+0x8e>
    12c4:	55 95       	asr	r21
    12c6:	47 95       	ror	r20
    12c8:	8a 95       	dec	r24
    12ca:	e2 f7       	brpl	.-8      	; 0x12c4 <DIO_u8GetPinValue+0x8a>
    12cc:	ca 01       	movw	r24, r20
    12ce:	81 70       	andi	r24, 0x01	; 1
    12d0:	89 83       	std	Y+1, r24	; 0x01
    12d2:	23 c0       	rjmp	.+70     	; 0x131a <DIO_u8GetPinValue+0xe0>
		case 2: tmp = GET_BIT(PINC,Copy_u8Pin);break;
    12d4:	e3 e3       	ldi	r30, 0x33	; 51
    12d6:	f0 e0       	ldi	r31, 0x00	; 0
    12d8:	80 81       	ld	r24, Z
    12da:	28 2f       	mov	r18, r24
    12dc:	30 e0       	ldi	r19, 0x00	; 0
    12de:	8b 81       	ldd	r24, Y+3	; 0x03
    12e0:	88 2f       	mov	r24, r24
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	a9 01       	movw	r20, r18
    12e6:	02 c0       	rjmp	.+4      	; 0x12ec <DIO_u8GetPinValue+0xb2>
    12e8:	55 95       	asr	r21
    12ea:	47 95       	ror	r20
    12ec:	8a 95       	dec	r24
    12ee:	e2 f7       	brpl	.-8      	; 0x12e8 <DIO_u8GetPinValue+0xae>
    12f0:	ca 01       	movw	r24, r20
    12f2:	81 70       	andi	r24, 0x01	; 1
    12f4:	89 83       	std	Y+1, r24	; 0x01
    12f6:	11 c0       	rjmp	.+34     	; 0x131a <DIO_u8GetPinValue+0xe0>
		case 3: tmp = GET_BIT(PIND,Copy_u8Pin);break;
    12f8:	e0 e3       	ldi	r30, 0x30	; 48
    12fa:	f0 e0       	ldi	r31, 0x00	; 0
    12fc:	80 81       	ld	r24, Z
    12fe:	28 2f       	mov	r18, r24
    1300:	30 e0       	ldi	r19, 0x00	; 0
    1302:	8b 81       	ldd	r24, Y+3	; 0x03
    1304:	88 2f       	mov	r24, r24
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	a9 01       	movw	r20, r18
    130a:	02 c0       	rjmp	.+4      	; 0x1310 <DIO_u8GetPinValue+0xd6>
    130c:	55 95       	asr	r21
    130e:	47 95       	ror	r20
    1310:	8a 95       	dec	r24
    1312:	e2 f7       	brpl	.-8      	; 0x130c <DIO_u8GetPinValue+0xd2>
    1314:	ca 01       	movw	r24, r20
    1316:	81 70       	andi	r24, 0x01	; 1
    1318:	89 83       	std	Y+1, r24	; 0x01
	}
	return tmp;
    131a:	89 81       	ldd	r24, Y+1	; 0x01
}
    131c:	0f 90       	pop	r0
    131e:	0f 90       	pop	r0
    1320:	0f 90       	pop	r0
    1322:	0f 90       	pop	r0
    1324:	0f 90       	pop	r0
    1326:	cf 91       	pop	r28
    1328:	df 91       	pop	r29
    132a:	08 95       	ret

0000132c <DIO_VidTogglePin>:

void DIO_VidTogglePin(u8 Copy_u8Port,u8 Copy_u8Pin)
{
    132c:	df 93       	push	r29
    132e:	cf 93       	push	r28
    1330:	00 d0       	rcall	.+0      	; 0x1332 <DIO_VidTogglePin+0x6>
    1332:	00 d0       	rcall	.+0      	; 0x1334 <DIO_VidTogglePin+0x8>
    1334:	cd b7       	in	r28, 0x3d	; 61
    1336:	de b7       	in	r29, 0x3e	; 62
    1338:	89 83       	std	Y+1, r24	; 0x01
    133a:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8Port)
    133c:	89 81       	ldd	r24, Y+1	; 0x01
    133e:	28 2f       	mov	r18, r24
    1340:	30 e0       	ldi	r19, 0x00	; 0
    1342:	3c 83       	std	Y+4, r19	; 0x04
    1344:	2b 83       	std	Y+3, r18	; 0x03
    1346:	8b 81       	ldd	r24, Y+3	; 0x03
    1348:	9c 81       	ldd	r25, Y+4	; 0x04
    134a:	81 30       	cpi	r24, 0x01	; 1
    134c:	91 05       	cpc	r25, r1
    134e:	49 f1       	breq	.+82     	; 0x13a2 <DIO_VidTogglePin+0x76>
    1350:	2b 81       	ldd	r18, Y+3	; 0x03
    1352:	3c 81       	ldd	r19, Y+4	; 0x04
    1354:	22 30       	cpi	r18, 0x02	; 2
    1356:	31 05       	cpc	r19, r1
    1358:	2c f4       	brge	.+10     	; 0x1364 <DIO_VidTogglePin+0x38>
    135a:	8b 81       	ldd	r24, Y+3	; 0x03
    135c:	9c 81       	ldd	r25, Y+4	; 0x04
    135e:	00 97       	sbiw	r24, 0x00	; 0
    1360:	61 f0       	breq	.+24     	; 0x137a <DIO_VidTogglePin+0x4e>
    1362:	5a c0       	rjmp	.+180    	; 0x1418 <DIO_VidTogglePin+0xec>
    1364:	2b 81       	ldd	r18, Y+3	; 0x03
    1366:	3c 81       	ldd	r19, Y+4	; 0x04
    1368:	22 30       	cpi	r18, 0x02	; 2
    136a:	31 05       	cpc	r19, r1
    136c:	71 f1       	breq	.+92     	; 0x13ca <DIO_VidTogglePin+0x9e>
    136e:	8b 81       	ldd	r24, Y+3	; 0x03
    1370:	9c 81       	ldd	r25, Y+4	; 0x04
    1372:	83 30       	cpi	r24, 0x03	; 3
    1374:	91 05       	cpc	r25, r1
    1376:	e9 f1       	breq	.+122    	; 0x13f2 <DIO_VidTogglePin+0xc6>
    1378:	4f c0       	rjmp	.+158    	; 0x1418 <DIO_VidTogglePin+0xec>
	{
		case 0: TOGGLE_BIT(PORTA,Copy_u8Pin);break;
    137a:	ab e3       	ldi	r26, 0x3B	; 59
    137c:	b0 e0       	ldi	r27, 0x00	; 0
    137e:	eb e3       	ldi	r30, 0x3B	; 59
    1380:	f0 e0       	ldi	r31, 0x00	; 0
    1382:	80 81       	ld	r24, Z
    1384:	48 2f       	mov	r20, r24
    1386:	8a 81       	ldd	r24, Y+2	; 0x02
    1388:	28 2f       	mov	r18, r24
    138a:	30 e0       	ldi	r19, 0x00	; 0
    138c:	81 e0       	ldi	r24, 0x01	; 1
    138e:	90 e0       	ldi	r25, 0x00	; 0
    1390:	02 2e       	mov	r0, r18
    1392:	02 c0       	rjmp	.+4      	; 0x1398 <DIO_VidTogglePin+0x6c>
    1394:	88 0f       	add	r24, r24
    1396:	99 1f       	adc	r25, r25
    1398:	0a 94       	dec	r0
    139a:	e2 f7       	brpl	.-8      	; 0x1394 <DIO_VidTogglePin+0x68>
    139c:	84 27       	eor	r24, r20
    139e:	8c 93       	st	X, r24
    13a0:	3b c0       	rjmp	.+118    	; 0x1418 <DIO_VidTogglePin+0xec>
		case 1: TOGGLE_BIT(PORTB,Copy_u8Pin);break;
    13a2:	a8 e3       	ldi	r26, 0x38	; 56
    13a4:	b0 e0       	ldi	r27, 0x00	; 0
    13a6:	e8 e3       	ldi	r30, 0x38	; 56
    13a8:	f0 e0       	ldi	r31, 0x00	; 0
    13aa:	80 81       	ld	r24, Z
    13ac:	48 2f       	mov	r20, r24
    13ae:	8a 81       	ldd	r24, Y+2	; 0x02
    13b0:	28 2f       	mov	r18, r24
    13b2:	30 e0       	ldi	r19, 0x00	; 0
    13b4:	81 e0       	ldi	r24, 0x01	; 1
    13b6:	90 e0       	ldi	r25, 0x00	; 0
    13b8:	02 2e       	mov	r0, r18
    13ba:	02 c0       	rjmp	.+4      	; 0x13c0 <DIO_VidTogglePin+0x94>
    13bc:	88 0f       	add	r24, r24
    13be:	99 1f       	adc	r25, r25
    13c0:	0a 94       	dec	r0
    13c2:	e2 f7       	brpl	.-8      	; 0x13bc <DIO_VidTogglePin+0x90>
    13c4:	84 27       	eor	r24, r20
    13c6:	8c 93       	st	X, r24
    13c8:	27 c0       	rjmp	.+78     	; 0x1418 <DIO_VidTogglePin+0xec>
		case 2: TOGGLE_BIT(PORTC,Copy_u8Pin);break;
    13ca:	a5 e3       	ldi	r26, 0x35	; 53
    13cc:	b0 e0       	ldi	r27, 0x00	; 0
    13ce:	e5 e3       	ldi	r30, 0x35	; 53
    13d0:	f0 e0       	ldi	r31, 0x00	; 0
    13d2:	80 81       	ld	r24, Z
    13d4:	48 2f       	mov	r20, r24
    13d6:	8a 81       	ldd	r24, Y+2	; 0x02
    13d8:	28 2f       	mov	r18, r24
    13da:	30 e0       	ldi	r19, 0x00	; 0
    13dc:	81 e0       	ldi	r24, 0x01	; 1
    13de:	90 e0       	ldi	r25, 0x00	; 0
    13e0:	02 2e       	mov	r0, r18
    13e2:	02 c0       	rjmp	.+4      	; 0x13e8 <DIO_VidTogglePin+0xbc>
    13e4:	88 0f       	add	r24, r24
    13e6:	99 1f       	adc	r25, r25
    13e8:	0a 94       	dec	r0
    13ea:	e2 f7       	brpl	.-8      	; 0x13e4 <DIO_VidTogglePin+0xb8>
    13ec:	84 27       	eor	r24, r20
    13ee:	8c 93       	st	X, r24
    13f0:	13 c0       	rjmp	.+38     	; 0x1418 <DIO_VidTogglePin+0xec>
		case 3: TOGGLE_BIT(PORTD,Copy_u8Pin);break;
    13f2:	a2 e3       	ldi	r26, 0x32	; 50
    13f4:	b0 e0       	ldi	r27, 0x00	; 0
    13f6:	e2 e3       	ldi	r30, 0x32	; 50
    13f8:	f0 e0       	ldi	r31, 0x00	; 0
    13fa:	80 81       	ld	r24, Z
    13fc:	48 2f       	mov	r20, r24
    13fe:	8a 81       	ldd	r24, Y+2	; 0x02
    1400:	28 2f       	mov	r18, r24
    1402:	30 e0       	ldi	r19, 0x00	; 0
    1404:	81 e0       	ldi	r24, 0x01	; 1
    1406:	90 e0       	ldi	r25, 0x00	; 0
    1408:	02 2e       	mov	r0, r18
    140a:	02 c0       	rjmp	.+4      	; 0x1410 <DIO_VidTogglePin+0xe4>
    140c:	88 0f       	add	r24, r24
    140e:	99 1f       	adc	r25, r25
    1410:	0a 94       	dec	r0
    1412:	e2 f7       	brpl	.-8      	; 0x140c <DIO_VidTogglePin+0xe0>
    1414:	84 27       	eor	r24, r20
    1416:	8c 93       	st	X, r24
	}
}
    1418:	0f 90       	pop	r0
    141a:	0f 90       	pop	r0
    141c:	0f 90       	pop	r0
    141e:	0f 90       	pop	r0
    1420:	cf 91       	pop	r28
    1422:	df 91       	pop	r29
    1424:	08 95       	ret

00001426 <KPD_VidInt>:
u8 KPD_u8ColPins[3]={KPD_C0_PIN,KPD_C1_PIN,KPD_C2_PIN};



void KPD_VidInt()
{
    1426:	df 93       	push	r29
    1428:	cf 93       	push	r28
    142a:	cd b7       	in	r28, 0x3d	; 61
    142c:	de b7       	in	r29, 0x3e	; 62
	DIO_VidSetPortDirection(KPD_PORT,0x0f);
    142e:	82 e0       	ldi	r24, 0x02	; 2
    1430:	6f e0       	ldi	r22, 0x0F	; 15
    1432:	0e 94 9b 08 	call	0x1136	; 0x1136 <DIO_VidSetPortDirection>
	DIO_VidSetPortValue(KPD_PORT,0xff);
    1436:	82 e0       	ldi	r24, 0x02	; 2
    1438:	6f ef       	ldi	r22, 0xFF	; 255
    143a:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <DIO_VidSetPortValue>
}
    143e:	cf 91       	pop	r28
    1440:	df 91       	pop	r29
    1442:	08 95       	ret

00001444 <KPD_u8PressedKey>:

u8 KPD_u8PressedKey()
{
    1444:	df 93       	push	r29
    1446:	cf 93       	push	r28
    1448:	cd b7       	in	r28, 0x3d	; 61
    144a:	de b7       	in	r29, 0x3e	; 62
    144c:	63 97       	sbiw	r28, 0x13	; 19
    144e:	0f b6       	in	r0, 0x3f	; 63
    1450:	f8 94       	cli
    1452:	de bf       	out	0x3e, r29	; 62
    1454:	0f be       	out	0x3f, r0	; 63
    1456:	cd bf       	out	0x3d, r28	; 61
	u8 count_R, count_C,Pressed,Returned=KPD_CHEK,Flag=0;
    1458:	8f ef       	ldi	r24, 0xFF	; 255
    145a:	88 8b       	std	Y+16, r24	; 0x10
    145c:	1f 86       	std	Y+15, r1	; 0x0f
	for(count_R=0;count_R<4;count_R++)
    145e:	1b 8a       	std	Y+19, r1	; 0x13
    1460:	ce c0       	rjmp	.+412    	; 0x15fe <KPD_u8PressedKey+0x1ba>
	{
		DIO_VidSetPinValue(KPD_PORT,KPD_u8RowPins[count_R],DIO_LOW);
    1462:	8b 89       	ldd	r24, Y+19	; 0x13
    1464:	88 2f       	mov	r24, r24
    1466:	90 e0       	ldi	r25, 0x00	; 0
    1468:	fc 01       	movw	r30, r24
    146a:	ec 58       	subi	r30, 0x8C	; 140
    146c:	fe 4f       	sbci	r31, 0xFE	; 254
    146e:	90 81       	ld	r25, Z
    1470:	82 e0       	ldi	r24, 0x02	; 2
    1472:	69 2f       	mov	r22, r25
    1474:	40 e0       	ldi	r20, 0x00	; 0
    1476:	0e 94 9b 07 	call	0xf36	; 0xf36 <DIO_VidSetPinValue>
		for(count_C=0;count_C<3;count_C++)
    147a:	1a 8a       	std	Y+18, r1	; 0x12
    147c:	aa c0       	rjmp	.+340    	; 0x15d2 <KPD_u8PressedKey+0x18e>
		{
			Pressed=DIO_u8GetPinValue(KPD_PORT,KPD_u8ColPins[count_C]);
    147e:	8a 89       	ldd	r24, Y+18	; 0x12
    1480:	88 2f       	mov	r24, r24
    1482:	90 e0       	ldi	r25, 0x00	; 0
    1484:	fc 01       	movw	r30, r24
    1486:	e8 58       	subi	r30, 0x88	; 136
    1488:	fe 4f       	sbci	r31, 0xFE	; 254
    148a:	90 81       	ld	r25, Z
    148c:	82 e0       	ldi	r24, 0x02	; 2
    148e:	69 2f       	mov	r22, r25
    1490:	0e 94 1d 09 	call	0x123a	; 0x123a <DIO_u8GetPinValue>
    1494:	89 8b       	std	Y+17, r24	; 0x11
			if(Pressed==DIO_LOW)
    1496:	89 89       	ldd	r24, Y+17	; 0x11
    1498:	88 23       	and	r24, r24
    149a:	09 f0       	breq	.+2      	; 0x149e <KPD_u8PressedKey+0x5a>
    149c:	97 c0       	rjmp	.+302    	; 0x15cc <KPD_u8PressedKey+0x188>
    149e:	80 e0       	ldi	r24, 0x00	; 0
    14a0:	90 e0       	ldi	r25, 0x00	; 0
    14a2:	a0 ea       	ldi	r26, 0xA0	; 160
    14a4:	b1 e4       	ldi	r27, 0x41	; 65
    14a6:	8b 87       	std	Y+11, r24	; 0x0b
    14a8:	9c 87       	std	Y+12, r25	; 0x0c
    14aa:	ad 87       	std	Y+13, r26	; 0x0d
    14ac:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14ae:	6b 85       	ldd	r22, Y+11	; 0x0b
    14b0:	7c 85       	ldd	r23, Y+12	; 0x0c
    14b2:	8d 85       	ldd	r24, Y+13	; 0x0d
    14b4:	9e 85       	ldd	r25, Y+14	; 0x0e
    14b6:	20 e0       	ldi	r18, 0x00	; 0
    14b8:	30 e0       	ldi	r19, 0x00	; 0
    14ba:	4a ef       	ldi	r20, 0xFA	; 250
    14bc:	54 e4       	ldi	r21, 0x44	; 68
    14be:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    14c2:	dc 01       	movw	r26, r24
    14c4:	cb 01       	movw	r24, r22
    14c6:	8f 83       	std	Y+7, r24	; 0x07
    14c8:	98 87       	std	Y+8, r25	; 0x08
    14ca:	a9 87       	std	Y+9, r26	; 0x09
    14cc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    14ce:	6f 81       	ldd	r22, Y+7	; 0x07
    14d0:	78 85       	ldd	r23, Y+8	; 0x08
    14d2:	89 85       	ldd	r24, Y+9	; 0x09
    14d4:	9a 85       	ldd	r25, Y+10	; 0x0a
    14d6:	20 e0       	ldi	r18, 0x00	; 0
    14d8:	30 e0       	ldi	r19, 0x00	; 0
    14da:	40 e8       	ldi	r20, 0x80	; 128
    14dc:	5f e3       	ldi	r21, 0x3F	; 63
    14de:	0e 94 a9 03 	call	0x752	; 0x752 <__ltsf2>
    14e2:	88 23       	and	r24, r24
    14e4:	2c f4       	brge	.+10     	; 0x14f0 <KPD_u8PressedKey+0xac>
		__ticks = 1;
    14e6:	81 e0       	ldi	r24, 0x01	; 1
    14e8:	90 e0       	ldi	r25, 0x00	; 0
    14ea:	9e 83       	std	Y+6, r25	; 0x06
    14ec:	8d 83       	std	Y+5, r24	; 0x05
    14ee:	3f c0       	rjmp	.+126    	; 0x156e <KPD_u8PressedKey+0x12a>
	else if (__tmp > 65535)
    14f0:	6f 81       	ldd	r22, Y+7	; 0x07
    14f2:	78 85       	ldd	r23, Y+8	; 0x08
    14f4:	89 85       	ldd	r24, Y+9	; 0x09
    14f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    14f8:	20 e0       	ldi	r18, 0x00	; 0
    14fa:	3f ef       	ldi	r19, 0xFF	; 255
    14fc:	4f e7       	ldi	r20, 0x7F	; 127
    14fe:	57 e4       	ldi	r21, 0x47	; 71
    1500:	0e 94 49 03 	call	0x692	; 0x692 <__gtsf2>
    1504:	18 16       	cp	r1, r24
    1506:	4c f5       	brge	.+82     	; 0x155a <KPD_u8PressedKey+0x116>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1508:	6b 85       	ldd	r22, Y+11	; 0x0b
    150a:	7c 85       	ldd	r23, Y+12	; 0x0c
    150c:	8d 85       	ldd	r24, Y+13	; 0x0d
    150e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1510:	20 e0       	ldi	r18, 0x00	; 0
    1512:	30 e0       	ldi	r19, 0x00	; 0
    1514:	40 e2       	ldi	r20, 0x20	; 32
    1516:	51 e4       	ldi	r21, 0x41	; 65
    1518:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    151c:	dc 01       	movw	r26, r24
    151e:	cb 01       	movw	r24, r22
    1520:	bc 01       	movw	r22, r24
    1522:	cd 01       	movw	r24, r26
    1524:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1528:	dc 01       	movw	r26, r24
    152a:	cb 01       	movw	r24, r22
    152c:	9e 83       	std	Y+6, r25	; 0x06
    152e:	8d 83       	std	Y+5, r24	; 0x05
    1530:	0f c0       	rjmp	.+30     	; 0x1550 <KPD_u8PressedKey+0x10c>
    1532:	88 ec       	ldi	r24, 0xC8	; 200
    1534:	90 e0       	ldi	r25, 0x00	; 0
    1536:	9c 83       	std	Y+4, r25	; 0x04
    1538:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    153a:	8b 81       	ldd	r24, Y+3	; 0x03
    153c:	9c 81       	ldd	r25, Y+4	; 0x04
    153e:	01 97       	sbiw	r24, 0x01	; 1
    1540:	f1 f7       	brne	.-4      	; 0x153e <KPD_u8PressedKey+0xfa>
    1542:	9c 83       	std	Y+4, r25	; 0x04
    1544:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1546:	8d 81       	ldd	r24, Y+5	; 0x05
    1548:	9e 81       	ldd	r25, Y+6	; 0x06
    154a:	01 97       	sbiw	r24, 0x01	; 1
    154c:	9e 83       	std	Y+6, r25	; 0x06
    154e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1550:	8d 81       	ldd	r24, Y+5	; 0x05
    1552:	9e 81       	ldd	r25, Y+6	; 0x06
    1554:	00 97       	sbiw	r24, 0x00	; 0
    1556:	69 f7       	brne	.-38     	; 0x1532 <KPD_u8PressedKey+0xee>
    1558:	21 c0       	rjmp	.+66     	; 0x159c <KPD_u8PressedKey+0x158>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    155a:	6f 81       	ldd	r22, Y+7	; 0x07
    155c:	78 85       	ldd	r23, Y+8	; 0x08
    155e:	89 85       	ldd	r24, Y+9	; 0x09
    1560:	9a 85       	ldd	r25, Y+10	; 0x0a
    1562:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1566:	dc 01       	movw	r26, r24
    1568:	cb 01       	movw	r24, r22
    156a:	9e 83       	std	Y+6, r25	; 0x06
    156c:	8d 83       	std	Y+5, r24	; 0x05
    156e:	8d 81       	ldd	r24, Y+5	; 0x05
    1570:	9e 81       	ldd	r25, Y+6	; 0x06
    1572:	9a 83       	std	Y+2, r25	; 0x02
    1574:	89 83       	std	Y+1, r24	; 0x01
    1576:	89 81       	ldd	r24, Y+1	; 0x01
    1578:	9a 81       	ldd	r25, Y+2	; 0x02
    157a:	01 97       	sbiw	r24, 0x01	; 1
    157c:	f1 f7       	brne	.-4      	; 0x157a <KPD_u8PressedKey+0x136>
    157e:	9a 83       	std	Y+2, r25	; 0x02
    1580:	89 83       	std	Y+1, r24	; 0x01
    1582:	0c c0       	rjmp	.+24     	; 0x159c <KPD_u8PressedKey+0x158>
			{
				_delay_ms(20);
				while(Pressed==DIO_LOW)
					Pressed=DIO_u8GetPinValue(KPD_PORT,KPD_u8ColPins[count_C]);
    1584:	8a 89       	ldd	r24, Y+18	; 0x12
    1586:	88 2f       	mov	r24, r24
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	fc 01       	movw	r30, r24
    158c:	e8 58       	subi	r30, 0x88	; 136
    158e:	fe 4f       	sbci	r31, 0xFE	; 254
    1590:	90 81       	ld	r25, Z
    1592:	82 e0       	ldi	r24, 0x02	; 2
    1594:	69 2f       	mov	r22, r25
    1596:	0e 94 1d 09 	call	0x123a	; 0x123a <DIO_u8GetPinValue>
    159a:	89 8b       	std	Y+17, r24	; 0x11
		{
			Pressed=DIO_u8GetPinValue(KPD_PORT,KPD_u8ColPins[count_C]);
			if(Pressed==DIO_LOW)
			{
				_delay_ms(20);
				while(Pressed==DIO_LOW)
    159c:	89 89       	ldd	r24, Y+17	; 0x11
    159e:	88 23       	and	r24, r24
    15a0:	89 f3       	breq	.-30     	; 0x1584 <KPD_u8PressedKey+0x140>
					Pressed=DIO_u8GetPinValue(KPD_PORT,KPD_u8ColPins[count_C]);

				Returned = KPD_u8Keys[count_R][count_C];
    15a2:	8b 89       	ldd	r24, Y+19	; 0x13
    15a4:	28 2f       	mov	r18, r24
    15a6:	30 e0       	ldi	r19, 0x00	; 0
    15a8:	8a 89       	ldd	r24, Y+18	; 0x12
    15aa:	48 2f       	mov	r20, r24
    15ac:	50 e0       	ldi	r21, 0x00	; 0
    15ae:	c9 01       	movw	r24, r18
    15b0:	88 0f       	add	r24, r24
    15b2:	99 1f       	adc	r25, r25
    15b4:	82 0f       	add	r24, r18
    15b6:	93 1f       	adc	r25, r19
    15b8:	84 0f       	add	r24, r20
    15ba:	95 1f       	adc	r25, r21
    15bc:	fc 01       	movw	r30, r24
    15be:	e8 59       	subi	r30, 0x98	; 152
    15c0:	fe 4f       	sbci	r31, 0xFE	; 254
    15c2:	80 81       	ld	r24, Z
    15c4:	88 8b       	std	Y+16, r24	; 0x10
				Flag=1;
    15c6:	81 e0       	ldi	r24, 0x01	; 1
    15c8:	8f 87       	std	Y+15, r24	; 0x0f
    15ca:	07 c0       	rjmp	.+14     	; 0x15da <KPD_u8PressedKey+0x196>
{
	u8 count_R, count_C,Pressed,Returned=KPD_CHEK,Flag=0;
	for(count_R=0;count_R<4;count_R++)
	{
		DIO_VidSetPinValue(KPD_PORT,KPD_u8RowPins[count_R],DIO_LOW);
		for(count_C=0;count_C<3;count_C++)
    15cc:	8a 89       	ldd	r24, Y+18	; 0x12
    15ce:	8f 5f       	subi	r24, 0xFF	; 255
    15d0:	8a 8b       	std	Y+18, r24	; 0x12
    15d2:	8a 89       	ldd	r24, Y+18	; 0x12
    15d4:	83 30       	cpi	r24, 0x03	; 3
    15d6:	08 f4       	brcc	.+2      	; 0x15da <KPD_u8PressedKey+0x196>
    15d8:	52 cf       	rjmp	.-348    	; 0x147e <KPD_u8PressedKey+0x3a>
				Flag=1;
				break;
			}

		}
		DIO_VidSetPinValue(KPD_PORT,KPD_u8RowPins[count_R],DIO_HIGH);
    15da:	8b 89       	ldd	r24, Y+19	; 0x13
    15dc:	88 2f       	mov	r24, r24
    15de:	90 e0       	ldi	r25, 0x00	; 0
    15e0:	fc 01       	movw	r30, r24
    15e2:	ec 58       	subi	r30, 0x8C	; 140
    15e4:	fe 4f       	sbci	r31, 0xFE	; 254
    15e6:	90 81       	ld	r25, Z
    15e8:	82 e0       	ldi	r24, 0x02	; 2
    15ea:	69 2f       	mov	r22, r25
    15ec:	41 e0       	ldi	r20, 0x01	; 1
    15ee:	0e 94 9b 07 	call	0xf36	; 0xf36 <DIO_VidSetPinValue>
		if(Flag==1)
    15f2:	8f 85       	ldd	r24, Y+15	; 0x0f
    15f4:	81 30       	cpi	r24, 0x01	; 1
    15f6:	39 f0       	breq	.+14     	; 0x1606 <KPD_u8PressedKey+0x1c2>
}

u8 KPD_u8PressedKey()
{
	u8 count_R, count_C,Pressed,Returned=KPD_CHEK,Flag=0;
	for(count_R=0;count_R<4;count_R++)
    15f8:	8b 89       	ldd	r24, Y+19	; 0x13
    15fa:	8f 5f       	subi	r24, 0xFF	; 255
    15fc:	8b 8b       	std	Y+19, r24	; 0x13
    15fe:	8b 89       	ldd	r24, Y+19	; 0x13
    1600:	84 30       	cpi	r24, 0x04	; 4
    1602:	08 f4       	brcc	.+2      	; 0x1606 <KPD_u8PressedKey+0x1c2>
    1604:	2e cf       	rjmp	.-420    	; 0x1462 <KPD_u8PressedKey+0x1e>
		}
		DIO_VidSetPinValue(KPD_PORT,KPD_u8RowPins[count_R],DIO_HIGH);
		if(Flag==1)
			break;
	}
	return Returned;
    1606:	88 89       	ldd	r24, Y+16	; 0x10
}
    1608:	63 96       	adiw	r28, 0x13	; 19
    160a:	0f b6       	in	r0, 0x3f	; 63
    160c:	f8 94       	cli
    160e:	de bf       	out	0x3e, r29	; 62
    1610:	0f be       	out	0x3f, r0	; 63
    1612:	cd bf       	out	0x3d, r28	; 61
    1614:	cf 91       	pop	r28
    1616:	df 91       	pop	r29
    1618:	08 95       	ret

0000161a <LCD_VidSendCMD>:
#include "DIO.h"
#include "LCD.h"


void LCD_VidSendCMD(u8 Copy_U8CMD)
{
    161a:	df 93       	push	r29
    161c:	cf 93       	push	r28
    161e:	cd b7       	in	r28, 0x3d	; 61
    1620:	de b7       	in	r29, 0x3e	; 62
    1622:	2f 97       	sbiw	r28, 0x0f	; 15
    1624:	0f b6       	in	r0, 0x3f	; 63
    1626:	f8 94       	cli
    1628:	de bf       	out	0x3e, r29	; 62
    162a:	0f be       	out	0x3f, r0	; 63
    162c:	cd bf       	out	0x3d, r28	; 61
    162e:	8f 87       	std	Y+15, r24	; 0x0f

	DIO_VidSetPinValue(LCD_CMD_PORT,RS,DIO_LOW);
    1630:	81 e0       	ldi	r24, 0x01	; 1
    1632:	65 e0       	ldi	r22, 0x05	; 5
    1634:	40 e0       	ldi	r20, 0x00	; 0
    1636:	0e 94 9b 07 	call	0xf36	; 0xf36 <DIO_VidSetPinValue>
	DIO_VidSetPinValue(LCD_CMD_PORT,RW,DIO_LOW);
    163a:	81 e0       	ldi	r24, 0x01	; 1
    163c:	66 e0       	ldi	r22, 0x06	; 6
    163e:	40 e0       	ldi	r20, 0x00	; 0
    1640:	0e 94 9b 07 	call	0xf36	; 0xf36 <DIO_VidSetPinValue>
	DIO_VidSetPortValue(LCD_DATA_PORT,Copy_U8CMD);
    1644:	80 e0       	ldi	r24, 0x00	; 0
    1646:	6f 85       	ldd	r22, Y+15	; 0x0f
    1648:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <DIO_VidSetPortValue>

	DIO_VidSetPinValue(LCD_CMD_PORT,EN,DIO_HIGH);
    164c:	81 e0       	ldi	r24, 0x01	; 1
    164e:	67 e0       	ldi	r22, 0x07	; 7
    1650:	41 e0       	ldi	r20, 0x01	; 1
    1652:	0e 94 9b 07 	call	0xf36	; 0xf36 <DIO_VidSetPinValue>
    1656:	80 e0       	ldi	r24, 0x00	; 0
    1658:	90 e0       	ldi	r25, 0x00	; 0
    165a:	a0 e8       	ldi	r26, 0x80	; 128
    165c:	bf e3       	ldi	r27, 0x3F	; 63
    165e:	8b 87       	std	Y+11, r24	; 0x0b
    1660:	9c 87       	std	Y+12, r25	; 0x0c
    1662:	ad 87       	std	Y+13, r26	; 0x0d
    1664:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1666:	6b 85       	ldd	r22, Y+11	; 0x0b
    1668:	7c 85       	ldd	r23, Y+12	; 0x0c
    166a:	8d 85       	ldd	r24, Y+13	; 0x0d
    166c:	9e 85       	ldd	r25, Y+14	; 0x0e
    166e:	20 e0       	ldi	r18, 0x00	; 0
    1670:	30 e0       	ldi	r19, 0x00	; 0
    1672:	4a ef       	ldi	r20, 0xFA	; 250
    1674:	54 e4       	ldi	r21, 0x44	; 68
    1676:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    167a:	dc 01       	movw	r26, r24
    167c:	cb 01       	movw	r24, r22
    167e:	8f 83       	std	Y+7, r24	; 0x07
    1680:	98 87       	std	Y+8, r25	; 0x08
    1682:	a9 87       	std	Y+9, r26	; 0x09
    1684:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1686:	6f 81       	ldd	r22, Y+7	; 0x07
    1688:	78 85       	ldd	r23, Y+8	; 0x08
    168a:	89 85       	ldd	r24, Y+9	; 0x09
    168c:	9a 85       	ldd	r25, Y+10	; 0x0a
    168e:	20 e0       	ldi	r18, 0x00	; 0
    1690:	30 e0       	ldi	r19, 0x00	; 0
    1692:	40 e8       	ldi	r20, 0x80	; 128
    1694:	5f e3       	ldi	r21, 0x3F	; 63
    1696:	0e 94 a9 03 	call	0x752	; 0x752 <__ltsf2>
    169a:	88 23       	and	r24, r24
    169c:	2c f4       	brge	.+10     	; 0x16a8 <LCD_VidSendCMD+0x8e>
		__ticks = 1;
    169e:	81 e0       	ldi	r24, 0x01	; 1
    16a0:	90 e0       	ldi	r25, 0x00	; 0
    16a2:	9e 83       	std	Y+6, r25	; 0x06
    16a4:	8d 83       	std	Y+5, r24	; 0x05
    16a6:	3f c0       	rjmp	.+126    	; 0x1726 <LCD_VidSendCMD+0x10c>
	else if (__tmp > 65535)
    16a8:	6f 81       	ldd	r22, Y+7	; 0x07
    16aa:	78 85       	ldd	r23, Y+8	; 0x08
    16ac:	89 85       	ldd	r24, Y+9	; 0x09
    16ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    16b0:	20 e0       	ldi	r18, 0x00	; 0
    16b2:	3f ef       	ldi	r19, 0xFF	; 255
    16b4:	4f e7       	ldi	r20, 0x7F	; 127
    16b6:	57 e4       	ldi	r21, 0x47	; 71
    16b8:	0e 94 49 03 	call	0x692	; 0x692 <__gtsf2>
    16bc:	18 16       	cp	r1, r24
    16be:	4c f5       	brge	.+82     	; 0x1712 <LCD_VidSendCMD+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16c0:	6b 85       	ldd	r22, Y+11	; 0x0b
    16c2:	7c 85       	ldd	r23, Y+12	; 0x0c
    16c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    16c6:	9e 85       	ldd	r25, Y+14	; 0x0e
    16c8:	20 e0       	ldi	r18, 0x00	; 0
    16ca:	30 e0       	ldi	r19, 0x00	; 0
    16cc:	40 e2       	ldi	r20, 0x20	; 32
    16ce:	51 e4       	ldi	r21, 0x41	; 65
    16d0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    16d4:	dc 01       	movw	r26, r24
    16d6:	cb 01       	movw	r24, r22
    16d8:	bc 01       	movw	r22, r24
    16da:	cd 01       	movw	r24, r26
    16dc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    16e0:	dc 01       	movw	r26, r24
    16e2:	cb 01       	movw	r24, r22
    16e4:	9e 83       	std	Y+6, r25	; 0x06
    16e6:	8d 83       	std	Y+5, r24	; 0x05
    16e8:	0f c0       	rjmp	.+30     	; 0x1708 <LCD_VidSendCMD+0xee>
    16ea:	88 ec       	ldi	r24, 0xC8	; 200
    16ec:	90 e0       	ldi	r25, 0x00	; 0
    16ee:	9c 83       	std	Y+4, r25	; 0x04
    16f0:	8b 83       	std	Y+3, r24	; 0x03
    16f2:	8b 81       	ldd	r24, Y+3	; 0x03
    16f4:	9c 81       	ldd	r25, Y+4	; 0x04
    16f6:	01 97       	sbiw	r24, 0x01	; 1
    16f8:	f1 f7       	brne	.-4      	; 0x16f6 <LCD_VidSendCMD+0xdc>
    16fa:	9c 83       	std	Y+4, r25	; 0x04
    16fc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16fe:	8d 81       	ldd	r24, Y+5	; 0x05
    1700:	9e 81       	ldd	r25, Y+6	; 0x06
    1702:	01 97       	sbiw	r24, 0x01	; 1
    1704:	9e 83       	std	Y+6, r25	; 0x06
    1706:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1708:	8d 81       	ldd	r24, Y+5	; 0x05
    170a:	9e 81       	ldd	r25, Y+6	; 0x06
    170c:	00 97       	sbiw	r24, 0x00	; 0
    170e:	69 f7       	brne	.-38     	; 0x16ea <LCD_VidSendCMD+0xd0>
    1710:	14 c0       	rjmp	.+40     	; 0x173a <LCD_VidSendCMD+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1712:	6f 81       	ldd	r22, Y+7	; 0x07
    1714:	78 85       	ldd	r23, Y+8	; 0x08
    1716:	89 85       	ldd	r24, Y+9	; 0x09
    1718:	9a 85       	ldd	r25, Y+10	; 0x0a
    171a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    171e:	dc 01       	movw	r26, r24
    1720:	cb 01       	movw	r24, r22
    1722:	9e 83       	std	Y+6, r25	; 0x06
    1724:	8d 83       	std	Y+5, r24	; 0x05
    1726:	8d 81       	ldd	r24, Y+5	; 0x05
    1728:	9e 81       	ldd	r25, Y+6	; 0x06
    172a:	9a 83       	std	Y+2, r25	; 0x02
    172c:	89 83       	std	Y+1, r24	; 0x01
    172e:	89 81       	ldd	r24, Y+1	; 0x01
    1730:	9a 81       	ldd	r25, Y+2	; 0x02
    1732:	01 97       	sbiw	r24, 0x01	; 1
    1734:	f1 f7       	brne	.-4      	; 0x1732 <LCD_VidSendCMD+0x118>
    1736:	9a 83       	std	Y+2, r25	; 0x02
    1738:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	DIO_VidSetPinValue(LCD_CMD_PORT,EN,DIO_LOW);
    173a:	81 e0       	ldi	r24, 0x01	; 1
    173c:	67 e0       	ldi	r22, 0x07	; 7
    173e:	40 e0       	ldi	r20, 0x00	; 0
    1740:	0e 94 9b 07 	call	0xf36	; 0xf36 <DIO_VidSetPinValue>

}
    1744:	2f 96       	adiw	r28, 0x0f	; 15
    1746:	0f b6       	in	r0, 0x3f	; 63
    1748:	f8 94       	cli
    174a:	de bf       	out	0x3e, r29	; 62
    174c:	0f be       	out	0x3f, r0	; 63
    174e:	cd bf       	out	0x3d, r28	; 61
    1750:	cf 91       	pop	r28
    1752:	df 91       	pop	r29
    1754:	08 95       	ret

00001756 <LCD_VidSendNumber>:

void LCD_VidSendNumber(u32 Copy_U8Number)
{
    1756:	df 93       	push	r29
    1758:	cf 93       	push	r28
    175a:	cd b7       	in	r28, 0x3d	; 61
    175c:	de b7       	in	r29, 0x3e	; 62
    175e:	29 97       	sbiw	r28, 0x09	; 9
    1760:	0f b6       	in	r0, 0x3f	; 63
    1762:	f8 94       	cli
    1764:	de bf       	out	0x3e, r29	; 62
    1766:	0f be       	out	0x3f, r0	; 63
    1768:	cd bf       	out	0x3d, r28	; 61
    176a:	99 87       	std	Y+9, r25	; 0x09
    176c:	88 87       	std	Y+8, r24	; 0x08
	u32 local_remainder=0;
    176e:	1f 82       	std	Y+7, r1	; 0x07
    1770:	1e 82       	std	Y+6, r1	; 0x06
	u32 local_reversed=0;
    1772:	1d 82       	std	Y+5, r1	; 0x05
    1774:	1c 82       	std	Y+4, r1	; 0x04
	u32 tmp=Copy_U8Number;
    1776:	88 85       	ldd	r24, Y+8	; 0x08
    1778:	99 85       	ldd	r25, Y+9	; 0x09
    177a:	9b 83       	std	Y+3, r25	; 0x03
    177c:	8a 83       	std	Y+2, r24	; 0x02
	u8 count=0;
    177e:	19 82       	std	Y+1, r1	; 0x01
    1780:	28 c0       	rjmp	.+80     	; 0x17d2 <LCD_VidSendNumber+0x7c>

	while(Copy_U8Number!=0)
	{
		local_remainder=Copy_U8Number%10;
    1782:	88 85       	ldd	r24, Y+8	; 0x08
    1784:	99 85       	ldd	r25, Y+9	; 0x09
    1786:	2a e0       	ldi	r18, 0x0A	; 10
    1788:	30 e0       	ldi	r19, 0x00	; 0
    178a:	b9 01       	movw	r22, r18
    178c:	0e 94 0a 12 	call	0x2414	; 0x2414 <__udivmodhi4>
    1790:	9f 83       	std	Y+7, r25	; 0x07
    1792:	8e 83       	std	Y+6, r24	; 0x06
		local_reversed=(local_reversed*10)+local_remainder;
    1794:	8c 81       	ldd	r24, Y+4	; 0x04
    1796:	9d 81       	ldd	r25, Y+5	; 0x05
    1798:	9c 01       	movw	r18, r24
    179a:	22 0f       	add	r18, r18
    179c:	33 1f       	adc	r19, r19
    179e:	c9 01       	movw	r24, r18
    17a0:	88 0f       	add	r24, r24
    17a2:	99 1f       	adc	r25, r25
    17a4:	88 0f       	add	r24, r24
    17a6:	99 1f       	adc	r25, r25
    17a8:	28 0f       	add	r18, r24
    17aa:	39 1f       	adc	r19, r25
    17ac:	8e 81       	ldd	r24, Y+6	; 0x06
    17ae:	9f 81       	ldd	r25, Y+7	; 0x07
    17b0:	82 0f       	add	r24, r18
    17b2:	93 1f       	adc	r25, r19
    17b4:	9d 83       	std	Y+5, r25	; 0x05
    17b6:	8c 83       	std	Y+4, r24	; 0x04
		Copy_U8Number/=10;
    17b8:	88 85       	ldd	r24, Y+8	; 0x08
    17ba:	99 85       	ldd	r25, Y+9	; 0x09
    17bc:	2a e0       	ldi	r18, 0x0A	; 10
    17be:	30 e0       	ldi	r19, 0x00	; 0
    17c0:	b9 01       	movw	r22, r18
    17c2:	0e 94 0a 12 	call	0x2414	; 0x2414 <__udivmodhi4>
    17c6:	cb 01       	movw	r24, r22
    17c8:	99 87       	std	Y+9, r25	; 0x09
    17ca:	88 87       	std	Y+8, r24	; 0x08
		count++;
    17cc:	89 81       	ldd	r24, Y+1	; 0x01
    17ce:	8f 5f       	subi	r24, 0xFF	; 255
    17d0:	89 83       	std	Y+1, r24	; 0x01
	u32 local_remainder=0;
	u32 local_reversed=0;
	u32 tmp=Copy_U8Number;
	u8 count=0;

	while(Copy_U8Number!=0)
    17d2:	88 85       	ldd	r24, Y+8	; 0x08
    17d4:	99 85       	ldd	r25, Y+9	; 0x09
    17d6:	00 97       	sbiw	r24, 0x00	; 0
    17d8:	a1 f6       	brne	.-88     	; 0x1782 <LCD_VidSendNumber+0x2c>
    17da:	17 c0       	rjmp	.+46     	; 0x180a <LCD_VidSendNumber+0xb4>
		count++;
	}

	while(count!=0)
	{
		LCD_VidSendChar((local_reversed%10)+'0');
    17dc:	8c 81       	ldd	r24, Y+4	; 0x04
    17de:	9d 81       	ldd	r25, Y+5	; 0x05
    17e0:	2a e0       	ldi	r18, 0x0A	; 10
    17e2:	30 e0       	ldi	r19, 0x00	; 0
    17e4:	b9 01       	movw	r22, r18
    17e6:	0e 94 0a 12 	call	0x2414	; 0x2414 <__udivmodhi4>
    17ea:	80 5d       	subi	r24, 0xD0	; 208
    17ec:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <LCD_VidSendChar>
		local_reversed/=10;
    17f0:	8c 81       	ldd	r24, Y+4	; 0x04
    17f2:	9d 81       	ldd	r25, Y+5	; 0x05
    17f4:	2a e0       	ldi	r18, 0x0A	; 10
    17f6:	30 e0       	ldi	r19, 0x00	; 0
    17f8:	b9 01       	movw	r22, r18
    17fa:	0e 94 0a 12 	call	0x2414	; 0x2414 <__udivmodhi4>
    17fe:	cb 01       	movw	r24, r22
    1800:	9d 83       	std	Y+5, r25	; 0x05
    1802:	8c 83       	std	Y+4, r24	; 0x04
		count--;
    1804:	89 81       	ldd	r24, Y+1	; 0x01
    1806:	81 50       	subi	r24, 0x01	; 1
    1808:	89 83       	std	Y+1, r24	; 0x01
		local_reversed=(local_reversed*10)+local_remainder;
		Copy_U8Number/=10;
		count++;
	}

	while(count!=0)
    180a:	89 81       	ldd	r24, Y+1	; 0x01
    180c:	88 23       	and	r24, r24
    180e:	31 f7       	brne	.-52     	; 0x17dc <LCD_VidSendNumber+0x86>
	{
		LCD_VidSendChar((local_reversed%10)+'0');
		local_reversed/=10;
		count--;
	}
	if(tmp==0)
    1810:	8a 81       	ldd	r24, Y+2	; 0x02
    1812:	9b 81       	ldd	r25, Y+3	; 0x03
    1814:	00 97       	sbiw	r24, 0x00	; 0
    1816:	19 f4       	brne	.+6      	; 0x181e <LCD_VidSendNumber+0xc8>
		LCD_VidSendChar('0');
    1818:	80 e3       	ldi	r24, 0x30	; 48
    181a:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <LCD_VidSendChar>

}
    181e:	29 96       	adiw	r28, 0x09	; 9
    1820:	0f b6       	in	r0, 0x3f	; 63
    1822:	f8 94       	cli
    1824:	de bf       	out	0x3e, r29	; 62
    1826:	0f be       	out	0x3f, r0	; 63
    1828:	cd bf       	out	0x3d, r28	; 61
    182a:	cf 91       	pop	r28
    182c:	df 91       	pop	r29
    182e:	08 95       	ret

00001830 <LCD_VidSendNumberFloat>:

void LCD_VidSendNumberFloat(f32 Copy_Value)
{
    1830:	df 93       	push	r29
    1832:	cf 93       	push	r28
    1834:	cd b7       	in	r28, 0x3d	; 61
    1836:	de b7       	in	r29, 0x3e	; 62
    1838:	62 97       	sbiw	r28, 0x12	; 18
    183a:	0f b6       	in	r0, 0x3f	; 63
    183c:	f8 94       	cli
    183e:	de bf       	out	0x3e, r29	; 62
    1840:	0f be       	out	0x3f, r0	; 63
    1842:	cd bf       	out	0x3d, r28	; 61
    1844:	6f 87       	std	Y+15, r22	; 0x0f
    1846:	78 8b       	std	Y+16, r23	; 0x10
    1848:	89 8b       	std	Y+17, r24	; 0x11
    184a:	9a 8b       	std	Y+18, r25	; 0x12
	u32 local_remainder=0;
    184c:	1e 86       	std	Y+14, r1	; 0x0e
    184e:	1d 86       	std	Y+13, r1	; 0x0d
	u32 local_reversed=0;
    1850:	1c 86       	std	Y+12, r1	; 0x0c
    1852:	1b 86       	std	Y+11, r1	; 0x0b

	u32 tmp_1=Copy_Value;
    1854:	6f 85       	ldd	r22, Y+15	; 0x0f
    1856:	78 89       	ldd	r23, Y+16	; 0x10
    1858:	89 89       	ldd	r24, Y+17	; 0x11
    185a:	9a 89       	ldd	r25, Y+18	; 0x12
    185c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1860:	dc 01       	movw	r26, r24
    1862:	cb 01       	movw	r24, r22
    1864:	9a 87       	std	Y+10, r25	; 0x0a
    1866:	89 87       	std	Y+9, r24	; 0x09
	f32 tmp=Copy_Value-tmp_1;
    1868:	89 85       	ldd	r24, Y+9	; 0x09
    186a:	9a 85       	ldd	r25, Y+10	; 0x0a
    186c:	cc 01       	movw	r24, r24
    186e:	a0 e0       	ldi	r26, 0x00	; 0
    1870:	b0 e0       	ldi	r27, 0x00	; 0
    1872:	bc 01       	movw	r22, r24
    1874:	cd 01       	movw	r24, r26
    1876:	0e 94 2d 04 	call	0x85a	; 0x85a <__floatunsisf>
    187a:	9b 01       	movw	r18, r22
    187c:	ac 01       	movw	r20, r24
    187e:	6f 85       	ldd	r22, Y+15	; 0x0f
    1880:	78 89       	ldd	r23, Y+16	; 0x10
    1882:	89 89       	ldd	r24, Y+17	; 0x11
    1884:	9a 89       	ldd	r25, Y+18	; 0x12
    1886:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
    188a:	dc 01       	movw	r26, r24
    188c:	cb 01       	movw	r24, r22
    188e:	8d 83       	std	Y+5, r24	; 0x05
    1890:	9e 83       	std	Y+6, r25	; 0x06
    1892:	af 83       	std	Y+7, r26	; 0x07
    1894:	b8 87       	std	Y+8, r27	; 0x08

	u8 count=0,count1=3;
    1896:	1c 82       	std	Y+4, r1	; 0x04
    1898:	83 e0       	ldi	r24, 0x03	; 3
    189a:	8b 83       	std	Y+3, r24	; 0x03

	u32 Copy_U8Number=tmp*1000;
    189c:	6d 81       	ldd	r22, Y+5	; 0x05
    189e:	7e 81       	ldd	r23, Y+6	; 0x06
    18a0:	8f 81       	ldd	r24, Y+7	; 0x07
    18a2:	98 85       	ldd	r25, Y+8	; 0x08
    18a4:	20 e0       	ldi	r18, 0x00	; 0
    18a6:	30 e0       	ldi	r19, 0x00	; 0
    18a8:	4a e7       	ldi	r20, 0x7A	; 122
    18aa:	54 e4       	ldi	r21, 0x44	; 68
    18ac:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    18b0:	dc 01       	movw	r26, r24
    18b2:	cb 01       	movw	r24, r22
    18b4:	bc 01       	movw	r22, r24
    18b6:	cd 01       	movw	r24, r26
    18b8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    18bc:	dc 01       	movw	r26, r24
    18be:	cb 01       	movw	r24, r22
    18c0:	9a 83       	std	Y+2, r25	; 0x02
    18c2:	89 83       	std	Y+1, r24	; 0x01



	if(Copy_Value<1)
    18c4:	6f 85       	ldd	r22, Y+15	; 0x0f
    18c6:	78 89       	ldd	r23, Y+16	; 0x10
    18c8:	89 89       	ldd	r24, Y+17	; 0x11
    18ca:	9a 89       	ldd	r25, Y+18	; 0x12
    18cc:	20 e0       	ldi	r18, 0x00	; 0
    18ce:	30 e0       	ldi	r19, 0x00	; 0
    18d0:	40 e8       	ldi	r20, 0x80	; 128
    18d2:	5f e3       	ldi	r21, 0x3F	; 63
    18d4:	0e 94 a9 03 	call	0x752	; 0x752 <__ltsf2>
    18d8:	88 23       	and	r24, r24
    18da:	64 f5       	brge	.+88     	; 0x1934 <LCD_VidSendNumberFloat+0x104>
		LCD_VidSendChar('0');
    18dc:	80 e3       	ldi	r24, 0x30	; 48
    18de:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <LCD_VidSendChar>
    18e2:	28 c0       	rjmp	.+80     	; 0x1934 <LCD_VidSendNumberFloat+0x104>

	while(tmp_1!=0)
	{
		local_remainder=tmp_1%10;
    18e4:	89 85       	ldd	r24, Y+9	; 0x09
    18e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    18e8:	2a e0       	ldi	r18, 0x0A	; 10
    18ea:	30 e0       	ldi	r19, 0x00	; 0
    18ec:	b9 01       	movw	r22, r18
    18ee:	0e 94 0a 12 	call	0x2414	; 0x2414 <__udivmodhi4>
    18f2:	9e 87       	std	Y+14, r25	; 0x0e
    18f4:	8d 87       	std	Y+13, r24	; 0x0d
		local_reversed=(local_reversed*10)+local_remainder;
    18f6:	8b 85       	ldd	r24, Y+11	; 0x0b
    18f8:	9c 85       	ldd	r25, Y+12	; 0x0c
    18fa:	9c 01       	movw	r18, r24
    18fc:	22 0f       	add	r18, r18
    18fe:	33 1f       	adc	r19, r19
    1900:	c9 01       	movw	r24, r18
    1902:	88 0f       	add	r24, r24
    1904:	99 1f       	adc	r25, r25
    1906:	88 0f       	add	r24, r24
    1908:	99 1f       	adc	r25, r25
    190a:	28 0f       	add	r18, r24
    190c:	39 1f       	adc	r19, r25
    190e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1910:	9e 85       	ldd	r25, Y+14	; 0x0e
    1912:	82 0f       	add	r24, r18
    1914:	93 1f       	adc	r25, r19
    1916:	9c 87       	std	Y+12, r25	; 0x0c
    1918:	8b 87       	std	Y+11, r24	; 0x0b
		tmp_1/=10;
    191a:	89 85       	ldd	r24, Y+9	; 0x09
    191c:	9a 85       	ldd	r25, Y+10	; 0x0a
    191e:	2a e0       	ldi	r18, 0x0A	; 10
    1920:	30 e0       	ldi	r19, 0x00	; 0
    1922:	b9 01       	movw	r22, r18
    1924:	0e 94 0a 12 	call	0x2414	; 0x2414 <__udivmodhi4>
    1928:	cb 01       	movw	r24, r22
    192a:	9a 87       	std	Y+10, r25	; 0x0a
    192c:	89 87       	std	Y+9, r24	; 0x09
		count++;
    192e:	8c 81       	ldd	r24, Y+4	; 0x04
    1930:	8f 5f       	subi	r24, 0xFF	; 255
    1932:	8c 83       	std	Y+4, r24	; 0x04


	if(Copy_Value<1)
		LCD_VidSendChar('0');

	while(tmp_1!=0)
    1934:	89 85       	ldd	r24, Y+9	; 0x09
    1936:	9a 85       	ldd	r25, Y+10	; 0x0a
    1938:	00 97       	sbiw	r24, 0x00	; 0
    193a:	a1 f6       	brne	.-88     	; 0x18e4 <LCD_VidSendNumberFloat+0xb4>
    193c:	17 c0       	rjmp	.+46     	; 0x196c <LCD_VidSendNumberFloat+0x13c>
		tmp_1/=10;
		count++;
	}
	while(count!=0)
	{
		LCD_VidSendChar((local_reversed%10)+'0');
    193e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1940:	9c 85       	ldd	r25, Y+12	; 0x0c
    1942:	2a e0       	ldi	r18, 0x0A	; 10
    1944:	30 e0       	ldi	r19, 0x00	; 0
    1946:	b9 01       	movw	r22, r18
    1948:	0e 94 0a 12 	call	0x2414	; 0x2414 <__udivmodhi4>
    194c:	80 5d       	subi	r24, 0xD0	; 208
    194e:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <LCD_VidSendChar>
		local_reversed/=10;
    1952:	8b 85       	ldd	r24, Y+11	; 0x0b
    1954:	9c 85       	ldd	r25, Y+12	; 0x0c
    1956:	2a e0       	ldi	r18, 0x0A	; 10
    1958:	30 e0       	ldi	r19, 0x00	; 0
    195a:	b9 01       	movw	r22, r18
    195c:	0e 94 0a 12 	call	0x2414	; 0x2414 <__udivmodhi4>
    1960:	cb 01       	movw	r24, r22
    1962:	9c 87       	std	Y+12, r25	; 0x0c
    1964:	8b 87       	std	Y+11, r24	; 0x0b
		count--;
    1966:	8c 81       	ldd	r24, Y+4	; 0x04
    1968:	81 50       	subi	r24, 0x01	; 1
    196a:	8c 83       	std	Y+4, r24	; 0x04
		local_remainder=tmp_1%10;
		local_reversed=(local_reversed*10)+local_remainder;
		tmp_1/=10;
		count++;
	}
	while(count!=0)
    196c:	8c 81       	ldd	r24, Y+4	; 0x04
    196e:	88 23       	and	r24, r24
    1970:	31 f7       	brne	.-52     	; 0x193e <LCD_VidSendNumberFloat+0x10e>
		LCD_VidSendChar((local_reversed%10)+'0');
		local_reversed/=10;
		count--;
	}

	LCD_VidSendChar('.');
    1972:	8e e2       	ldi	r24, 0x2E	; 46
    1974:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <LCD_VidSendChar>
	if(Copy_U8Number/100 ==0)
    1978:	89 81       	ldd	r24, Y+1	; 0x01
    197a:	9a 81       	ldd	r25, Y+2	; 0x02
    197c:	84 36       	cpi	r24, 0x64	; 100
    197e:	91 05       	cpc	r25, r1
    1980:	20 f4       	brcc	.+8      	; 0x198a <LCD_VidSendNumberFloat+0x15a>
		LCD_VidSendChar('0');
    1982:	80 e3       	ldi	r24, 0x30	; 48
    1984:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <LCD_VidSendChar>
    1988:	31 c0       	rjmp	.+98     	; 0x19ec <LCD_VidSendNumberFloat+0x1bc>
	else if (Copy_U8Number/10 ==0)
    198a:	89 81       	ldd	r24, Y+1	; 0x01
    198c:	9a 81       	ldd	r25, Y+2	; 0x02
    198e:	8a 30       	cpi	r24, 0x0A	; 10
    1990:	91 05       	cpc	r25, r1
    1992:	60 f5       	brcc	.+88     	; 0x19ec <LCD_VidSendNumberFloat+0x1bc>
			LCD_VidSendChar('0');
    1994:	80 e3       	ldi	r24, 0x30	; 48
    1996:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <LCD_VidSendChar>
    199a:	28 c0       	rjmp	.+80     	; 0x19ec <LCD_VidSendNumberFloat+0x1bc>

	while(Copy_U8Number!=0)
	{
		local_remainder=Copy_U8Number%10;
    199c:	89 81       	ldd	r24, Y+1	; 0x01
    199e:	9a 81       	ldd	r25, Y+2	; 0x02
    19a0:	2a e0       	ldi	r18, 0x0A	; 10
    19a2:	30 e0       	ldi	r19, 0x00	; 0
    19a4:	b9 01       	movw	r22, r18
    19a6:	0e 94 0a 12 	call	0x2414	; 0x2414 <__udivmodhi4>
    19aa:	9e 87       	std	Y+14, r25	; 0x0e
    19ac:	8d 87       	std	Y+13, r24	; 0x0d
		local_reversed=(local_reversed*10)+local_remainder;
    19ae:	8b 85       	ldd	r24, Y+11	; 0x0b
    19b0:	9c 85       	ldd	r25, Y+12	; 0x0c
    19b2:	9c 01       	movw	r18, r24
    19b4:	22 0f       	add	r18, r18
    19b6:	33 1f       	adc	r19, r19
    19b8:	c9 01       	movw	r24, r18
    19ba:	88 0f       	add	r24, r24
    19bc:	99 1f       	adc	r25, r25
    19be:	88 0f       	add	r24, r24
    19c0:	99 1f       	adc	r25, r25
    19c2:	28 0f       	add	r18, r24
    19c4:	39 1f       	adc	r19, r25
    19c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    19c8:	9e 85       	ldd	r25, Y+14	; 0x0e
    19ca:	82 0f       	add	r24, r18
    19cc:	93 1f       	adc	r25, r19
    19ce:	9c 87       	std	Y+12, r25	; 0x0c
    19d0:	8b 87       	std	Y+11, r24	; 0x0b
		Copy_U8Number/=10;
    19d2:	89 81       	ldd	r24, Y+1	; 0x01
    19d4:	9a 81       	ldd	r25, Y+2	; 0x02
    19d6:	2a e0       	ldi	r18, 0x0A	; 10
    19d8:	30 e0       	ldi	r19, 0x00	; 0
    19da:	b9 01       	movw	r22, r18
    19dc:	0e 94 0a 12 	call	0x2414	; 0x2414 <__udivmodhi4>
    19e0:	cb 01       	movw	r24, r22
    19e2:	9a 83       	std	Y+2, r25	; 0x02
    19e4:	89 83       	std	Y+1, r24	; 0x01
		count++;
    19e6:	8c 81       	ldd	r24, Y+4	; 0x04
    19e8:	8f 5f       	subi	r24, 0xFF	; 255
    19ea:	8c 83       	std	Y+4, r24	; 0x04
	if(Copy_U8Number/100 ==0)
		LCD_VidSendChar('0');
	else if (Copy_U8Number/10 ==0)
			LCD_VidSendChar('0');

	while(Copy_U8Number!=0)
    19ec:	89 81       	ldd	r24, Y+1	; 0x01
    19ee:	9a 81       	ldd	r25, Y+2	; 0x02
    19f0:	00 97       	sbiw	r24, 0x00	; 0
    19f2:	a1 f6       	brne	.-88     	; 0x199c <LCD_VidSendNumberFloat+0x16c>
    19f4:	17 c0       	rjmp	.+46     	; 0x1a24 <LCD_VidSendNumberFloat+0x1f4>
		Copy_U8Number/=10;
		count++;
	}
	while(count!=0)
	{
		LCD_VidSendChar((local_reversed%10)+'0');
    19f6:	8b 85       	ldd	r24, Y+11	; 0x0b
    19f8:	9c 85       	ldd	r25, Y+12	; 0x0c
    19fa:	2a e0       	ldi	r18, 0x0A	; 10
    19fc:	30 e0       	ldi	r19, 0x00	; 0
    19fe:	b9 01       	movw	r22, r18
    1a00:	0e 94 0a 12 	call	0x2414	; 0x2414 <__udivmodhi4>
    1a04:	80 5d       	subi	r24, 0xD0	; 208
    1a06:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <LCD_VidSendChar>
		local_reversed/=10;
    1a0a:	8b 85       	ldd	r24, Y+11	; 0x0b
    1a0c:	9c 85       	ldd	r25, Y+12	; 0x0c
    1a0e:	2a e0       	ldi	r18, 0x0A	; 10
    1a10:	30 e0       	ldi	r19, 0x00	; 0
    1a12:	b9 01       	movw	r22, r18
    1a14:	0e 94 0a 12 	call	0x2414	; 0x2414 <__udivmodhi4>
    1a18:	cb 01       	movw	r24, r22
    1a1a:	9c 87       	std	Y+12, r25	; 0x0c
    1a1c:	8b 87       	std	Y+11, r24	; 0x0b
		count--;
    1a1e:	8c 81       	ldd	r24, Y+4	; 0x04
    1a20:	81 50       	subi	r24, 0x01	; 1
    1a22:	8c 83       	std	Y+4, r24	; 0x04
		local_remainder=Copy_U8Number%10;
		local_reversed=(local_reversed*10)+local_remainder;
		Copy_U8Number/=10;
		count++;
	}
	while(count!=0)
    1a24:	8c 81       	ldd	r24, Y+4	; 0x04
    1a26:	88 23       	and	r24, r24
    1a28:	31 f7       	brne	.-52     	; 0x19f6 <LCD_VidSendNumberFloat+0x1c6>
		LCD_VidSendChar((local_reversed%10)+'0');
		local_reversed/=10;
		count--;
	}

	if(tmp==0)
    1a2a:	6d 81       	ldd	r22, Y+5	; 0x05
    1a2c:	7e 81       	ldd	r23, Y+6	; 0x06
    1a2e:	8f 81       	ldd	r24, Y+7	; 0x07
    1a30:	98 85       	ldd	r25, Y+8	; 0x08
    1a32:	20 e0       	ldi	r18, 0x00	; 0
    1a34:	30 e0       	ldi	r19, 0x00	; 0
    1a36:	40 e0       	ldi	r20, 0x00	; 0
    1a38:	50 e0       	ldi	r21, 0x00	; 0
    1a3a:	0e 94 19 03 	call	0x632	; 0x632 <__eqsf2>
    1a3e:	88 23       	and	r24, r24
    1a40:	19 f4       	brne	.+6      	; 0x1a48 <LCD_VidSendNumberFloat+0x218>
		LCD_VidSendChar('0');
    1a42:	80 e3       	ldi	r24, 0x30	; 48
    1a44:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <LCD_VidSendChar>

}
    1a48:	62 96       	adiw	r28, 0x12	; 18
    1a4a:	0f b6       	in	r0, 0x3f	; 63
    1a4c:	f8 94       	cli
    1a4e:	de bf       	out	0x3e, r29	; 62
    1a50:	0f be       	out	0x3f, r0	; 63
    1a52:	cd bf       	out	0x3d, r28	; 61
    1a54:	cf 91       	pop	r28
    1a56:	df 91       	pop	r29
    1a58:	08 95       	ret

00001a5a <LCD_VidSendChar>:

void LCD_VidSendChar(u8 Copy_U8Char)
{
    1a5a:	df 93       	push	r29
    1a5c:	cf 93       	push	r28
    1a5e:	cd b7       	in	r28, 0x3d	; 61
    1a60:	de b7       	in	r29, 0x3e	; 62
    1a62:	2f 97       	sbiw	r28, 0x0f	; 15
    1a64:	0f b6       	in	r0, 0x3f	; 63
    1a66:	f8 94       	cli
    1a68:	de bf       	out	0x3e, r29	; 62
    1a6a:	0f be       	out	0x3f, r0	; 63
    1a6c:	cd bf       	out	0x3d, r28	; 61
    1a6e:	8f 87       	std	Y+15, r24	; 0x0f

	DIO_VidSetPinValue(LCD_CMD_PORT,RS,DIO_HIGH);
    1a70:	81 e0       	ldi	r24, 0x01	; 1
    1a72:	65 e0       	ldi	r22, 0x05	; 5
    1a74:	41 e0       	ldi	r20, 0x01	; 1
    1a76:	0e 94 9b 07 	call	0xf36	; 0xf36 <DIO_VidSetPinValue>
	DIO_VidSetPinValue(LCD_CMD_PORT,RW,DIO_LOW);
    1a7a:	81 e0       	ldi	r24, 0x01	; 1
    1a7c:	66 e0       	ldi	r22, 0x06	; 6
    1a7e:	40 e0       	ldi	r20, 0x00	; 0
    1a80:	0e 94 9b 07 	call	0xf36	; 0xf36 <DIO_VidSetPinValue>
	DIO_VidSetPortValue(LCD_DATA_PORT,Copy_U8Char);
    1a84:	80 e0       	ldi	r24, 0x00	; 0
    1a86:	6f 85       	ldd	r22, Y+15	; 0x0f
    1a88:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <DIO_VidSetPortValue>

	DIO_VidSetPinValue(LCD_CMD_PORT,EN,DIO_HIGH);
    1a8c:	81 e0       	ldi	r24, 0x01	; 1
    1a8e:	67 e0       	ldi	r22, 0x07	; 7
    1a90:	41 e0       	ldi	r20, 0x01	; 1
    1a92:	0e 94 9b 07 	call	0xf36	; 0xf36 <DIO_VidSetPinValue>
    1a96:	80 e0       	ldi	r24, 0x00	; 0
    1a98:	90 e0       	ldi	r25, 0x00	; 0
    1a9a:	a0 e8       	ldi	r26, 0x80	; 128
    1a9c:	bf e3       	ldi	r27, 0x3F	; 63
    1a9e:	8b 87       	std	Y+11, r24	; 0x0b
    1aa0:	9c 87       	std	Y+12, r25	; 0x0c
    1aa2:	ad 87       	std	Y+13, r26	; 0x0d
    1aa4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1aa6:	6b 85       	ldd	r22, Y+11	; 0x0b
    1aa8:	7c 85       	ldd	r23, Y+12	; 0x0c
    1aaa:	8d 85       	ldd	r24, Y+13	; 0x0d
    1aac:	9e 85       	ldd	r25, Y+14	; 0x0e
    1aae:	20 e0       	ldi	r18, 0x00	; 0
    1ab0:	30 e0       	ldi	r19, 0x00	; 0
    1ab2:	4a ef       	ldi	r20, 0xFA	; 250
    1ab4:	54 e4       	ldi	r21, 0x44	; 68
    1ab6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1aba:	dc 01       	movw	r26, r24
    1abc:	cb 01       	movw	r24, r22
    1abe:	8f 83       	std	Y+7, r24	; 0x07
    1ac0:	98 87       	std	Y+8, r25	; 0x08
    1ac2:	a9 87       	std	Y+9, r26	; 0x09
    1ac4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1ac6:	6f 81       	ldd	r22, Y+7	; 0x07
    1ac8:	78 85       	ldd	r23, Y+8	; 0x08
    1aca:	89 85       	ldd	r24, Y+9	; 0x09
    1acc:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ace:	20 e0       	ldi	r18, 0x00	; 0
    1ad0:	30 e0       	ldi	r19, 0x00	; 0
    1ad2:	40 e8       	ldi	r20, 0x80	; 128
    1ad4:	5f e3       	ldi	r21, 0x3F	; 63
    1ad6:	0e 94 a9 03 	call	0x752	; 0x752 <__ltsf2>
    1ada:	88 23       	and	r24, r24
    1adc:	2c f4       	brge	.+10     	; 0x1ae8 <LCD_VidSendChar+0x8e>
		__ticks = 1;
    1ade:	81 e0       	ldi	r24, 0x01	; 1
    1ae0:	90 e0       	ldi	r25, 0x00	; 0
    1ae2:	9e 83       	std	Y+6, r25	; 0x06
    1ae4:	8d 83       	std	Y+5, r24	; 0x05
    1ae6:	3f c0       	rjmp	.+126    	; 0x1b66 <LCD_VidSendChar+0x10c>
	else if (__tmp > 65535)
    1ae8:	6f 81       	ldd	r22, Y+7	; 0x07
    1aea:	78 85       	ldd	r23, Y+8	; 0x08
    1aec:	89 85       	ldd	r24, Y+9	; 0x09
    1aee:	9a 85       	ldd	r25, Y+10	; 0x0a
    1af0:	20 e0       	ldi	r18, 0x00	; 0
    1af2:	3f ef       	ldi	r19, 0xFF	; 255
    1af4:	4f e7       	ldi	r20, 0x7F	; 127
    1af6:	57 e4       	ldi	r21, 0x47	; 71
    1af8:	0e 94 49 03 	call	0x692	; 0x692 <__gtsf2>
    1afc:	18 16       	cp	r1, r24
    1afe:	4c f5       	brge	.+82     	; 0x1b52 <LCD_VidSendChar+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b00:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b02:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b04:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b06:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b08:	20 e0       	ldi	r18, 0x00	; 0
    1b0a:	30 e0       	ldi	r19, 0x00	; 0
    1b0c:	40 e2       	ldi	r20, 0x20	; 32
    1b0e:	51 e4       	ldi	r21, 0x41	; 65
    1b10:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b14:	dc 01       	movw	r26, r24
    1b16:	cb 01       	movw	r24, r22
    1b18:	bc 01       	movw	r22, r24
    1b1a:	cd 01       	movw	r24, r26
    1b1c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b20:	dc 01       	movw	r26, r24
    1b22:	cb 01       	movw	r24, r22
    1b24:	9e 83       	std	Y+6, r25	; 0x06
    1b26:	8d 83       	std	Y+5, r24	; 0x05
    1b28:	0f c0       	rjmp	.+30     	; 0x1b48 <LCD_VidSendChar+0xee>
    1b2a:	88 ec       	ldi	r24, 0xC8	; 200
    1b2c:	90 e0       	ldi	r25, 0x00	; 0
    1b2e:	9c 83       	std	Y+4, r25	; 0x04
    1b30:	8b 83       	std	Y+3, r24	; 0x03
    1b32:	8b 81       	ldd	r24, Y+3	; 0x03
    1b34:	9c 81       	ldd	r25, Y+4	; 0x04
    1b36:	01 97       	sbiw	r24, 0x01	; 1
    1b38:	f1 f7       	brne	.-4      	; 0x1b36 <LCD_VidSendChar+0xdc>
    1b3a:	9c 83       	std	Y+4, r25	; 0x04
    1b3c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b3e:	8d 81       	ldd	r24, Y+5	; 0x05
    1b40:	9e 81       	ldd	r25, Y+6	; 0x06
    1b42:	01 97       	sbiw	r24, 0x01	; 1
    1b44:	9e 83       	std	Y+6, r25	; 0x06
    1b46:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b48:	8d 81       	ldd	r24, Y+5	; 0x05
    1b4a:	9e 81       	ldd	r25, Y+6	; 0x06
    1b4c:	00 97       	sbiw	r24, 0x00	; 0
    1b4e:	69 f7       	brne	.-38     	; 0x1b2a <LCD_VidSendChar+0xd0>
    1b50:	14 c0       	rjmp	.+40     	; 0x1b7a <LCD_VidSendChar+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b52:	6f 81       	ldd	r22, Y+7	; 0x07
    1b54:	78 85       	ldd	r23, Y+8	; 0x08
    1b56:	89 85       	ldd	r24, Y+9	; 0x09
    1b58:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b5a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b5e:	dc 01       	movw	r26, r24
    1b60:	cb 01       	movw	r24, r22
    1b62:	9e 83       	std	Y+6, r25	; 0x06
    1b64:	8d 83       	std	Y+5, r24	; 0x05
    1b66:	8d 81       	ldd	r24, Y+5	; 0x05
    1b68:	9e 81       	ldd	r25, Y+6	; 0x06
    1b6a:	9a 83       	std	Y+2, r25	; 0x02
    1b6c:	89 83       	std	Y+1, r24	; 0x01
    1b6e:	89 81       	ldd	r24, Y+1	; 0x01
    1b70:	9a 81       	ldd	r25, Y+2	; 0x02
    1b72:	01 97       	sbiw	r24, 0x01	; 1
    1b74:	f1 f7       	brne	.-4      	; 0x1b72 <LCD_VidSendChar+0x118>
    1b76:	9a 83       	std	Y+2, r25	; 0x02
    1b78:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	DIO_VidSetPinValue(LCD_CMD_PORT,EN,DIO_LOW);
    1b7a:	81 e0       	ldi	r24, 0x01	; 1
    1b7c:	67 e0       	ldi	r22, 0x07	; 7
    1b7e:	40 e0       	ldi	r20, 0x00	; 0
    1b80:	0e 94 9b 07 	call	0xf36	; 0xf36 <DIO_VidSetPinValue>

}
    1b84:	2f 96       	adiw	r28, 0x0f	; 15
    1b86:	0f b6       	in	r0, 0x3f	; 63
    1b88:	f8 94       	cli
    1b8a:	de bf       	out	0x3e, r29	; 62
    1b8c:	0f be       	out	0x3f, r0	; 63
    1b8e:	cd bf       	out	0x3d, r28	; 61
    1b90:	cf 91       	pop	r28
    1b92:	df 91       	pop	r29
    1b94:	08 95       	ret

00001b96 <LCD_VidInt>:

void LCD_VidInt(void)
{
    1b96:	df 93       	push	r29
    1b98:	cf 93       	push	r28
    1b9a:	cd b7       	in	r28, 0x3d	; 61
    1b9c:	de b7       	in	r29, 0x3e	; 62
    1b9e:	e8 97       	sbiw	r28, 0x38	; 56
    1ba0:	0f b6       	in	r0, 0x3f	; 63
    1ba2:	f8 94       	cli
    1ba4:	de bf       	out	0x3e, r29	; 62
    1ba6:	0f be       	out	0x3f, r0	; 63
    1ba8:	cd bf       	out	0x3d, r28	; 61
	DIO_VidSetPortDirection(LCD_DATA_PORT,0xff);
    1baa:	80 e0       	ldi	r24, 0x00	; 0
    1bac:	6f ef       	ldi	r22, 0xFF	; 255
    1bae:	0e 94 9b 08 	call	0x1136	; 0x1136 <DIO_VidSetPortDirection>


	DIO_VidSetPinDirection(LCD_CMD_PORT,RS,DIO_OUT);
    1bb2:	81 e0       	ldi	r24, 0x01	; 1
    1bb4:	65 e0       	ldi	r22, 0x05	; 5
    1bb6:	41 e0       	ldi	r20, 0x01	; 1
    1bb8:	0e 94 9b 06 	call	0xd36	; 0xd36 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(LCD_CMD_PORT,RW,DIO_OUT);
    1bbc:	81 e0       	ldi	r24, 0x01	; 1
    1bbe:	66 e0       	ldi	r22, 0x06	; 6
    1bc0:	41 e0       	ldi	r20, 0x01	; 1
    1bc2:	0e 94 9b 06 	call	0xd36	; 0xd36 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(LCD_CMD_PORT,EN,DIO_OUT);
    1bc6:	81 e0       	ldi	r24, 0x01	; 1
    1bc8:	67 e0       	ldi	r22, 0x07	; 7
    1bca:	41 e0       	ldi	r20, 0x01	; 1
    1bcc:	0e 94 9b 06 	call	0xd36	; 0xd36 <DIO_VidSetPinDirection>
    1bd0:	80 e0       	ldi	r24, 0x00	; 0
    1bd2:	90 e0       	ldi	r25, 0x00	; 0
    1bd4:	ac e0       	ldi	r26, 0x0C	; 12
    1bd6:	b2 e4       	ldi	r27, 0x42	; 66
    1bd8:	8d ab       	std	Y+53, r24	; 0x35
    1bda:	9e ab       	std	Y+54, r25	; 0x36
    1bdc:	af ab       	std	Y+55, r26	; 0x37
    1bde:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1be0:	6d a9       	ldd	r22, Y+53	; 0x35
    1be2:	7e a9       	ldd	r23, Y+54	; 0x36
    1be4:	8f a9       	ldd	r24, Y+55	; 0x37
    1be6:	98 ad       	ldd	r25, Y+56	; 0x38
    1be8:	20 e0       	ldi	r18, 0x00	; 0
    1bea:	30 e0       	ldi	r19, 0x00	; 0
    1bec:	4a ef       	ldi	r20, 0xFA	; 250
    1bee:	54 e4       	ldi	r21, 0x44	; 68
    1bf0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1bf4:	dc 01       	movw	r26, r24
    1bf6:	cb 01       	movw	r24, r22
    1bf8:	89 ab       	std	Y+49, r24	; 0x31
    1bfa:	9a ab       	std	Y+50, r25	; 0x32
    1bfc:	ab ab       	std	Y+51, r26	; 0x33
    1bfe:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1c00:	69 a9       	ldd	r22, Y+49	; 0x31
    1c02:	7a a9       	ldd	r23, Y+50	; 0x32
    1c04:	8b a9       	ldd	r24, Y+51	; 0x33
    1c06:	9c a9       	ldd	r25, Y+52	; 0x34
    1c08:	20 e0       	ldi	r18, 0x00	; 0
    1c0a:	30 e0       	ldi	r19, 0x00	; 0
    1c0c:	40 e8       	ldi	r20, 0x80	; 128
    1c0e:	5f e3       	ldi	r21, 0x3F	; 63
    1c10:	0e 94 a9 03 	call	0x752	; 0x752 <__ltsf2>
    1c14:	88 23       	and	r24, r24
    1c16:	2c f4       	brge	.+10     	; 0x1c22 <LCD_VidInt+0x8c>
		__ticks = 1;
    1c18:	81 e0       	ldi	r24, 0x01	; 1
    1c1a:	90 e0       	ldi	r25, 0x00	; 0
    1c1c:	98 ab       	std	Y+48, r25	; 0x30
    1c1e:	8f a7       	std	Y+47, r24	; 0x2f
    1c20:	3f c0       	rjmp	.+126    	; 0x1ca0 <LCD_VidInt+0x10a>
	else if (__tmp > 65535)
    1c22:	69 a9       	ldd	r22, Y+49	; 0x31
    1c24:	7a a9       	ldd	r23, Y+50	; 0x32
    1c26:	8b a9       	ldd	r24, Y+51	; 0x33
    1c28:	9c a9       	ldd	r25, Y+52	; 0x34
    1c2a:	20 e0       	ldi	r18, 0x00	; 0
    1c2c:	3f ef       	ldi	r19, 0xFF	; 255
    1c2e:	4f e7       	ldi	r20, 0x7F	; 127
    1c30:	57 e4       	ldi	r21, 0x47	; 71
    1c32:	0e 94 49 03 	call	0x692	; 0x692 <__gtsf2>
    1c36:	18 16       	cp	r1, r24
    1c38:	4c f5       	brge	.+82     	; 0x1c8c <LCD_VidInt+0xf6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c3a:	6d a9       	ldd	r22, Y+53	; 0x35
    1c3c:	7e a9       	ldd	r23, Y+54	; 0x36
    1c3e:	8f a9       	ldd	r24, Y+55	; 0x37
    1c40:	98 ad       	ldd	r25, Y+56	; 0x38
    1c42:	20 e0       	ldi	r18, 0x00	; 0
    1c44:	30 e0       	ldi	r19, 0x00	; 0
    1c46:	40 e2       	ldi	r20, 0x20	; 32
    1c48:	51 e4       	ldi	r21, 0x41	; 65
    1c4a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c4e:	dc 01       	movw	r26, r24
    1c50:	cb 01       	movw	r24, r22
    1c52:	bc 01       	movw	r22, r24
    1c54:	cd 01       	movw	r24, r26
    1c56:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c5a:	dc 01       	movw	r26, r24
    1c5c:	cb 01       	movw	r24, r22
    1c5e:	98 ab       	std	Y+48, r25	; 0x30
    1c60:	8f a7       	std	Y+47, r24	; 0x2f
    1c62:	0f c0       	rjmp	.+30     	; 0x1c82 <LCD_VidInt+0xec>
    1c64:	88 ec       	ldi	r24, 0xC8	; 200
    1c66:	90 e0       	ldi	r25, 0x00	; 0
    1c68:	9e a7       	std	Y+46, r25	; 0x2e
    1c6a:	8d a7       	std	Y+45, r24	; 0x2d
    1c6c:	8d a5       	ldd	r24, Y+45	; 0x2d
    1c6e:	9e a5       	ldd	r25, Y+46	; 0x2e
    1c70:	01 97       	sbiw	r24, 0x01	; 1
    1c72:	f1 f7       	brne	.-4      	; 0x1c70 <LCD_VidInt+0xda>
    1c74:	9e a7       	std	Y+46, r25	; 0x2e
    1c76:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c78:	8f a5       	ldd	r24, Y+47	; 0x2f
    1c7a:	98 a9       	ldd	r25, Y+48	; 0x30
    1c7c:	01 97       	sbiw	r24, 0x01	; 1
    1c7e:	98 ab       	std	Y+48, r25	; 0x30
    1c80:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c82:	8f a5       	ldd	r24, Y+47	; 0x2f
    1c84:	98 a9       	ldd	r25, Y+48	; 0x30
    1c86:	00 97       	sbiw	r24, 0x00	; 0
    1c88:	69 f7       	brne	.-38     	; 0x1c64 <LCD_VidInt+0xce>
    1c8a:	14 c0       	rjmp	.+40     	; 0x1cb4 <LCD_VidInt+0x11e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c8c:	69 a9       	ldd	r22, Y+49	; 0x31
    1c8e:	7a a9       	ldd	r23, Y+50	; 0x32
    1c90:	8b a9       	ldd	r24, Y+51	; 0x33
    1c92:	9c a9       	ldd	r25, Y+52	; 0x34
    1c94:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c98:	dc 01       	movw	r26, r24
    1c9a:	cb 01       	movw	r24, r22
    1c9c:	98 ab       	std	Y+48, r25	; 0x30
    1c9e:	8f a7       	std	Y+47, r24	; 0x2f
    1ca0:	8f a5       	ldd	r24, Y+47	; 0x2f
    1ca2:	98 a9       	ldd	r25, Y+48	; 0x30
    1ca4:	9c a7       	std	Y+44, r25	; 0x2c
    1ca6:	8b a7       	std	Y+43, r24	; 0x2b
    1ca8:	8b a5       	ldd	r24, Y+43	; 0x2b
    1caa:	9c a5       	ldd	r25, Y+44	; 0x2c
    1cac:	01 97       	sbiw	r24, 0x01	; 1
    1cae:	f1 f7       	brne	.-4      	; 0x1cac <LCD_VidInt+0x116>
    1cb0:	9c a7       	std	Y+44, r25	; 0x2c
    1cb2:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(35);
	LCD_VidSendCMD(FUN_SET);
    1cb4:	8c e3       	ldi	r24, 0x3C	; 60
    1cb6:	0e 94 0d 0b 	call	0x161a	; 0x161a <LCD_VidSendCMD>
    1cba:	80 e0       	ldi	r24, 0x00	; 0
    1cbc:	90 e0       	ldi	r25, 0x00	; 0
    1cbe:	a0 e8       	ldi	r26, 0x80	; 128
    1cc0:	bf e3       	ldi	r27, 0x3F	; 63
    1cc2:	8f a3       	std	Y+39, r24	; 0x27
    1cc4:	98 a7       	std	Y+40, r25	; 0x28
    1cc6:	a9 a7       	std	Y+41, r26	; 0x29
    1cc8:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1cca:	6f a1       	ldd	r22, Y+39	; 0x27
    1ccc:	78 a5       	ldd	r23, Y+40	; 0x28
    1cce:	89 a5       	ldd	r24, Y+41	; 0x29
    1cd0:	9a a5       	ldd	r25, Y+42	; 0x2a
    1cd2:	20 e0       	ldi	r18, 0x00	; 0
    1cd4:	30 e0       	ldi	r19, 0x00	; 0
    1cd6:	4a ef       	ldi	r20, 0xFA	; 250
    1cd8:	54 e4       	ldi	r21, 0x44	; 68
    1cda:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1cde:	dc 01       	movw	r26, r24
    1ce0:	cb 01       	movw	r24, r22
    1ce2:	8b a3       	std	Y+35, r24	; 0x23
    1ce4:	9c a3       	std	Y+36, r25	; 0x24
    1ce6:	ad a3       	std	Y+37, r26	; 0x25
    1ce8:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1cea:	6b a1       	ldd	r22, Y+35	; 0x23
    1cec:	7c a1       	ldd	r23, Y+36	; 0x24
    1cee:	8d a1       	ldd	r24, Y+37	; 0x25
    1cf0:	9e a1       	ldd	r25, Y+38	; 0x26
    1cf2:	20 e0       	ldi	r18, 0x00	; 0
    1cf4:	30 e0       	ldi	r19, 0x00	; 0
    1cf6:	40 e8       	ldi	r20, 0x80	; 128
    1cf8:	5f e3       	ldi	r21, 0x3F	; 63
    1cfa:	0e 94 a9 03 	call	0x752	; 0x752 <__ltsf2>
    1cfe:	88 23       	and	r24, r24
    1d00:	2c f4       	brge	.+10     	; 0x1d0c <LCD_VidInt+0x176>
		__ticks = 1;
    1d02:	81 e0       	ldi	r24, 0x01	; 1
    1d04:	90 e0       	ldi	r25, 0x00	; 0
    1d06:	9a a3       	std	Y+34, r25	; 0x22
    1d08:	89 a3       	std	Y+33, r24	; 0x21
    1d0a:	3f c0       	rjmp	.+126    	; 0x1d8a <LCD_VidInt+0x1f4>
	else if (__tmp > 65535)
    1d0c:	6b a1       	ldd	r22, Y+35	; 0x23
    1d0e:	7c a1       	ldd	r23, Y+36	; 0x24
    1d10:	8d a1       	ldd	r24, Y+37	; 0x25
    1d12:	9e a1       	ldd	r25, Y+38	; 0x26
    1d14:	20 e0       	ldi	r18, 0x00	; 0
    1d16:	3f ef       	ldi	r19, 0xFF	; 255
    1d18:	4f e7       	ldi	r20, 0x7F	; 127
    1d1a:	57 e4       	ldi	r21, 0x47	; 71
    1d1c:	0e 94 49 03 	call	0x692	; 0x692 <__gtsf2>
    1d20:	18 16       	cp	r1, r24
    1d22:	4c f5       	brge	.+82     	; 0x1d76 <LCD_VidInt+0x1e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d24:	6f a1       	ldd	r22, Y+39	; 0x27
    1d26:	78 a5       	ldd	r23, Y+40	; 0x28
    1d28:	89 a5       	ldd	r24, Y+41	; 0x29
    1d2a:	9a a5       	ldd	r25, Y+42	; 0x2a
    1d2c:	20 e0       	ldi	r18, 0x00	; 0
    1d2e:	30 e0       	ldi	r19, 0x00	; 0
    1d30:	40 e2       	ldi	r20, 0x20	; 32
    1d32:	51 e4       	ldi	r21, 0x41	; 65
    1d34:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d38:	dc 01       	movw	r26, r24
    1d3a:	cb 01       	movw	r24, r22
    1d3c:	bc 01       	movw	r22, r24
    1d3e:	cd 01       	movw	r24, r26
    1d40:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d44:	dc 01       	movw	r26, r24
    1d46:	cb 01       	movw	r24, r22
    1d48:	9a a3       	std	Y+34, r25	; 0x22
    1d4a:	89 a3       	std	Y+33, r24	; 0x21
    1d4c:	0f c0       	rjmp	.+30     	; 0x1d6c <LCD_VidInt+0x1d6>
    1d4e:	88 ec       	ldi	r24, 0xC8	; 200
    1d50:	90 e0       	ldi	r25, 0x00	; 0
    1d52:	98 a3       	std	Y+32, r25	; 0x20
    1d54:	8f 8f       	std	Y+31, r24	; 0x1f
    1d56:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1d58:	98 a1       	ldd	r25, Y+32	; 0x20
    1d5a:	01 97       	sbiw	r24, 0x01	; 1
    1d5c:	f1 f7       	brne	.-4      	; 0x1d5a <LCD_VidInt+0x1c4>
    1d5e:	98 a3       	std	Y+32, r25	; 0x20
    1d60:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d62:	89 a1       	ldd	r24, Y+33	; 0x21
    1d64:	9a a1       	ldd	r25, Y+34	; 0x22
    1d66:	01 97       	sbiw	r24, 0x01	; 1
    1d68:	9a a3       	std	Y+34, r25	; 0x22
    1d6a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d6c:	89 a1       	ldd	r24, Y+33	; 0x21
    1d6e:	9a a1       	ldd	r25, Y+34	; 0x22
    1d70:	00 97       	sbiw	r24, 0x00	; 0
    1d72:	69 f7       	brne	.-38     	; 0x1d4e <LCD_VidInt+0x1b8>
    1d74:	14 c0       	rjmp	.+40     	; 0x1d9e <LCD_VidInt+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d76:	6b a1       	ldd	r22, Y+35	; 0x23
    1d78:	7c a1       	ldd	r23, Y+36	; 0x24
    1d7a:	8d a1       	ldd	r24, Y+37	; 0x25
    1d7c:	9e a1       	ldd	r25, Y+38	; 0x26
    1d7e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d82:	dc 01       	movw	r26, r24
    1d84:	cb 01       	movw	r24, r22
    1d86:	9a a3       	std	Y+34, r25	; 0x22
    1d88:	89 a3       	std	Y+33, r24	; 0x21
    1d8a:	89 a1       	ldd	r24, Y+33	; 0x21
    1d8c:	9a a1       	ldd	r25, Y+34	; 0x22
    1d8e:	9e 8f       	std	Y+30, r25	; 0x1e
    1d90:	8d 8f       	std	Y+29, r24	; 0x1d
    1d92:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1d94:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1d96:	01 97       	sbiw	r24, 0x01	; 1
    1d98:	f1 f7       	brne	.-4      	; 0x1d96 <LCD_VidInt+0x200>
    1d9a:	9e 8f       	std	Y+30, r25	; 0x1e
    1d9c:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	LCD_VidSendCMD(LCD_ON_OFF);
    1d9e:	8c e0       	ldi	r24, 0x0C	; 12
    1da0:	0e 94 0d 0b 	call	0x161a	; 0x161a <LCD_VidSendCMD>
    1da4:	80 e0       	ldi	r24, 0x00	; 0
    1da6:	90 e0       	ldi	r25, 0x00	; 0
    1da8:	a0 e8       	ldi	r26, 0x80	; 128
    1daa:	bf e3       	ldi	r27, 0x3F	; 63
    1dac:	89 8f       	std	Y+25, r24	; 0x19
    1dae:	9a 8f       	std	Y+26, r25	; 0x1a
    1db0:	ab 8f       	std	Y+27, r26	; 0x1b
    1db2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1db4:	69 8d       	ldd	r22, Y+25	; 0x19
    1db6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1db8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1dba:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1dbc:	20 e0       	ldi	r18, 0x00	; 0
    1dbe:	30 e0       	ldi	r19, 0x00	; 0
    1dc0:	4a ef       	ldi	r20, 0xFA	; 250
    1dc2:	54 e4       	ldi	r21, 0x44	; 68
    1dc4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1dc8:	dc 01       	movw	r26, r24
    1dca:	cb 01       	movw	r24, r22
    1dcc:	8d 8b       	std	Y+21, r24	; 0x15
    1dce:	9e 8b       	std	Y+22, r25	; 0x16
    1dd0:	af 8b       	std	Y+23, r26	; 0x17
    1dd2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1dd4:	6d 89       	ldd	r22, Y+21	; 0x15
    1dd6:	7e 89       	ldd	r23, Y+22	; 0x16
    1dd8:	8f 89       	ldd	r24, Y+23	; 0x17
    1dda:	98 8d       	ldd	r25, Y+24	; 0x18
    1ddc:	20 e0       	ldi	r18, 0x00	; 0
    1dde:	30 e0       	ldi	r19, 0x00	; 0
    1de0:	40 e8       	ldi	r20, 0x80	; 128
    1de2:	5f e3       	ldi	r21, 0x3F	; 63
    1de4:	0e 94 a9 03 	call	0x752	; 0x752 <__ltsf2>
    1de8:	88 23       	and	r24, r24
    1dea:	2c f4       	brge	.+10     	; 0x1df6 <LCD_VidInt+0x260>
		__ticks = 1;
    1dec:	81 e0       	ldi	r24, 0x01	; 1
    1dee:	90 e0       	ldi	r25, 0x00	; 0
    1df0:	9c 8b       	std	Y+20, r25	; 0x14
    1df2:	8b 8b       	std	Y+19, r24	; 0x13
    1df4:	3f c0       	rjmp	.+126    	; 0x1e74 <LCD_VidInt+0x2de>
	else if (__tmp > 65535)
    1df6:	6d 89       	ldd	r22, Y+21	; 0x15
    1df8:	7e 89       	ldd	r23, Y+22	; 0x16
    1dfa:	8f 89       	ldd	r24, Y+23	; 0x17
    1dfc:	98 8d       	ldd	r25, Y+24	; 0x18
    1dfe:	20 e0       	ldi	r18, 0x00	; 0
    1e00:	3f ef       	ldi	r19, 0xFF	; 255
    1e02:	4f e7       	ldi	r20, 0x7F	; 127
    1e04:	57 e4       	ldi	r21, 0x47	; 71
    1e06:	0e 94 49 03 	call	0x692	; 0x692 <__gtsf2>
    1e0a:	18 16       	cp	r1, r24
    1e0c:	4c f5       	brge	.+82     	; 0x1e60 <LCD_VidInt+0x2ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e0e:	69 8d       	ldd	r22, Y+25	; 0x19
    1e10:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1e12:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e14:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e16:	20 e0       	ldi	r18, 0x00	; 0
    1e18:	30 e0       	ldi	r19, 0x00	; 0
    1e1a:	40 e2       	ldi	r20, 0x20	; 32
    1e1c:	51 e4       	ldi	r21, 0x41	; 65
    1e1e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e22:	dc 01       	movw	r26, r24
    1e24:	cb 01       	movw	r24, r22
    1e26:	bc 01       	movw	r22, r24
    1e28:	cd 01       	movw	r24, r26
    1e2a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e2e:	dc 01       	movw	r26, r24
    1e30:	cb 01       	movw	r24, r22
    1e32:	9c 8b       	std	Y+20, r25	; 0x14
    1e34:	8b 8b       	std	Y+19, r24	; 0x13
    1e36:	0f c0       	rjmp	.+30     	; 0x1e56 <LCD_VidInt+0x2c0>
    1e38:	88 ec       	ldi	r24, 0xC8	; 200
    1e3a:	90 e0       	ldi	r25, 0x00	; 0
    1e3c:	9a 8b       	std	Y+18, r25	; 0x12
    1e3e:	89 8b       	std	Y+17, r24	; 0x11
    1e40:	89 89       	ldd	r24, Y+17	; 0x11
    1e42:	9a 89       	ldd	r25, Y+18	; 0x12
    1e44:	01 97       	sbiw	r24, 0x01	; 1
    1e46:	f1 f7       	brne	.-4      	; 0x1e44 <LCD_VidInt+0x2ae>
    1e48:	9a 8b       	std	Y+18, r25	; 0x12
    1e4a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e4c:	8b 89       	ldd	r24, Y+19	; 0x13
    1e4e:	9c 89       	ldd	r25, Y+20	; 0x14
    1e50:	01 97       	sbiw	r24, 0x01	; 1
    1e52:	9c 8b       	std	Y+20, r25	; 0x14
    1e54:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e56:	8b 89       	ldd	r24, Y+19	; 0x13
    1e58:	9c 89       	ldd	r25, Y+20	; 0x14
    1e5a:	00 97       	sbiw	r24, 0x00	; 0
    1e5c:	69 f7       	brne	.-38     	; 0x1e38 <LCD_VidInt+0x2a2>
    1e5e:	14 c0       	rjmp	.+40     	; 0x1e88 <LCD_VidInt+0x2f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e60:	6d 89       	ldd	r22, Y+21	; 0x15
    1e62:	7e 89       	ldd	r23, Y+22	; 0x16
    1e64:	8f 89       	ldd	r24, Y+23	; 0x17
    1e66:	98 8d       	ldd	r25, Y+24	; 0x18
    1e68:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e6c:	dc 01       	movw	r26, r24
    1e6e:	cb 01       	movw	r24, r22
    1e70:	9c 8b       	std	Y+20, r25	; 0x14
    1e72:	8b 8b       	std	Y+19, r24	; 0x13
    1e74:	8b 89       	ldd	r24, Y+19	; 0x13
    1e76:	9c 89       	ldd	r25, Y+20	; 0x14
    1e78:	98 8b       	std	Y+16, r25	; 0x10
    1e7a:	8f 87       	std	Y+15, r24	; 0x0f
    1e7c:	8f 85       	ldd	r24, Y+15	; 0x0f
    1e7e:	98 89       	ldd	r25, Y+16	; 0x10
    1e80:	01 97       	sbiw	r24, 0x01	; 1
    1e82:	f1 f7       	brne	.-4      	; 0x1e80 <LCD_VidInt+0x2ea>
    1e84:	98 8b       	std	Y+16, r25	; 0x10
    1e86:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	LCD_VidSendCMD(LCD_CLEAR);
    1e88:	81 e0       	ldi	r24, 0x01	; 1
    1e8a:	0e 94 0d 0b 	call	0x161a	; 0x161a <LCD_VidSendCMD>
    1e8e:	80 e0       	ldi	r24, 0x00	; 0
    1e90:	90 e0       	ldi	r25, 0x00	; 0
    1e92:	a0 e0       	ldi	r26, 0x00	; 0
    1e94:	b0 e4       	ldi	r27, 0x40	; 64
    1e96:	8b 87       	std	Y+11, r24	; 0x0b
    1e98:	9c 87       	std	Y+12, r25	; 0x0c
    1e9a:	ad 87       	std	Y+13, r26	; 0x0d
    1e9c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e9e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ea0:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ea2:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ea4:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ea6:	20 e0       	ldi	r18, 0x00	; 0
    1ea8:	30 e0       	ldi	r19, 0x00	; 0
    1eaa:	4a ef       	ldi	r20, 0xFA	; 250
    1eac:	54 e4       	ldi	r21, 0x44	; 68
    1eae:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1eb2:	dc 01       	movw	r26, r24
    1eb4:	cb 01       	movw	r24, r22
    1eb6:	8f 83       	std	Y+7, r24	; 0x07
    1eb8:	98 87       	std	Y+8, r25	; 0x08
    1eba:	a9 87       	std	Y+9, r26	; 0x09
    1ebc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1ebe:	6f 81       	ldd	r22, Y+7	; 0x07
    1ec0:	78 85       	ldd	r23, Y+8	; 0x08
    1ec2:	89 85       	ldd	r24, Y+9	; 0x09
    1ec4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ec6:	20 e0       	ldi	r18, 0x00	; 0
    1ec8:	30 e0       	ldi	r19, 0x00	; 0
    1eca:	40 e8       	ldi	r20, 0x80	; 128
    1ecc:	5f e3       	ldi	r21, 0x3F	; 63
    1ece:	0e 94 a9 03 	call	0x752	; 0x752 <__ltsf2>
    1ed2:	88 23       	and	r24, r24
    1ed4:	2c f4       	brge	.+10     	; 0x1ee0 <LCD_VidInt+0x34a>
		__ticks = 1;
    1ed6:	81 e0       	ldi	r24, 0x01	; 1
    1ed8:	90 e0       	ldi	r25, 0x00	; 0
    1eda:	9e 83       	std	Y+6, r25	; 0x06
    1edc:	8d 83       	std	Y+5, r24	; 0x05
    1ede:	3f c0       	rjmp	.+126    	; 0x1f5e <LCD_VidInt+0x3c8>
	else if (__tmp > 65535)
    1ee0:	6f 81       	ldd	r22, Y+7	; 0x07
    1ee2:	78 85       	ldd	r23, Y+8	; 0x08
    1ee4:	89 85       	ldd	r24, Y+9	; 0x09
    1ee6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ee8:	20 e0       	ldi	r18, 0x00	; 0
    1eea:	3f ef       	ldi	r19, 0xFF	; 255
    1eec:	4f e7       	ldi	r20, 0x7F	; 127
    1eee:	57 e4       	ldi	r21, 0x47	; 71
    1ef0:	0e 94 49 03 	call	0x692	; 0x692 <__gtsf2>
    1ef4:	18 16       	cp	r1, r24
    1ef6:	4c f5       	brge	.+82     	; 0x1f4a <LCD_VidInt+0x3b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ef8:	6b 85       	ldd	r22, Y+11	; 0x0b
    1efa:	7c 85       	ldd	r23, Y+12	; 0x0c
    1efc:	8d 85       	ldd	r24, Y+13	; 0x0d
    1efe:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f00:	20 e0       	ldi	r18, 0x00	; 0
    1f02:	30 e0       	ldi	r19, 0x00	; 0
    1f04:	40 e2       	ldi	r20, 0x20	; 32
    1f06:	51 e4       	ldi	r21, 0x41	; 65
    1f08:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f0c:	dc 01       	movw	r26, r24
    1f0e:	cb 01       	movw	r24, r22
    1f10:	bc 01       	movw	r22, r24
    1f12:	cd 01       	movw	r24, r26
    1f14:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f18:	dc 01       	movw	r26, r24
    1f1a:	cb 01       	movw	r24, r22
    1f1c:	9e 83       	std	Y+6, r25	; 0x06
    1f1e:	8d 83       	std	Y+5, r24	; 0x05
    1f20:	0f c0       	rjmp	.+30     	; 0x1f40 <LCD_VidInt+0x3aa>
    1f22:	88 ec       	ldi	r24, 0xC8	; 200
    1f24:	90 e0       	ldi	r25, 0x00	; 0
    1f26:	9c 83       	std	Y+4, r25	; 0x04
    1f28:	8b 83       	std	Y+3, r24	; 0x03
    1f2a:	8b 81       	ldd	r24, Y+3	; 0x03
    1f2c:	9c 81       	ldd	r25, Y+4	; 0x04
    1f2e:	01 97       	sbiw	r24, 0x01	; 1
    1f30:	f1 f7       	brne	.-4      	; 0x1f2e <LCD_VidInt+0x398>
    1f32:	9c 83       	std	Y+4, r25	; 0x04
    1f34:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f36:	8d 81       	ldd	r24, Y+5	; 0x05
    1f38:	9e 81       	ldd	r25, Y+6	; 0x06
    1f3a:	01 97       	sbiw	r24, 0x01	; 1
    1f3c:	9e 83       	std	Y+6, r25	; 0x06
    1f3e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f40:	8d 81       	ldd	r24, Y+5	; 0x05
    1f42:	9e 81       	ldd	r25, Y+6	; 0x06
    1f44:	00 97       	sbiw	r24, 0x00	; 0
    1f46:	69 f7       	brne	.-38     	; 0x1f22 <LCD_VidInt+0x38c>
    1f48:	14 c0       	rjmp	.+40     	; 0x1f72 <LCD_VidInt+0x3dc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f4a:	6f 81       	ldd	r22, Y+7	; 0x07
    1f4c:	78 85       	ldd	r23, Y+8	; 0x08
    1f4e:	89 85       	ldd	r24, Y+9	; 0x09
    1f50:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f52:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f56:	dc 01       	movw	r26, r24
    1f58:	cb 01       	movw	r24, r22
    1f5a:	9e 83       	std	Y+6, r25	; 0x06
    1f5c:	8d 83       	std	Y+5, r24	; 0x05
    1f5e:	8d 81       	ldd	r24, Y+5	; 0x05
    1f60:	9e 81       	ldd	r25, Y+6	; 0x06
    1f62:	9a 83       	std	Y+2, r25	; 0x02
    1f64:	89 83       	std	Y+1, r24	; 0x01
    1f66:	89 81       	ldd	r24, Y+1	; 0x01
    1f68:	9a 81       	ldd	r25, Y+2	; 0x02
    1f6a:	01 97       	sbiw	r24, 0x01	; 1
    1f6c:	f1 f7       	brne	.-4      	; 0x1f6a <LCD_VidInt+0x3d4>
    1f6e:	9a 83       	std	Y+2, r25	; 0x02
    1f70:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
}
    1f72:	e8 96       	adiw	r28, 0x38	; 56
    1f74:	0f b6       	in	r0, 0x3f	; 63
    1f76:	f8 94       	cli
    1f78:	de bf       	out	0x3e, r29	; 62
    1f7a:	0f be       	out	0x3f, r0	; 63
    1f7c:	cd bf       	out	0x3d, r28	; 61
    1f7e:	cf 91       	pop	r28
    1f80:	df 91       	pop	r29
    1f82:	08 95       	ret

00001f84 <LCD_VidSendString>:

void LCD_VidSendString(u8 *Copy_u8Ptr)
{
    1f84:	df 93       	push	r29
    1f86:	cf 93       	push	r28
    1f88:	00 d0       	rcall	.+0      	; 0x1f8a <LCD_VidSendString+0x6>
    1f8a:	0f 92       	push	r0
    1f8c:	cd b7       	in	r28, 0x3d	; 61
    1f8e:	de b7       	in	r29, 0x3e	; 62
    1f90:	9b 83       	std	Y+3, r25	; 0x03
    1f92:	8a 83       	std	Y+2, r24	; 0x02
	u8 local=0;
    1f94:	19 82       	std	Y+1, r1	; 0x01
    1f96:	0e c0       	rjmp	.+28     	; 0x1fb4 <LCD_VidSendString+0x30>
	while(Copy_u8Ptr[local] !='\0')
	{
		LCD_VidSendChar(Copy_u8Ptr[local]);
    1f98:	89 81       	ldd	r24, Y+1	; 0x01
    1f9a:	28 2f       	mov	r18, r24
    1f9c:	30 e0       	ldi	r19, 0x00	; 0
    1f9e:	8a 81       	ldd	r24, Y+2	; 0x02
    1fa0:	9b 81       	ldd	r25, Y+3	; 0x03
    1fa2:	fc 01       	movw	r30, r24
    1fa4:	e2 0f       	add	r30, r18
    1fa6:	f3 1f       	adc	r31, r19
    1fa8:	80 81       	ld	r24, Z
    1faa:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <LCD_VidSendChar>
		local++;
    1fae:	89 81       	ldd	r24, Y+1	; 0x01
    1fb0:	8f 5f       	subi	r24, 0xFF	; 255
    1fb2:	89 83       	std	Y+1, r24	; 0x01
}

void LCD_VidSendString(u8 *Copy_u8Ptr)
{
	u8 local=0;
	while(Copy_u8Ptr[local] !='\0')
    1fb4:	89 81       	ldd	r24, Y+1	; 0x01
    1fb6:	28 2f       	mov	r18, r24
    1fb8:	30 e0       	ldi	r19, 0x00	; 0
    1fba:	8a 81       	ldd	r24, Y+2	; 0x02
    1fbc:	9b 81       	ldd	r25, Y+3	; 0x03
    1fbe:	fc 01       	movw	r30, r24
    1fc0:	e2 0f       	add	r30, r18
    1fc2:	f3 1f       	adc	r31, r19
    1fc4:	80 81       	ld	r24, Z
    1fc6:	88 23       	and	r24, r24
    1fc8:	39 f7       	brne	.-50     	; 0x1f98 <LCD_VidSendString+0x14>
	{
		LCD_VidSendChar(Copy_u8Ptr[local]);
		local++;
	}

}
    1fca:	0f 90       	pop	r0
    1fcc:	0f 90       	pop	r0
    1fce:	0f 90       	pop	r0
    1fd0:	cf 91       	pop	r28
    1fd2:	df 91       	pop	r29
    1fd4:	08 95       	ret

00001fd6 <LCD_VidSendLocation>:

void LCD_VidSendLocation(u8 Copy_Line,u8 Copy_Char)
{
    1fd6:	df 93       	push	r29
    1fd8:	cf 93       	push	r28
    1fda:	00 d0       	rcall	.+0      	; 0x1fdc <LCD_VidSendLocation+0x6>
    1fdc:	00 d0       	rcall	.+0      	; 0x1fde <LCD_VidSendLocation+0x8>
    1fde:	cd b7       	in	r28, 0x3d	; 61
    1fe0:	de b7       	in	r29, 0x3e	; 62
    1fe2:	89 83       	std	Y+1, r24	; 0x01
    1fe4:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_Line)
    1fe6:	89 81       	ldd	r24, Y+1	; 0x01
    1fe8:	28 2f       	mov	r18, r24
    1fea:	30 e0       	ldi	r19, 0x00	; 0
    1fec:	3c 83       	std	Y+4, r19	; 0x04
    1fee:	2b 83       	std	Y+3, r18	; 0x03
    1ff0:	8b 81       	ldd	r24, Y+3	; 0x03
    1ff2:	9c 81       	ldd	r25, Y+4	; 0x04
    1ff4:	81 30       	cpi	r24, 0x01	; 1
    1ff6:	91 05       	cpc	r25, r1
    1ff8:	d1 f0       	breq	.+52     	; 0x202e <LCD_VidSendLocation+0x58>
    1ffa:	2b 81       	ldd	r18, Y+3	; 0x03
    1ffc:	3c 81       	ldd	r19, Y+4	; 0x04
    1ffe:	22 30       	cpi	r18, 0x02	; 2
    2000:	31 05       	cpc	r19, r1
    2002:	2c f4       	brge	.+10     	; 0x200e <LCD_VidSendLocation+0x38>
    2004:	8b 81       	ldd	r24, Y+3	; 0x03
    2006:	9c 81       	ldd	r25, Y+4	; 0x04
    2008:	00 97       	sbiw	r24, 0x00	; 0
    200a:	61 f0       	breq	.+24     	; 0x2024 <LCD_VidSendLocation+0x4e>
    200c:	1e c0       	rjmp	.+60     	; 0x204a <LCD_VidSendLocation+0x74>
    200e:	2b 81       	ldd	r18, Y+3	; 0x03
    2010:	3c 81       	ldd	r19, Y+4	; 0x04
    2012:	23 30       	cpi	r18, 0x03	; 3
    2014:	31 05       	cpc	r19, r1
    2016:	81 f0       	breq	.+32     	; 0x2038 <LCD_VidSendLocation+0x62>
    2018:	8b 81       	ldd	r24, Y+3	; 0x03
    201a:	9c 81       	ldd	r25, Y+4	; 0x04
    201c:	84 30       	cpi	r24, 0x04	; 4
    201e:	91 05       	cpc	r25, r1
    2020:	81 f0       	breq	.+32     	; 0x2042 <LCD_VidSendLocation+0x6c>
    2022:	13 c0       	rjmp	.+38     	; 0x204a <LCD_VidSendLocation+0x74>
	{
		case LINE_1:LCD_VidSendCMD(0x80+Copy_Char);break;
    2024:	8a 81       	ldd	r24, Y+2	; 0x02
    2026:	80 58       	subi	r24, 0x80	; 128
    2028:	0e 94 0d 0b 	call	0x161a	; 0x161a <LCD_VidSendCMD>
    202c:	0e c0       	rjmp	.+28     	; 0x204a <LCD_VidSendLocation+0x74>
		case LINE_2:LCD_VidSendCMD(0xc0+Copy_Char); break;
    202e:	8a 81       	ldd	r24, Y+2	; 0x02
    2030:	80 54       	subi	r24, 0x40	; 64
    2032:	0e 94 0d 0b 	call	0x161a	; 0x161a <LCD_VidSendCMD>
    2036:	09 c0       	rjmp	.+18     	; 0x204a <LCD_VidSendLocation+0x74>
		case LINE_3:LCD_VidSendCMD(0x94+Copy_Char);break;
    2038:	8a 81       	ldd	r24, Y+2	; 0x02
    203a:	8c 56       	subi	r24, 0x6C	; 108
    203c:	0e 94 0d 0b 	call	0x161a	; 0x161a <LCD_VidSendCMD>
    2040:	04 c0       	rjmp	.+8      	; 0x204a <LCD_VidSendLocation+0x74>
		case LINE_4:LCD_VidSendCMD(0xd4+Copy_Char); break;
    2042:	8a 81       	ldd	r24, Y+2	; 0x02
    2044:	8c 52       	subi	r24, 0x2C	; 44
    2046:	0e 94 0d 0b 	call	0x161a	; 0x161a <LCD_VidSendCMD>
	}
}
    204a:	0f 90       	pop	r0
    204c:	0f 90       	pop	r0
    204e:	0f 90       	pop	r0
    2050:	0f 90       	pop	r0
    2052:	cf 91       	pop	r28
    2054:	df 91       	pop	r29
    2056:	08 95       	ret

00002058 <LCD_VidSpecialChar>:

void LCD_VidSpecialChar(u8 Copy_GCRAMLoc,u8 *Copy_Char)
{
    2058:	df 93       	push	r29
    205a:	cf 93       	push	r28
    205c:	00 d0       	rcall	.+0      	; 0x205e <LCD_VidSpecialChar+0x6>
    205e:	00 d0       	rcall	.+0      	; 0x2060 <LCD_VidSpecialChar+0x8>
    2060:	cd b7       	in	r28, 0x3d	; 61
    2062:	de b7       	in	r29, 0x3e	; 62
    2064:	8a 83       	std	Y+2, r24	; 0x02
    2066:	7c 83       	std	Y+4, r23	; 0x04
    2068:	6b 83       	std	Y+3, r22	; 0x03
	LCD_VidSendCMD(0x40+8*(Copy_GCRAMLoc));
    206a:	8a 81       	ldd	r24, Y+2	; 0x02
    206c:	88 2f       	mov	r24, r24
    206e:	90 e0       	ldi	r25, 0x00	; 0
    2070:	08 96       	adiw	r24, 0x08	; 8
    2072:	88 0f       	add	r24, r24
    2074:	99 1f       	adc	r25, r25
    2076:	88 0f       	add	r24, r24
    2078:	99 1f       	adc	r25, r25
    207a:	88 0f       	add	r24, r24
    207c:	99 1f       	adc	r25, r25
    207e:	0e 94 0d 0b 	call	0x161a	; 0x161a <LCD_VidSendCMD>
	for(u8 count=0;count<8;count++)
    2082:	19 82       	std	Y+1, r1	; 0x01
    2084:	0e c0       	rjmp	.+28     	; 0x20a2 <LCD_VidSpecialChar+0x4a>
	{
		LCD_VidSendChar(Copy_Char[count]);
    2086:	89 81       	ldd	r24, Y+1	; 0x01
    2088:	28 2f       	mov	r18, r24
    208a:	30 e0       	ldi	r19, 0x00	; 0
    208c:	8b 81       	ldd	r24, Y+3	; 0x03
    208e:	9c 81       	ldd	r25, Y+4	; 0x04
    2090:	fc 01       	movw	r30, r24
    2092:	e2 0f       	add	r30, r18
    2094:	f3 1f       	adc	r31, r19
    2096:	80 81       	ld	r24, Z
    2098:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <LCD_VidSendChar>
}

void LCD_VidSpecialChar(u8 Copy_GCRAMLoc,u8 *Copy_Char)
{
	LCD_VidSendCMD(0x40+8*(Copy_GCRAMLoc));
	for(u8 count=0;count<8;count++)
    209c:	89 81       	ldd	r24, Y+1	; 0x01
    209e:	8f 5f       	subi	r24, 0xFF	; 255
    20a0:	89 83       	std	Y+1, r24	; 0x01
    20a2:	89 81       	ldd	r24, Y+1	; 0x01
    20a4:	88 30       	cpi	r24, 0x08	; 8
    20a6:	78 f3       	brcs	.-34     	; 0x2086 <LCD_VidSpecialChar+0x2e>
	{
		LCD_VidSendChar(Copy_Char[count]);
	}
}
    20a8:	0f 90       	pop	r0
    20aa:	0f 90       	pop	r0
    20ac:	0f 90       	pop	r0
    20ae:	0f 90       	pop	r0
    20b0:	cf 91       	pop	r28
    20b2:	df 91       	pop	r29
    20b4:	08 95       	ret

000020b6 <LCD_VidClear>:

void LCD_VidClear()
{
    20b6:	df 93       	push	r29
    20b8:	cf 93       	push	r28
    20ba:	cd b7       	in	r28, 0x3d	; 61
    20bc:	de b7       	in	r29, 0x3e	; 62
    20be:	2e 97       	sbiw	r28, 0x0e	; 14
    20c0:	0f b6       	in	r0, 0x3f	; 63
    20c2:	f8 94       	cli
    20c4:	de bf       	out	0x3e, r29	; 62
    20c6:	0f be       	out	0x3f, r0	; 63
    20c8:	cd bf       	out	0x3d, r28	; 61
	LCD_VidSendCMD(LCD_CLEAR);
    20ca:	81 e0       	ldi	r24, 0x01	; 1
    20cc:	0e 94 0d 0b 	call	0x161a	; 0x161a <LCD_VidSendCMD>
    20d0:	80 e0       	ldi	r24, 0x00	; 0
    20d2:	90 e0       	ldi	r25, 0x00	; 0
    20d4:	a0 e0       	ldi	r26, 0x00	; 0
    20d6:	b0 e4       	ldi	r27, 0x40	; 64
    20d8:	8b 87       	std	Y+11, r24	; 0x0b
    20da:	9c 87       	std	Y+12, r25	; 0x0c
    20dc:	ad 87       	std	Y+13, r26	; 0x0d
    20de:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20e0:	6b 85       	ldd	r22, Y+11	; 0x0b
    20e2:	7c 85       	ldd	r23, Y+12	; 0x0c
    20e4:	8d 85       	ldd	r24, Y+13	; 0x0d
    20e6:	9e 85       	ldd	r25, Y+14	; 0x0e
    20e8:	20 e0       	ldi	r18, 0x00	; 0
    20ea:	30 e0       	ldi	r19, 0x00	; 0
    20ec:	4a ef       	ldi	r20, 0xFA	; 250
    20ee:	54 e4       	ldi	r21, 0x44	; 68
    20f0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    20f4:	dc 01       	movw	r26, r24
    20f6:	cb 01       	movw	r24, r22
    20f8:	8f 83       	std	Y+7, r24	; 0x07
    20fa:	98 87       	std	Y+8, r25	; 0x08
    20fc:	a9 87       	std	Y+9, r26	; 0x09
    20fe:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2100:	6f 81       	ldd	r22, Y+7	; 0x07
    2102:	78 85       	ldd	r23, Y+8	; 0x08
    2104:	89 85       	ldd	r24, Y+9	; 0x09
    2106:	9a 85       	ldd	r25, Y+10	; 0x0a
    2108:	20 e0       	ldi	r18, 0x00	; 0
    210a:	30 e0       	ldi	r19, 0x00	; 0
    210c:	40 e8       	ldi	r20, 0x80	; 128
    210e:	5f e3       	ldi	r21, 0x3F	; 63
    2110:	0e 94 a9 03 	call	0x752	; 0x752 <__ltsf2>
    2114:	88 23       	and	r24, r24
    2116:	2c f4       	brge	.+10     	; 0x2122 <LCD_VidClear+0x6c>
		__ticks = 1;
    2118:	81 e0       	ldi	r24, 0x01	; 1
    211a:	90 e0       	ldi	r25, 0x00	; 0
    211c:	9e 83       	std	Y+6, r25	; 0x06
    211e:	8d 83       	std	Y+5, r24	; 0x05
    2120:	3f c0       	rjmp	.+126    	; 0x21a0 <LCD_VidClear+0xea>
	else if (__tmp > 65535)
    2122:	6f 81       	ldd	r22, Y+7	; 0x07
    2124:	78 85       	ldd	r23, Y+8	; 0x08
    2126:	89 85       	ldd	r24, Y+9	; 0x09
    2128:	9a 85       	ldd	r25, Y+10	; 0x0a
    212a:	20 e0       	ldi	r18, 0x00	; 0
    212c:	3f ef       	ldi	r19, 0xFF	; 255
    212e:	4f e7       	ldi	r20, 0x7F	; 127
    2130:	57 e4       	ldi	r21, 0x47	; 71
    2132:	0e 94 49 03 	call	0x692	; 0x692 <__gtsf2>
    2136:	18 16       	cp	r1, r24
    2138:	4c f5       	brge	.+82     	; 0x218c <LCD_VidClear+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    213a:	6b 85       	ldd	r22, Y+11	; 0x0b
    213c:	7c 85       	ldd	r23, Y+12	; 0x0c
    213e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2140:	9e 85       	ldd	r25, Y+14	; 0x0e
    2142:	20 e0       	ldi	r18, 0x00	; 0
    2144:	30 e0       	ldi	r19, 0x00	; 0
    2146:	40 e2       	ldi	r20, 0x20	; 32
    2148:	51 e4       	ldi	r21, 0x41	; 65
    214a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    214e:	dc 01       	movw	r26, r24
    2150:	cb 01       	movw	r24, r22
    2152:	bc 01       	movw	r22, r24
    2154:	cd 01       	movw	r24, r26
    2156:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    215a:	dc 01       	movw	r26, r24
    215c:	cb 01       	movw	r24, r22
    215e:	9e 83       	std	Y+6, r25	; 0x06
    2160:	8d 83       	std	Y+5, r24	; 0x05
    2162:	0f c0       	rjmp	.+30     	; 0x2182 <LCD_VidClear+0xcc>
    2164:	88 ec       	ldi	r24, 0xC8	; 200
    2166:	90 e0       	ldi	r25, 0x00	; 0
    2168:	9c 83       	std	Y+4, r25	; 0x04
    216a:	8b 83       	std	Y+3, r24	; 0x03
    216c:	8b 81       	ldd	r24, Y+3	; 0x03
    216e:	9c 81       	ldd	r25, Y+4	; 0x04
    2170:	01 97       	sbiw	r24, 0x01	; 1
    2172:	f1 f7       	brne	.-4      	; 0x2170 <LCD_VidClear+0xba>
    2174:	9c 83       	std	Y+4, r25	; 0x04
    2176:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2178:	8d 81       	ldd	r24, Y+5	; 0x05
    217a:	9e 81       	ldd	r25, Y+6	; 0x06
    217c:	01 97       	sbiw	r24, 0x01	; 1
    217e:	9e 83       	std	Y+6, r25	; 0x06
    2180:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2182:	8d 81       	ldd	r24, Y+5	; 0x05
    2184:	9e 81       	ldd	r25, Y+6	; 0x06
    2186:	00 97       	sbiw	r24, 0x00	; 0
    2188:	69 f7       	brne	.-38     	; 0x2164 <LCD_VidClear+0xae>
    218a:	14 c0       	rjmp	.+40     	; 0x21b4 <LCD_VidClear+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    218c:	6f 81       	ldd	r22, Y+7	; 0x07
    218e:	78 85       	ldd	r23, Y+8	; 0x08
    2190:	89 85       	ldd	r24, Y+9	; 0x09
    2192:	9a 85       	ldd	r25, Y+10	; 0x0a
    2194:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2198:	dc 01       	movw	r26, r24
    219a:	cb 01       	movw	r24, r22
    219c:	9e 83       	std	Y+6, r25	; 0x06
    219e:	8d 83       	std	Y+5, r24	; 0x05
    21a0:	8d 81       	ldd	r24, Y+5	; 0x05
    21a2:	9e 81       	ldd	r25, Y+6	; 0x06
    21a4:	9a 83       	std	Y+2, r25	; 0x02
    21a6:	89 83       	std	Y+1, r24	; 0x01
    21a8:	89 81       	ldd	r24, Y+1	; 0x01
    21aa:	9a 81       	ldd	r25, Y+2	; 0x02
    21ac:	01 97       	sbiw	r24, 0x01	; 1
    21ae:	f1 f7       	brne	.-4      	; 0x21ac <LCD_VidClear+0xf6>
    21b0:	9a 83       	std	Y+2, r25	; 0x02
    21b2:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
}
    21b4:	2e 96       	adiw	r28, 0x0e	; 14
    21b6:	0f b6       	in	r0, 0x3f	; 63
    21b8:	f8 94       	cli
    21ba:	de bf       	out	0x3e, r29	; 62
    21bc:	0f be       	out	0x3f, r0	; 63
    21be:	cd bf       	out	0x3d, r28	; 61
    21c0:	cf 91       	pop	r28
    21c2:	df 91       	pop	r29
    21c4:	08 95       	ret

000021c6 <LCD_PrintDino>:
#include "Special.h"

u8 Dino_C[7][8]= Dino;

void LCD_PrintDino(void)
{
    21c6:	df 93       	push	r29
    21c8:	cf 93       	push	r28
    21ca:	0f 92       	push	r0
    21cc:	cd b7       	in	r28, 0x3d	; 61
    21ce:	de b7       	in	r29, 0x3e	; 62
	u8 count;
	for(count=0;count<7;count++)
    21d0:	19 82       	std	Y+1, r1	; 0x01
    21d2:	14 c0       	rjmp	.+40     	; 0x21fc <LCD_PrintDino+0x36>
	{
		LCD_VidSpecialChar(count,Dino_C[count]);
    21d4:	2b e7       	ldi	r18, 0x7B	; 123
    21d6:	31 e0       	ldi	r19, 0x01	; 1
    21d8:	89 81       	ldd	r24, Y+1	; 0x01
    21da:	88 2f       	mov	r24, r24
    21dc:	90 e0       	ldi	r25, 0x00	; 0
    21de:	88 0f       	add	r24, r24
    21e0:	99 1f       	adc	r25, r25
    21e2:	88 0f       	add	r24, r24
    21e4:	99 1f       	adc	r25, r25
    21e6:	88 0f       	add	r24, r24
    21e8:	99 1f       	adc	r25, r25
    21ea:	28 0f       	add	r18, r24
    21ec:	39 1f       	adc	r19, r25
    21ee:	89 81       	ldd	r24, Y+1	; 0x01
    21f0:	b9 01       	movw	r22, r18
    21f2:	0e 94 2c 10 	call	0x2058	; 0x2058 <LCD_VidSpecialChar>
u8 Dino_C[7][8]= Dino;

void LCD_PrintDino(void)
{
	u8 count;
	for(count=0;count<7;count++)
    21f6:	89 81       	ldd	r24, Y+1	; 0x01
    21f8:	8f 5f       	subi	r24, 0xFF	; 255
    21fa:	89 83       	std	Y+1, r24	; 0x01
    21fc:	89 81       	ldd	r24, Y+1	; 0x01
    21fe:	87 30       	cpi	r24, 0x07	; 7
    2200:	48 f3       	brcs	.-46     	; 0x21d4 <LCD_PrintDino+0xe>
	{
		LCD_VidSpecialChar(count,Dino_C[count]);
	}
	for(count=0;count<7;count++)
    2202:	19 82       	std	Y+1, r1	; 0x01
    2204:	1d c0       	rjmp	.+58     	; 0x2240 <LCD_PrintDino+0x7a>
	{
		if(count<4)
    2206:	89 81       	ldd	r24, Y+1	; 0x01
    2208:	84 30       	cpi	r24, 0x04	; 4
    220a:	50 f4       	brcc	.+20     	; 0x2220 <LCD_PrintDino+0x5a>
		{
			LCD_VidSendLocation(LINE_3,count+1);
    220c:	89 81       	ldd	r24, Y+1	; 0x01
    220e:	98 2f       	mov	r25, r24
    2210:	9f 5f       	subi	r25, 0xFF	; 255
    2212:	83 e0       	ldi	r24, 0x03	; 3
    2214:	69 2f       	mov	r22, r25
    2216:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <LCD_VidSendLocation>
			LCD_VidSendChar(count);
    221a:	89 81       	ldd	r24, Y+1	; 0x01
    221c:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <LCD_VidSendChar>
		}
		if(count>3)
    2220:	89 81       	ldd	r24, Y+1	; 0x01
    2222:	84 30       	cpi	r24, 0x04	; 4
    2224:	50 f0       	brcs	.+20     	; 0x223a <LCD_PrintDino+0x74>
		{
			LCD_VidSendLocation(LINE_4,count-3);
    2226:	89 81       	ldd	r24, Y+1	; 0x01
    2228:	98 2f       	mov	r25, r24
    222a:	93 50       	subi	r25, 0x03	; 3
    222c:	84 e0       	ldi	r24, 0x04	; 4
    222e:	69 2f       	mov	r22, r25
    2230:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <LCD_VidSendLocation>
			LCD_VidSendChar(count);
    2234:	89 81       	ldd	r24, Y+1	; 0x01
    2236:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <LCD_VidSendChar>
	u8 count;
	for(count=0;count<7;count++)
	{
		LCD_VidSpecialChar(count,Dino_C[count]);
	}
	for(count=0;count<7;count++)
    223a:	89 81       	ldd	r24, Y+1	; 0x01
    223c:	8f 5f       	subi	r24, 0xFF	; 255
    223e:	89 83       	std	Y+1, r24	; 0x01
    2240:	89 81       	ldd	r24, Y+1	; 0x01
    2242:	87 30       	cpi	r24, 0x07	; 7
    2244:	00 f3       	brcs	.-64     	; 0x2206 <LCD_PrintDino+0x40>
		{
			LCD_VidSendLocation(LINE_4,count-3);
			LCD_VidSendChar(count);
		}
	}
}
    2246:	0f 90       	pop	r0
    2248:	cf 91       	pop	r28
    224a:	df 91       	pop	r29
    224c:	08 95       	ret

0000224e <TIM0_VidInt>:
#include"TIMER.h"

static void (*TIM_FUN[2])(void);

void TIM0_VidInt()
{
    224e:	df 93       	push	r29
    2250:	cf 93       	push	r28
    2252:	cd b7       	in	r28, 0x3d	; 61
    2254:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TCCR0,CS01);
	CLEAR_BIT(TCCR0,CS02);

#elif Mode==CTC
	/*CTC MODE*/
	CLEAR_BIT(TCCR0,WGM00);
    2256:	a3 e5       	ldi	r26, 0x53	; 83
    2258:	b0 e0       	ldi	r27, 0x00	; 0
    225a:	e3 e5       	ldi	r30, 0x53	; 83
    225c:	f0 e0       	ldi	r31, 0x00	; 0
    225e:	80 81       	ld	r24, Z
    2260:	8f 7b       	andi	r24, 0xBF	; 191
    2262:	8c 93       	st	X, r24
	SET_BIT(TCCR0,WGM01);
    2264:	a3 e5       	ldi	r26, 0x53	; 83
    2266:	b0 e0       	ldi	r27, 0x00	; 0
    2268:	e3 e5       	ldi	r30, 0x53	; 83
    226a:	f0 e0       	ldi	r31, 0x00	; 0
    226c:	80 81       	ld	r24, Z
    226e:	88 60       	ori	r24, 0x08	; 8
    2270:	8c 93       	st	X, r24
	/*Compare Match interrupt*/
	SET_BIT(TIMSK,OCIE0);
    2272:	a9 e5       	ldi	r26, 0x59	; 89
    2274:	b0 e0       	ldi	r27, 0x00	; 0
    2276:	e9 e5       	ldi	r30, 0x59	; 89
    2278:	f0 e0       	ldi	r31, 0x00	; 0
    227a:	80 81       	ld	r24, Z
    227c:	82 60       	ori	r24, 0x02	; 2
    227e:	8c 93       	st	X, r24
	/*CTC value*/
	OCR0=250;
    2280:	ec e5       	ldi	r30, 0x5C	; 92
    2282:	f0 e0       	ldi	r31, 0x00	; 0
    2284:	8a ef       	ldi	r24, 0xFA	; 250
    2286:	80 83       	st	Z, r24
	/*CLK /8 */
	CLEAR_BIT(TCCR0,CS00);
    2288:	a3 e5       	ldi	r26, 0x53	; 83
    228a:	b0 e0       	ldi	r27, 0x00	; 0
    228c:	e3 e5       	ldi	r30, 0x53	; 83
    228e:	f0 e0       	ldi	r31, 0x00	; 0
    2290:	80 81       	ld	r24, Z
    2292:	8e 7f       	andi	r24, 0xFE	; 254
    2294:	8c 93       	st	X, r24
	SET_BIT(TCCR0,CS01);
    2296:	a3 e5       	ldi	r26, 0x53	; 83
    2298:	b0 e0       	ldi	r27, 0x00	; 0
    229a:	e3 e5       	ldi	r30, 0x53	; 83
    229c:	f0 e0       	ldi	r31, 0x00	; 0
    229e:	80 81       	ld	r24, Z
    22a0:	82 60       	ori	r24, 0x02	; 2
    22a2:	8c 93       	st	X, r24
	CLEAR_BIT(TCCR0,CS02);
    22a4:	a3 e5       	ldi	r26, 0x53	; 83
    22a6:	b0 e0       	ldi	r27, 0x00	; 0
    22a8:	e3 e5       	ldi	r30, 0x53	; 83
    22aa:	f0 e0       	ldi	r31, 0x00	; 0
    22ac:	80 81       	ld	r24, Z
    22ae:	8b 7f       	andi	r24, 0xFB	; 251
    22b0:	8c 93       	st	X, r24
#endif

}
    22b2:	cf 91       	pop	r28
    22b4:	df 91       	pop	r29
    22b6:	08 95       	ret

000022b8 <TIM0_SetCallBack>:

void TIM0_SetCallBack(void(*Copy_Tim0)(void),u8 Copy_Mode)
{
    22b8:	df 93       	push	r29
    22ba:	cf 93       	push	r28
    22bc:	00 d0       	rcall	.+0      	; 0x22be <TIM0_SetCallBack+0x6>
    22be:	0f 92       	push	r0
    22c0:	cd b7       	in	r28, 0x3d	; 61
    22c2:	de b7       	in	r29, 0x3e	; 62
    22c4:	9a 83       	std	Y+2, r25	; 0x02
    22c6:	89 83       	std	Y+1, r24	; 0x01
    22c8:	6b 83       	std	Y+3, r22	; 0x03
	TIM_FUN[Copy_Mode]=Copy_Tim0;
    22ca:	8b 81       	ldd	r24, Y+3	; 0x03
    22cc:	88 2f       	mov	r24, r24
    22ce:	90 e0       	ldi	r25, 0x00	; 0
    22d0:	88 0f       	add	r24, r24
    22d2:	99 1f       	adc	r25, r25
    22d4:	fc 01       	movw	r30, r24
    22d6:	e8 54       	subi	r30, 0x48	; 72
    22d8:	fe 4f       	sbci	r31, 0xFE	; 254
    22da:	89 81       	ldd	r24, Y+1	; 0x01
    22dc:	9a 81       	ldd	r25, Y+2	; 0x02
    22de:	91 83       	std	Z+1, r25	; 0x01
    22e0:	80 83       	st	Z, r24
}
    22e2:	0f 90       	pop	r0
    22e4:	0f 90       	pop	r0
    22e6:	0f 90       	pop	r0
    22e8:	cf 91       	pop	r28
    22ea:	df 91       	pop	r29
    22ec:	08 95       	ret

000022ee <__vector_11>:

ISR(TIMER0_OVF_vect)
{
    22ee:	1f 92       	push	r1
    22f0:	0f 92       	push	r0
    22f2:	0f b6       	in	r0, 0x3f	; 63
    22f4:	0f 92       	push	r0
    22f6:	11 24       	eor	r1, r1
    22f8:	2f 93       	push	r18
    22fa:	3f 93       	push	r19
    22fc:	4f 93       	push	r20
    22fe:	5f 93       	push	r21
    2300:	6f 93       	push	r22
    2302:	7f 93       	push	r23
    2304:	8f 93       	push	r24
    2306:	9f 93       	push	r25
    2308:	af 93       	push	r26
    230a:	bf 93       	push	r27
    230c:	ef 93       	push	r30
    230e:	ff 93       	push	r31
    2310:	df 93       	push	r29
    2312:	cf 93       	push	r28
    2314:	cd b7       	in	r28, 0x3d	; 61
    2316:	de b7       	in	r29, 0x3e	; 62
	static u16 counter=0;
	counter++;
    2318:	80 91 b4 01 	lds	r24, 0x01B4
    231c:	90 91 b5 01 	lds	r25, 0x01B5
    2320:	01 96       	adiw	r24, 0x01	; 1
    2322:	90 93 b5 01 	sts	0x01B5, r25
    2326:	80 93 b4 01 	sts	0x01B4, r24

	if(counter==800)
    232a:	80 91 b4 01 	lds	r24, 0x01B4
    232e:	90 91 b5 01 	lds	r25, 0x01B5
    2332:	23 e0       	ldi	r18, 0x03	; 3
    2334:	80 32       	cpi	r24, 0x20	; 32
    2336:	92 07       	cpc	r25, r18
    2338:	69 f4       	brne	.+26     	; 0x2354 <__vector_11+0x66>
	{
		counter=0;
    233a:	10 92 b5 01 	sts	0x01B5, r1
    233e:	10 92 b4 01 	sts	0x01B4, r1
		TCNT0=192;
    2342:	e2 e5       	ldi	r30, 0x52	; 82
    2344:	f0 e0       	ldi	r31, 0x00	; 0
    2346:	80 ec       	ldi	r24, 0xC0	; 192
    2348:	80 83       	st	Z, r24
		TIM_FUN[0]();
    234a:	e0 91 b8 01 	lds	r30, 0x01B8
    234e:	f0 91 b9 01 	lds	r31, 0x01B9
    2352:	09 95       	icall
	}
}
    2354:	cf 91       	pop	r28
    2356:	df 91       	pop	r29
    2358:	ff 91       	pop	r31
    235a:	ef 91       	pop	r30
    235c:	bf 91       	pop	r27
    235e:	af 91       	pop	r26
    2360:	9f 91       	pop	r25
    2362:	8f 91       	pop	r24
    2364:	7f 91       	pop	r23
    2366:	6f 91       	pop	r22
    2368:	5f 91       	pop	r21
    236a:	4f 91       	pop	r20
    236c:	3f 91       	pop	r19
    236e:	2f 91       	pop	r18
    2370:	0f 90       	pop	r0
    2372:	0f be       	out	0x3f, r0	; 63
    2374:	0f 90       	pop	r0
    2376:	1f 90       	pop	r1
    2378:	18 95       	reti

0000237a <__vector_10>:


ISR(TIMER0_COMP_vect)
{
    237a:	1f 92       	push	r1
    237c:	0f 92       	push	r0
    237e:	0f b6       	in	r0, 0x3f	; 63
    2380:	0f 92       	push	r0
    2382:	11 24       	eor	r1, r1
    2384:	2f 93       	push	r18
    2386:	3f 93       	push	r19
    2388:	4f 93       	push	r20
    238a:	5f 93       	push	r21
    238c:	6f 93       	push	r22
    238e:	7f 93       	push	r23
    2390:	8f 93       	push	r24
    2392:	9f 93       	push	r25
    2394:	af 93       	push	r26
    2396:	bf 93       	push	r27
    2398:	ef 93       	push	r30
    239a:	ff 93       	push	r31
    239c:	df 93       	push	r29
    239e:	cf 93       	push	r28
    23a0:	cd b7       	in	r28, 0x3d	; 61
    23a2:	de b7       	in	r29, 0x3e	; 62
	static u16 count=0;
	count++;
    23a4:	80 91 b6 01 	lds	r24, 0x01B6
    23a8:	90 91 b7 01 	lds	r25, 0x01B7
    23ac:	01 96       	adiw	r24, 0x01	; 1
    23ae:	90 93 b7 01 	sts	0x01B7, r25
    23b2:	80 93 b6 01 	sts	0x01B6, r24
	if(count==800)
    23b6:	80 91 b6 01 	lds	r24, 0x01B6
    23ba:	90 91 b7 01 	lds	r25, 0x01B7
    23be:	23 e0       	ldi	r18, 0x03	; 3
    23c0:	80 32       	cpi	r24, 0x20	; 32
    23c2:	92 07       	cpc	r25, r18
    23c4:	49 f4       	brne	.+18     	; 0x23d8 <__vector_10+0x5e>
	{
		count=0;
    23c6:	10 92 b7 01 	sts	0x01B7, r1
    23ca:	10 92 b6 01 	sts	0x01B6, r1
		TIM_FUN[1]();
    23ce:	e0 91 ba 01 	lds	r30, 0x01BA
    23d2:	f0 91 bb 01 	lds	r31, 0x01BB
    23d6:	09 95       	icall
	}

}
    23d8:	cf 91       	pop	r28
    23da:	df 91       	pop	r29
    23dc:	ff 91       	pop	r31
    23de:	ef 91       	pop	r30
    23e0:	bf 91       	pop	r27
    23e2:	af 91       	pop	r26
    23e4:	9f 91       	pop	r25
    23e6:	8f 91       	pop	r24
    23e8:	7f 91       	pop	r23
    23ea:	6f 91       	pop	r22
    23ec:	5f 91       	pop	r21
    23ee:	4f 91       	pop	r20
    23f0:	3f 91       	pop	r19
    23f2:	2f 91       	pop	r18
    23f4:	0f 90       	pop	r0
    23f6:	0f be       	out	0x3f, r0	; 63
    23f8:	0f 90       	pop	r0
    23fa:	1f 90       	pop	r1
    23fc:	18 95       	reti

000023fe <main>:
#include "Special.h"
#include "TIMER.h"


int main(void)
{
    23fe:	df 93       	push	r29
    2400:	cf 93       	push	r28
    2402:	cd b7       	in	r28, 0x3d	; 61
    2404:	de b7       	in	r29, 0x3e	; 62
	LCD_VidInt();
    2406:	0e 94 cb 0d 	call	0x1b96	; 0x1b96 <LCD_VidInt>
	KPD_VidInt();
    240a:	0e 94 13 0a 	call	0x1426	; 0x1426 <KPD_VidInt>

	while(1)
	{
		LCD_PrintDino();
    240e:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <LCD_PrintDino>
    2412:	fd cf       	rjmp	.-6      	; 0x240e <main+0x10>

00002414 <__udivmodhi4>:
    2414:	aa 1b       	sub	r26, r26
    2416:	bb 1b       	sub	r27, r27
    2418:	51 e1       	ldi	r21, 0x11	; 17
    241a:	07 c0       	rjmp	.+14     	; 0x242a <__udivmodhi4_ep>

0000241c <__udivmodhi4_loop>:
    241c:	aa 1f       	adc	r26, r26
    241e:	bb 1f       	adc	r27, r27
    2420:	a6 17       	cp	r26, r22
    2422:	b7 07       	cpc	r27, r23
    2424:	10 f0       	brcs	.+4      	; 0x242a <__udivmodhi4_ep>
    2426:	a6 1b       	sub	r26, r22
    2428:	b7 0b       	sbc	r27, r23

0000242a <__udivmodhi4_ep>:
    242a:	88 1f       	adc	r24, r24
    242c:	99 1f       	adc	r25, r25
    242e:	5a 95       	dec	r21
    2430:	a9 f7       	brne	.-22     	; 0x241c <__udivmodhi4_loop>
    2432:	80 95       	com	r24
    2434:	90 95       	com	r25
    2436:	bc 01       	movw	r22, r24
    2438:	cd 01       	movw	r24, r26
    243a:	08 95       	ret

0000243c <__prologue_saves__>:
    243c:	2f 92       	push	r2
    243e:	3f 92       	push	r3
    2440:	4f 92       	push	r4
    2442:	5f 92       	push	r5
    2444:	6f 92       	push	r6
    2446:	7f 92       	push	r7
    2448:	8f 92       	push	r8
    244a:	9f 92       	push	r9
    244c:	af 92       	push	r10
    244e:	bf 92       	push	r11
    2450:	cf 92       	push	r12
    2452:	df 92       	push	r13
    2454:	ef 92       	push	r14
    2456:	ff 92       	push	r15
    2458:	0f 93       	push	r16
    245a:	1f 93       	push	r17
    245c:	cf 93       	push	r28
    245e:	df 93       	push	r29
    2460:	cd b7       	in	r28, 0x3d	; 61
    2462:	de b7       	in	r29, 0x3e	; 62
    2464:	ca 1b       	sub	r28, r26
    2466:	db 0b       	sbc	r29, r27
    2468:	0f b6       	in	r0, 0x3f	; 63
    246a:	f8 94       	cli
    246c:	de bf       	out	0x3e, r29	; 62
    246e:	0f be       	out	0x3f, r0	; 63
    2470:	cd bf       	out	0x3d, r28	; 61
    2472:	09 94       	ijmp

00002474 <__epilogue_restores__>:
    2474:	2a 88       	ldd	r2, Y+18	; 0x12
    2476:	39 88       	ldd	r3, Y+17	; 0x11
    2478:	48 88       	ldd	r4, Y+16	; 0x10
    247a:	5f 84       	ldd	r5, Y+15	; 0x0f
    247c:	6e 84       	ldd	r6, Y+14	; 0x0e
    247e:	7d 84       	ldd	r7, Y+13	; 0x0d
    2480:	8c 84       	ldd	r8, Y+12	; 0x0c
    2482:	9b 84       	ldd	r9, Y+11	; 0x0b
    2484:	aa 84       	ldd	r10, Y+10	; 0x0a
    2486:	b9 84       	ldd	r11, Y+9	; 0x09
    2488:	c8 84       	ldd	r12, Y+8	; 0x08
    248a:	df 80       	ldd	r13, Y+7	; 0x07
    248c:	ee 80       	ldd	r14, Y+6	; 0x06
    248e:	fd 80       	ldd	r15, Y+5	; 0x05
    2490:	0c 81       	ldd	r16, Y+4	; 0x04
    2492:	1b 81       	ldd	r17, Y+3	; 0x03
    2494:	aa 81       	ldd	r26, Y+2	; 0x02
    2496:	b9 81       	ldd	r27, Y+1	; 0x01
    2498:	ce 0f       	add	r28, r30
    249a:	d1 1d       	adc	r29, r1
    249c:	0f b6       	in	r0, 0x3f	; 63
    249e:	f8 94       	cli
    24a0:	de bf       	out	0x3e, r29	; 62
    24a2:	0f be       	out	0x3f, r0	; 63
    24a4:	cd bf       	out	0x3d, r28	; 61
    24a6:	ed 01       	movw	r28, r26
    24a8:	08 95       	ret

000024aa <_exit>:
    24aa:	f8 94       	cli

000024ac <__stop_program>:
    24ac:	ff cf       	rjmp	.-2      	; 0x24ac <__stop_program>
